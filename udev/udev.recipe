#
# Copyright (c) 2004-2007 rPath, Inc.
#1;1704;0c This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Udev(RPMPackageRecipe,CPackageRecipe):
    name = 'udev'
    version = '137'
    rpmRelease = '4.fc11'

    buildRequires = [ 'sysfsutils:devel', 'pkgconfig:devel', 'glib:runtime',
                      'bison:runtime', 'pam:devel', 'chkconfig:runtime', 'libxslt:runtime' ]

    rpmPatches = [ 'udev-137-vol_id1.patch',
                   'udev-137-vol_id2.patch',
                   'udev-137-mdremove.patch',
                   'udev-118-sysconf.patch',
                   ]

    rpmSources = [ 'udev-post.init',
                   'start_udev',
                   'fw_unit_symlinks.sh',
                   'udev.sysconfig'
                   ]

    def setup(r):
        r.macros.debug = 'false'

        r.unpack()
        # addons and extra features

        r.Remove('rules/redhat/95-pam-console.rules')

        r.macros.udev_scriptdir='/lib/udev'

        # Make the static binaries...
        r.Configure(' --prefix=%(prefix)s --exec-prefix="" --sysconfdir=%(sysconfdir)s --with-libdir-name=%(lib)s  --sbindir="/sbin" --enable-static')
        r.Make('LDFLAGS="-all-static"')

        for t in [ 'udev/udevd',
                   'udev/udevadm',
                   'extras/scsi_id/scsi_id',
                   'extras/ata_id/ata_id',
                   'extras/edd_id/edd_id',
                   'extras/usb_id/usb_id',
                   'extras/cdrom_id/cdrom_id',
                   'extras/volume_id/vol_id',
                   'extras/floppy/create_floppy_devices',
                   ]:
            r.Move(t,t+'.static')

        r.Make('clean')
        r.Make()
        r.MakeInstall()
        for d in ( '%(sysconfdir)s/udev/udev.rules',
                   '%(sysconfdir)s/init.d/udev',
                   '%(sysconfdir)s/hotplug.d/default/10-udev.hotplug'):
            r.Remove(d, recursive = True)

        # Deprecated, but keep the ownership
        r.MakeDirs('%(sysconfdir)s/udev/{rules.d,scripts,devices,makedev.d}')
        r.MakeDirs('%(sysconfdir)s/dev.d/')

        # force relative symlinks
        r.Symlink('/lib/udev/scsi_id', '/sbin/scsi_id')
        r.Symlink('%(essentiallibdir)s/libvolume_id.so.1', '%(libdir)s/libvolume_id.so')

        for x in [ 'udevinfo', 'udevtest']:
            r.Symlink('/sbin/udevadm', '%(bindir)s/' + x)

        for x in [ 'udevmonitor']:
            r.Symlink('/sbin/udevadm', '%(sbindir)s/' + x)

        for x in [ 'udevtrigger', 'udevsettle', 'udevcontrol']:
            r.Symlink('/sbin/udevadm', '/sbin/' + x)

        for t in [
                  'extras/scsi_id/scsi_id',
                  'extras/ata_id/ata_id',
                  'extras/edd_id/edd_id',
                  'extras/usb_id/usb_id',
                  'extras/volume_id/vol_id',
                  'extras/floppy/create_floppy_devices']:
            r.Install(t + '.static', '%(udev_scriptdir)s/' + t.rsplit('/')[-1] +'.static', mode = 0755)

        for t in ['udev/udevd',
                  'udev/udevadm', ]:
            r.Install(t+'.static', '%(essentialsbindir)s/'+ t.rsplit('/')[-1] +'.static', mode = 0755)

        # These rules should do...
        for x in ( 'rules/redhat/40-redhat.rules',
                   'rules/packages/40-alsa.rules',
                   'rules/packages/64-md-raid.rules',
                   'rules/packages/64-device-mapper.rules'):
            r.Install( x , '%(udev_scriptdir)s/rules.d/', mode = 0644)


        r.MakeDirs('%(sysconfdir)s/udev/devices')

        r.MakeDirs('%(udev_scriptdir)s/{,devices}')
        r.MakeDirs('%(datadir)s/udev')
        r.MakeDirs('/lib/firmware', mode = 0755)

        r.Install('fw_unit_symlinks.sh', '%(udev_scriptdir)s/fw_unit_symlinks.sh', mode=0755)

        r.Install('start_udev', '%(essentialsbindir)s/')

        # short-term workaround
        r.MakeDirs('%(sysconfdir)s/modprobe.d', mode = 0755)
        r.Create('%(sysconfdir)s/modprobe.d/floppy-pnp', contents = """
alias pnp:dPNP0700 floppy
""")

        r.MakeDirs('%(initdir)s')
        r.MakeDirs('/var/lib/udev/makedev.d')

        r.Install('udev-post.init', '%(initdir)s/udev-post', mode = 0755)

        r.Install('udev.sysconfig', '%(sysconfdir)s/syconfig/udev', mode = 0755)

        for g in ['cdrom', 'tape', 'dialout', 'video', 'audio']:
            r.UtilizeGroup(g, '/sbin/udevd')

        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/rules.d')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/scripts')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/devices')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/makedev.d')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/dev.d')
        r.ExcludeDirectories(exceptions='/lib/firmware')
        r.ExcludeDirectories(exceptions='/lib/udev/devices')
        r.ExcludeDirectories(exceptions='/usr/share/udev')
        r.ExcludeDirectories(exceptions='/var/lib/udev/makedev.d')


        # FIXME: find a better way, if any
        r.addSource('udev.tagdescription', macros=True,
                    dest='%(tagdescriptiondir)s/udev')
        r.addSource('udev.taghandler', macros=True,
                    dest='%(taghandlerdir)s/udev', mode=0755)

        r.Requires('file: /sbin/pidof', '%(taghandlerdir)s/udev')

        r.TagSpec('udev', '/sbin/udevd')

