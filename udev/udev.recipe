#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Udev(RPMPackageRecipe,CPackageRecipe):
    name = 'udev'
    version = '153'
    rpmRelease = '5.fc13'

    buildRequires = [ 'sysfsutils:devel', 'pkgconfig:devel', 'glib:runtime',
                      'bison:runtime', 'pam:devel', 'chkconfig:runtime', 'libxslt:runtime',
                      'gperf:runtime', 'usbutils:runtime', 'usbutils:devellib',
                      'hwdata:data', 'gtk-doc:runtime',
                      'gobject-introspection:devel',
                      'gobject-introspection:python',
                      'acl:devel', 'glib:devel', 'libusb:devel', 'autoconf:runtime', 
                      'automake:runtime', 'libtool:runtime', 'libtool:devel' ]
    # until we rely on rRPL's glibc (2.5) 
    buildRequires += ['kernel:build-tree', ]

    rpmPatches = [ '0017-udev-acl-properly-handle-CK-change-events-for-root-u.patch',
                   '0018-udev-acl-really-fix-ACL-assignment-in-CK-events.patch',
                   '0034-add-LGPL-COPYING-to-libudev-and-GUdev.patch',
                   '0110-cdrom_id-only-mark-sr-0-9-as-ID_CDROM.patch',
                   'udev-151-rules.patch',
                   'udev-153-n210.patch',
                   'udev-151-gperf.patch',
                   'udev-git484e1b2d11b9b89418589d885a625e647881933b.patch',
                   'udev-153-changer.patch',
                   'udev-153-trigger.patch',
                   '0001-set-SELinux-context-on-add-but-not-on-change-events.patch',
                   'udev-153-keymap-backport.patch',
                   'udev-153-cdrom_id-backport.patch',
                   ]

    rpmSources = [ 'udev-post.init',
                   'start_udev',
                   'fw_unit_symlinks.sh',
                   'udev.sysconfig',

                   '40-isdn.rules', 
                   '64-md-raid.rules',
                   '64-device-mapper.rules',
                   ]


    def setup(r):
        r.macros.debug = 'false'

        r.unpack()

        # addons and extra features
        
        r.macros.udev_scriptdir='/lib/udev'
        r.Run('autoreconf -i; automake; libtoolize -f -c')

        r.Configure(' --prefix=%(prefix)s '
                    ' --exec-prefix="" '
                    ' --sysconfdir=%(sysconfdir)s '
                    ' --with-libdir-name=%(lib)s '
                    ' --sbindir="%(essentialsbindir)s"'
                    ' --with-rootlibdir=/%(lib)s'
                    ' --libexecdir=%(udev_scriptdir)s'
                    ' --disable-rpath '
                    ' --enable-debug '
                    ' --enable-static '
                    ' --enable-introspection')

        r.Make()
        r.MakeInstall()


        # Deprecated, but keep the ownership
        r.MakeDirs('%(sysconfdir)s/udev/{rules.d,scripts,devices,makedev.d}')
        r.MakeDirs('%(sysconfdir)s/dev.d/')
        r.Create('%(sysconfdir)s/scsi_id.config')

        # force relative symlinks
        r.Symlink('/lib/udev/scsi_id', '/sbin/scsi_id')

#        for x in [ 'udevinfo', 'udevtest']:
#            r.Symlink('/sbin/udevadm', '%(bindir)s/' + x)

#        for x in [ 'udevmonitor']:
#            r.Symlink('/sbin/udevadm', '%(sbindir)s/' + x)

#        for x in [ 'udevtrigger', 'udevsettle', 'udevcontrol']:
#            r.Symlink('/sbin/udevadm', '/sbin/' + x)


        # These rules should do...
        for x in ( 'rules/redhat/40-redhat.rules',
                   '40-isdn.rules', 
                   '64-md-raid.rules',
                   '64-device-mapper.rules',
                   ):
            r.Install( x , '%(udev_scriptdir)s/rules.d/', mode = 0644)

        r.MakeDirs('%(sysconfdir)s/udev/devices')
        r.Install('fw_unit_symlinks.sh', '%(udev_scriptdir)s/fw_unit_symlinks.sh', mode=0755)


        r.MakeDirs('%(udev_scriptdir)s/{,devices}')
        r.MakeDirs('%(datadir)s/udev')
        r.MakeDirs('/lib/firmware', mode = 0755)

        r.Install('start_udev', '%(essentialsbindir)s/')

        r.MakeDirs('%(initdir)s')
        r.MakeDirs('/var/lib/udev/makedev.d')

        r.Install('udev-post.init', '%(initdir)s/udev-post', mode = 0755)

        r.Install('udev.sysconfig', '%(sysconfdir)s/sysconfig/udev', mode = 0755)

        for g in ['cdrom', 'tape', 'dialout', 'video', 'audio']:
            r.UtilizeGroup(g, '/sbin/udevd')

        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/rules.d')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/scripts')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/devices')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/udev/makedev.d')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/dev.d')
        r.ExcludeDirectories(exceptions='/lib/firmware')
        r.ExcludeDirectories(exceptions='/lib/udev/devices')
        r.ExcludeDirectories(exceptions='/usr/share/udev')
        r.ExcludeDirectories(exceptions='/var/lib/udev/makedev.d')


        # FIXME: find a better way, if any
        r.addSource('udev.tagdescription', macros=True,
                    dest='%(tagdescriptiondir)s/udev')
        r.addSource('udev.taghandler', macros=True,
                    dest='%(taghandlerdir)s/udev', mode=0755)

        r.Requires('file: /sbin/pidof', '%(taghandlerdir)s/udev')

        r.TagSpec('udev', '/sbin/udevd')

        r.ComponentSpec('data', '/lib/udev/rules.d/.*')
        r.ComponentSpec('runtime', '/lib/udev/.*')
        # to avoid clashes in :lib under multilib setups
        r.ComponentSpec('runtime', '/usr/lib/ConsoleKit/.*')


        r.NonBinariesInBindirs(exceptions='%(udev_scriptdir)s/.*')

    
