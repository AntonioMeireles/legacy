From: Danny Kukawka <danny.kukawka@web.de>
Date: Fri, 13 Oct 2006 09:46:03 +0000 (+0200)
Subject: replaced LIBHAL_FREE_DBUS_ERROR with dbus_error_free()
X-Git-Url: http://gitweb.freedesktop.org/?p=hal.git;a=commitdiff;h=0a9965e4aa4ffc2f382d7fe1286937308439fd1f

replaced LIBHAL_FREE_DBUS_ERROR with dbus_error_free()

Replaced _again_ usage of macro LIBHAL_FREE_DBUS_ERROR with
dbus_error_free().

NOTE: If you use dbus_error_is_set() to check if the error is set,
      you should not use LIBHAL_FREE_DBUS_ERROR to free the error.
      Better use dbus_error_free() directly in this case to avoid
      double call of dbus_error_is_set().
---

--- a/tools/hal-device.c
+++ b/tools/hal-device.c
@@ -142,7 +142,7 @@ int main(int argc, char **argv)
 	if (!libhal_ctx_init(hal_ctx, &error)) {
 		if (dbus_error_is_set(&error)) {
 			fprintf (stderr, "error: libhal_ctx_init: %s: %s\n", error.name, error.message);
-			LIBHAL_FREE_DBUS_ERROR (&error);
+			dbus_error_free (&error);
 		}
 		fprintf (stderr, "Could not initialise connection to hald.\n"
 				 "Normally this means the HAL daemon (hald) is not running or not ready.\n");
--- a/tools/hal_find_by_property.c
+++ b/tools/hal_find_by_property.c
@@ -156,7 +156,7 @@ main (int argc, char *argv[])
 	if (!libhal_ctx_init (hal_ctx, &error)) {
 		if (dbus_error_is_set(&error)) {
 			fprintf (stderr, "error: libhal_ctx_init: %s: %s\n", error.name, error.message);
-			LIBHAL_FREE_DBUS_ERROR (&error);
+			dbus_error_free (&error);
 		}
 		fprintf (stderr, "Could not initialise connection to hald.\n"
 				 "Normally this means the HAL daemon (hald) is not running or not ready.\n");
@@ -168,7 +168,7 @@ main (int argc, char *argv[])
 
 	if (dbus_error_is_set (&error)) {
 		fprintf (stderr, "error: %s: %s\n", error.name, error.message);
-		LIBHAL_FREE_DBUS_ERROR (&error);
+		dbus_error_free (&error);
 		return 1;
 	}
 
--- a/tools/hal_get_property.c
+++ b/tools/hal_get_property.c
@@ -165,7 +165,7 @@ main (int argc, char *argv[])
 	if (!libhal_ctx_init (hal_ctx, &error)) {
 		if (dbus_error_is_set(&error)) {
 			fprintf (stderr, "error: libhal_ctx_init: %s: %s\n", error.name, error.message);
-			LIBHAL_FREE_DBUS_ERROR (&error);
+			dbus_error_free (&error);
 		}
 		fprintf (stderr, "Could not initialise connection to hald.\n"
 				 "Normally this means the HAL daemon (hald) is not running or not ready.\n");
--- a/tools/hal_set_property.c
+++ b/tools/hal_set_property.c
@@ -232,7 +232,7 @@ main (int argc, char *argv[])
 	if (!libhal_ctx_init (hal_ctx, &error)) {
 		if (dbus_error_is_set(&error)) {
 			fprintf (stderr, "error: libhal_ctx_init: %s: %s\n", error.name, error.message);
-			LIBHAL_FREE_DBUS_ERROR (&error);
+			dbus_error_free (&error);
 		}
 		fprintf (stderr, "Could not initialise connection to hald.\n"
 				 "Normally this means the HAL daemon (hald) is not running or not ready.\n");
--- a/tools/lshal.c
+++ b/tools/lshal.c
@@ -684,7 +684,7 @@ main (int argc, char *argv[])
 	if (!libhal_ctx_init (hal_ctx, &error)) {
 		if (dbus_error_is_set(&error)) {
 			fprintf (stderr, "error: libhal_ctx_init: %s: %s\n", error.name, error.message);
-			LIBHAL_FREE_DBUS_ERROR (&error);
+			dbus_error_free (&error);
 		}
 		fprintf (stderr, "Could not initialise connection to hald.\n"
 				 "Normally this means the HAL daemon (hald) is not running or not ready.\n");


