diff -ruN hal-0.4.7-old/hald/linux/lsb_release.c hal-0.4.7/hald/linux/lsb_release.c
--- hal-0.4.7-old/hald/linux/lsb_release.c	1970-01-01 01:00:00.000000000 +0100
+++ hal-0.4.7/hald/linux/lsb_release.c	2005-02-14 12:08:47.776902376 +0100
@@ -0,0 +1,115 @@
+/***************************************************************************
+ *
+ * Copyright (C) 2005 Oliver Grawert (ogra) <hostmaster@grawert.net>
+ *
+ * Licensed under the GPL version 2 license.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ **************************************************************************/
+
+#include <stdio.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include "lsb_release.h"
+#include "../logger.h"
+
+void lsb_release_refresh_info (HalDevice*);
+
+/* add the lsb_release data to the 
+ * root device d 
+ */
+void
+lsb_release_init (HalDevice* d)
+{
+	HAL_INFO (("adding lsb data"));
+	
+	lsb_release_refresh_info (d);
+}
+
+/* subfunction to recieve and add 
+ * the lsb_release data to the hal 
+ * root device. this function should not 
+ * be called directly
+ */
+void 
+lsb_release_refresh_info (HalDevice* d)
+{
+	gchar *argv[] = {"lsb_release", "-a", (gchar *)0};
+	gchar *cmd = "/bin/lsb_release";
+	gchar line[1000], **keyval, *key, *keylower;
+	int fds[2], devnullfd;
+	FILE *handle;
+
+	/* open the pipe */
+	pipe (fds);
+
+	handle = fdopen (fds[0], "r");
+
+	/* initialize */
+	devnullfd = open ("/dev/null", O_RDONLY);
+
+	/* fork the child process */
+	if (fork() == 0)
+	{
+		/* copy the descriptors */
+		dup2 (devnullfd, STDIN_FILENO);
+		dup2 (fds[1], STDOUT_FILENO);
+
+
+		/* close the unused descriptors */
+	  	close (fds[0]);
+		close (fds[1]);
+
+		/* run child */
+		execv (cmd, argv);
+
+		HAL_ERROR (("error forking lsb_release"));
+		return;
+	}
+
+	close (fds[1]);
+
+	while(fgets(line, sizeof(line), handle))
+	{
+		if( strlen(line) == sizeof(line)-1) 
+		{
+			HAL_ERROR (("lsb_release input abnormal end"));
+			break;
+		}
+      
+      		/* split line at : */
+		keyval = g_strsplit(line, ":", 2);
+      
+		if (keyval[0])
+		{
+      			/* replace spaces in key with _ */
+			keyval[0] = g_strdelimit (keyval[0], " ", '_');
+      
+      			/* glue the key together */
+			key = g_strconcat ("linux.sysinfo.lsb.", keyval[0], NULL);
+      
+      			/* make sure the key is lowercase */
+			keylower = g_utf8_strdown (key, -1);
+			g_free(key);
+      		
+			if (keyval[1] ) 
+			{
+      				/* strip leading whitespace */
+				g_strstrip (keyval[1]);
+      
+     	 			/* throw the data to hal */
+				hal_device_property_set_string (d, keylower, keyval[1]);
+			}
+			g_free(keylower);
+		}
+		g_strfreev(keyval);
+	}
+	close (fds[0]);
+}	
diff -ruN hal-0.4.7-old/hald/linux/lsb_release.h hal-0.4.7/hald/linux/lsb_release.h
--- hal-0.4.7-old/hald/linux/lsb_release.h	1970-01-01 01:00:00.000000000 +0100
+++ hal-0.4.7/hald/linux/lsb_release.h	2005-02-14 12:08:47.777902224 +0100
@@ -0,0 +1,29 @@
+/***************************************************************************
+ *
+ * Copyright (C) 2005 Oliver Grawert (ogra) <hostmaster@grawert.net>
+ *
+ * Licensed under the GPL version 2 license.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ **************************************************************************/
+
+#ifdef HAVE_CONFIG_H
+#  include <config.h>
+#endif
+
+#include "../hald.h"
+
+/* lsb_release_init calls 
+ * /bin/lsb_release -a to obtain the lsb compliant
+ * distribution data about vendor, codename and
+ * release number. it should be called with the 
+ * hal root device as parameter to add its 
+ * information there, but can be used with any 
+ * other initialized hal device. errors are 
+ * logged via HAL_ERROR */
+
+void lsb_release_init(HalDevice*);
diff -ruN hal-0.4.7-old/hald/linux/osspec.c hal-0.4.7/hald/linux/osspec.c
--- hal-0.4.7-old/hald/linux/osspec.c	2005-01-23 22:57:01.000000000 +0100
+++ hal-0.4.7/hald/linux/osspec.c	2005-02-14 12:08:47.779901920 +0100
@@ -63,6 +63,9 @@
 
 #include "libsysfs/libsysfs.h"
 
+/* lsb_patch */
+#include "lsb_release.h"
+
 /** How many ms to sleep on first hotplug event (to queue up other hotplug events) */
 #define FIRST_HOTPLUG_SLEEP 3500
 
@@ -908,6 +911,9 @@
 		hal_device_property_set_string (root, "kernel.machine", un.machine);
 	}
 
+	if ( g_file_test("/bin/lsb_release", G_FILE_TEST_IS_EXECUTABLE) )
+		lsb_release_init(root);
+
 #ifdef HAVE_SELINUX
 	if (is_selinux_enabled()) {
 /*
diff -ruN hal-0.4.7-old/hald/Makefile.am hal-0.4.7/hald/Makefile.am
--- hal-0.4.7-old/hald/Makefile.am	2005-01-22 20:54:00.000000000 +0100
+++ hal-0.4.7/hald/Makefile.am	2005-02-14 12:08:47.775902528 +0100
@@ -57,6 +57,7 @@
 					linux/multimedia_class_device.c \
 					linux/platform_bus_device.c	\
 	linux/linux_dvd_rw_utils.h	linux/linux_dvd_rw_utils.c \
+	linux/lsb_release.h		linux/lsb_release.c		\
 	linux/hald_helper.h
 
 #					linux/ieee1394_host_class_device.c
