diff -ruN hal-0.4.7-old/hald/linux/osspec.c hal-0.4.7/hald/linux/osspec.c
--- hal-0.4.7-old/hald/linux/osspec.c	2005-02-14 12:10:15.829516000 +0100
+++ hal-0.4.7/hald/linux/osspec.c	2005-02-14 12:10:30.578274192 +0100
@@ -66,6 +66,9 @@
 /* lsb_patch */
 #include "lsb_release.h"
 
+/* procfs_patch */
+#include "procfs_info.h"
+
 /** How many ms to sleep on first hotplug event (to queue up other hotplug events) */
 #define FIRST_HOTPLUG_SLEEP 3500
 
@@ -913,6 +916,10 @@
 
 	if ( g_file_test("/bin/lsb_release", G_FILE_TEST_IS_EXECUTABLE) )
 		lsb_release_init(root);
+	
+	/* obtain proc data only if proc is actually mounted */
+	if ( g_file_test("/proc/cpuinfo", G_FILE_TEST_EXISTS) )
+		procfs_info_init();
 
 #ifdef HAVE_SELINUX
 	if (is_selinux_enabled()) {
diff -ruN hal-0.4.7-old/hald/linux/procfs_info.c hal-0.4.7/hald/linux/procfs_info.c
--- hal-0.4.7-old/hald/linux/procfs_info.c	1970-01-01 01:00:00.000000000 +0100
+++ hal-0.4.7/hald/linux/procfs_info.c	2005-02-14 12:10:30.586272976 +0100
@@ -0,0 +1,137 @@
+/***************************************************************************
+ *
+ * Copyright (C) 2005 Oliver Grawert (ogra) <hostmaster@grawert.net>
+ *
+ * Licensed under the GPL version 2 license.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ **************************************************************************/
+
+#include <stdio.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+#include <fcntl.h>
+#include "procfs_info.h"
+#include "../callout.h"
+#include "../logger.h"
+
+void procfs_device (gchar* , gchar*);
+
+/* add procfs info to hal */
+void
+procfs_info_init ()
+{
+	HAL_INFO (("getting procfs data"));
+
+	procfs_device ("cpuinfo", "Processor");
+	procfs_device ("meminfo", "Memory");
+}
+
+/* add the content to the procfs_device d
+ * info is the name of the infofile in /proc
+ * this function can be used for refreshing the 
+ * data when polling
+ */
+int
+procfs_refresh_info (HalDevice* d, gchar* info)
+{
+	gchar line[1000], **keyval, *key, *path, *keylower;
+	FILE* procfile;
+
+	/* procfs path */
+	path = g_strconcat("/proc/", info, NULL);
+
+	/* open the procfs file */
+	if ((procfile = fopen (path, "r")) == NULL)
+	{
+		HAL_ERROR (("cant open file in /proc"));
+		return 1;		
+	}
+
+	/* read the output */
+	while(fgets(line, sizeof(line), procfile))
+		{
+			if( strlen(line) == sizeof(line)-1) 
+			{
+				HAL_ERROR (("procfs_info input abnormal end"));
+				return 1;
+			}
+	      
+	      		/* split line at : */
+			keyval = g_strsplit(line, ":", 2);
+	      
+			/* avoid empty key value */
+			if (keyval[0])
+			{
+	      			/* replace spaces in key with _ */
+				keyval[0] = g_strdelimit (keyval[0], " ", '_');
+	      
+	      			/* glue the key together */
+				key = g_strjoin (".", "linux", "procfs", info,  keyval[0], NULL);
+	      
+	      			/* make sure the key is lowercase */
+				keylower = g_utf8_strdown (key, -1);
+				g_free(key);
+	      		
+				if (keyval[1] ) 
+				{
+	      				/* strip leading whitespace */
+					g_strstrip (keyval[1]);
+	      
+	     	 			/* throw the data to hal */
+					hal_device_property_set_string (d, keylower, keyval[1]);
+				}
+				g_free(keylower);
+			}
+			g_strfreev(keyval);
+		}
+	fclose (procfile);
+
+	return 0;
+}
+
+/* create a new procfs device in hal
+ * info = cpuinfo // the infofile in procfs
+ * name = Processor // the product name 
+ */
+void
+procfs_device (gchar* info, gchar* name)
+{	
+	gchar *key;
+	HalDevice* d;
+
+	/* create a new empty device */
+	d = hal_device_new ();
+
+	/* add sysinfo capability */
+	hal_device_add_capability (d, "linux.sysinfo");
+
+	/* add bus type */
+	hal_device_property_set_string (d, "info.bus", "unknown");
+
+	/* add a human readable name */
+	hal_device_property_set_string (d, "info.product", name);
+
+	/* add UDI */
+	key = g_strjoin (NULL, "/org/freedesktop/Hal/devices/", name, NULL);
+	hal_device_set_udi (d, key);
+	g_free (key);
+
+	/* attach to root device */
+	hal_device_property_set_string (d, "info.parent", "/org/freedesktop/Hal/devices/computer");
+	
+	/* register device only if there is content
+	 * (avoid the creation of an empty device if fopen failed)
+	 */
+	if ((procfs_refresh_info (d, info)) == 0)
+	{
+		hal_device_store_add (hald_get_gdl (), d);
+		hal_callout_device (d, TRUE);
+	}
+}
diff -ruN hal-0.4.7-old/hald/linux/procfs_info.h hal-0.4.7/hald/linux/procfs_info.h
--- hal-0.4.7-old/hald/linux/procfs_info.h	1970-01-01 01:00:00.000000000 +0100
+++ hal-0.4.7/hald/linux/procfs_info.h	2005-02-14 12:10:30.587272824 +0100
@@ -0,0 +1,31 @@
+/***************************************************************************
+ *
+ * Copyright (C) 2005 Oliver Grawert (ogra) <hostmaster@grawert.net>
+ *
+ * Licensed under the GPL version 2 license.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ **************************************************************************/
+
+#ifdef HAVE_CONFIG_H
+#  include <config.h>
+#endif
+
+#include "../hald.h"
+
+/* procfs information in hal 
+ * procfs_info_init() creates a 
+ * Memory and Processor device in hal
+ * and fills these with the data from
+ * /proc/cpuinfo and /proc/meminfo
+ */
+void procfs_info_init();
+
+/* refresh the data of the procfs 
+ * devices created by procfs_info_init()
+ */
+int procfs_refresh_info(HalDevice*, gchar*);
diff -ruN hal-0.4.7-old/hald/Makefile.am hal-0.4.7/hald/Makefile.am
--- hal-0.4.7-old/hald/Makefile.am	2005-02-14 12:10:15.831516000 +0100
+++ hal-0.4.7/hald/Makefile.am	2005-02-14 12:10:30.587272824 +0100
@@ -58,6 +58,7 @@
 					linux/platform_bus_device.c	\
 	linux/linux_dvd_rw_utils.h	linux/linux_dvd_rw_utils.c \
 	linux/lsb_release.h		linux/lsb_release.c		\
+	linux/procfs_info.h		linux/procfs_info.c		\
 	linux/hald_helper.h
 
 #					linux/ieee1394_host_class_device.c
