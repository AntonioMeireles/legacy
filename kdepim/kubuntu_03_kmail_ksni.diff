>From 36cf6c207d676a33d365c457a1b93421003bde3e Mon Sep 17 00:00:00 2001
From: Aurelien Gateau <agateau@kde.org>
Date: Thu, 15 Apr 2010 17:25:02 +0200
Subject: [PATCH] Ported to KStatusNotifierItem

---
 kmail/kmkernel.cpp     |    6 +-
 kmail/kmkernel.h       |    8 ++-
 kmail/kmsystemtray.cpp |  111 +++++++++++++++++++++---------------------------
 kmail/kmsystemtray.h   |   11 ++---
 4 files changed, 62 insertions(+), 74 deletions(-)

diff --git a/kmail/kmkernel.cpp b/kmail/kmkernel.cpp
index e2e0dcd..e38e8a1 100644
--- a/kmail/kmkernel.cpp
+++ b/kmail/kmkernel.cpp
@@ -2053,7 +2053,7 @@ bool KMKernel::haveSystemTrayApplet()
   return !systemTrayApplets.isEmpty();
 }
 
-bool KMKernel::registerSystemTrayApplet( const KSystemTrayIcon* applet )
+bool KMKernel::registerSystemTrayApplet( const KStatusNotifierItem* applet )
 {
   if ( !systemTrayApplets.contains( applet ) ) {
     systemTrayApplets.append( applet );
@@ -2063,7 +2063,7 @@ bool KMKernel::registerSystemTrayApplet( const KSystemTrayIcon* applet )
     return false;
 }
 
-bool KMKernel::unregisterSystemTrayApplet( const KSystemTrayIcon* applet )
+bool KMKernel::unregisterSystemTrayApplet( const KStatusNotifierItem* applet )
 {
   return systemTrayApplets.removeAll( applet ) > 0;
 }
@@ -2462,7 +2462,7 @@ bool KMKernel::canQueryClose()
     hideMainWin();
     return false;
   } else if ( ( systray->mode() == GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ) && ( systray->hasUnreadMail() )) {
-    systray->show();
+    systray->setStatus( KStatusNotifierItem::Active );
     hideMainWin();
     return false;
   }
diff --git a/kmail/kmkernel.h b/kmail/kmkernel.h
index 23aa06d..7f4d39c 100644
--- a/kmail/kmkernel.h
+++ b/kmail/kmkernel.h
@@ -32,6 +32,8 @@ namespace KWallet {
   class Wallet;
 }
 
+class KStatusNotifierItem;
+
 class KJob;
 /** The KMail namespace contains classes used for KMail.
 * This is to keep them out of the way from all the other
@@ -358,8 +360,8 @@ public:
    */
   bool haveSystemTrayApplet();
 
-  bool registerSystemTrayApplet( const KSystemTrayIcon* );
-  bool unregisterSystemTrayApplet( const KSystemTrayIcon* );
+  bool registerSystemTrayApplet( const KStatusNotifierItem* );
+  bool unregisterSystemTrayApplet( const KStatusNotifierItem* );
 
   /// Reimplemented from KMailIface
   void emergencyExit( const QString& reason );
@@ -526,7 +528,7 @@ private:
   // context menus and the pinentry program
   bool mContextMenuShown;
 
-  QList<const KSystemTrayIcon*> systemTrayApplets;
+  QList<const KStatusNotifierItem*> systemTrayApplets;
 
   /* Weaver */
   ThreadWeaver::Weaver *the_weaver;
diff --git a/kmail/kmsystemtray.cpp b/kmail/kmsystemtray.cpp
index 1ff4ac3..f1f087f 100644
--- a/kmail/kmsystemtray.cpp
+++ b/kmail/kmsystemtray.cpp
@@ -57,30 +57,31 @@ using KMail::AccountManager;
  * with its count of unread messages, allowing the user to jump
  * to the first unread message in each folder.
  */
-KMSystemTray::KMSystemTray(QWidget *parent)
-  : KSystemTrayIcon( parent),
+KMSystemTray::KMSystemTray(QObject *parent)
+  : KStatusNotifierItem( parent),
     mMode( GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ),
     mCount( 0 ),
     mNewMessagesPopup( 0 ),
     mSendQueued( 0 )
 {
   kDebug() << "Initting systray";
+  setToolTipTitle( "KMail" );
+  setToolTipIconByName( "kmail" );
+  setIconByName( "kmail" );
 
   mLastUpdate = time( 0 );
   mUpdateTimer = new QTimer( this );
   mUpdateTimer->setSingleShot( true );
   connect( mUpdateTimer, SIGNAL( timeout() ), SLOT( updateNewMessages() ) );
 
-  mDefaultIcon = KIcon( "kmail" ).pixmap( 22 );
-  setIcon( mDefaultIcon );
   // register the applet with the kernel
   kmkernel->registerSystemTrayApplet( this );
 
   /** Initiate connections between folders and this object */
   foldersChanged();
 
-  connect( this, SIGNAL( activated( QSystemTrayIcon::ActivationReason ) ),
-           this, SLOT( slotActivated( QSystemTrayIcon::ActivationReason ) ) );
+  connect( this, SIGNAL( activateRequested( bool, const QPoint& ) ),
+           kmkernel, SLOT( toggleMainWin() ) );
   connect( contextMenu(), SIGNAL( aboutToShow() ),
            this, SLOT( slotContextMenuAboutToShow() ) );
 
@@ -105,7 +106,7 @@ void KMSystemTray::buildPopupMenu()
   if ( !mainWidget )
     return;
 
-  static_cast<KMenu*>( contextMenu() )->addTitle(this->icon(), "KMail");
+  contextMenu()->addTitle(qApp->windowIcon(), "KMail");
   QAction * action;
   if ( ( action = mainWidget->action("check_mail") ) )
     contextMenu()->addAction( action );
@@ -143,14 +144,10 @@ void KMSystemTray::setMode(int newMode)
 
   switch ( mMode ) {
   case GlobalSettings::EnumSystemTrayPolicy::ShowAlways:
-    if ( !isVisible() )
-      show();
+    setStatus( KStatusNotifierItem::Active );
     break;
   case GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread:
-    if ( mCount == 0 && isVisible() )
-      hide();
-    else if ( mCount > 0 && !isVisible() )
-      show();
+    setStatus( mCount > 0 ? KStatusNotifierItem::Active : KStatusNotifierItem::Passive );
     break;
   default:
     kDebug() << "Unknown systray mode" << mMode;
@@ -171,49 +168,55 @@ void KMSystemTray::updateCount()
 {
   if(mCount != 0)
   {
-    int oldPixmapWidth = mDefaultIcon.size().width();
+    int overlaySize = KIconLoader::SizeSmall;
+    int maxTextSize = overlaySize - 1;
 
-    QString countString = QString::number( mCount );
+    QString countString = mCount > 99 ? "+" : QString::number( mCount );
     QFont countFont = KGlobalSettings::generalFont();
-    countFont.setBold(true);
+    countFont.setPixelSize( maxTextSize );
 
     // decrease the size of the font for the number of unread messages if the
     // number doesn't fit into the available space
-    float countFontSize = countFont.pointSizeF();
-    QFontMetrics qfm( countFont );
-    int width = qfm.width( countString );
-    if( width > (oldPixmapWidth - 2) )
+    QFontMetricsF qfm( countFont );
+    qreal width = qfm.width( countString );
+    if( width > maxTextSize )
     {
-      countFontSize *= float( oldPixmapWidth - 2 ) / float( width );
-      countFont.setPointSizeF( countFontSize );
+      countFont.setPixelSize( int( maxTextSize * overlaySize / width ) );
+      qfm = QFontMetricsF( countFont );
     }
 
-    // Overlay the light KMail icon with the number image
-    QPixmap iconWithNumberImage = mDefaultIcon;
-    QPainter p( &iconWithNumberImage );
+    // Paint the number in a pixmap
+    QPixmap overlayImage( overlaySize, overlaySize );
+    overlayImage.fill( Qt::transparent );
+
+    QPainter p( &overlayImage );
     p.setFont( countFont );
+    p.setRenderHint( QPainter::Antialiasing );
     KColorScheme scheme( QPalette::Active, KColorScheme::View );
 
-    qfm = QFontMetrics( countFont );
-    QRect boundingRect = qfm.tightBoundingRect( countString );
-    boundingRect.adjust( 0, 0, 0, 2 );
-    boundingRect.setHeight( qMin( boundingRect.height(), oldPixmapWidth ) );
-    boundingRect.moveTo( (oldPixmapWidth - boundingRect.width()) / 2,
-                         ((oldPixmapWidth - boundingRect.height()) / 2) - 1 );
-    p.setOpacity( 0.7 );
+    QSizeF boundingSize = qfm.tightBoundingRect( countString ).size();
+    // 2 pixels border if possible
+    boundingSize.rwidth() += 4;
+    boundingSize.rheight() += 4;
+    boundingSize = boundingSize.boundedTo( overlayImage.size() );
+    QRectF boundingRect(
+      ( overlaySize - boundingSize.width() ) / 2.,
+      ( overlaySize - boundingSize.height() ) / 2.,
+      boundingSize.width(),
+      boundingSize.height());
     p.setBrush( scheme.background( KColorScheme::LinkBackground ) );
-    p.setPen( scheme.background( KColorScheme::LinkBackground ).color() );
-    p.drawRoundedRect( boundingRect, 2.0, 2.0 );
+    p.setPen( Qt::NoPen );
+    p.drawRoundedRect( boundingRect, 3.0, 3.0 );
 
     p.setBrush( Qt::NoBrush );
     p.setPen( scheme.foreground( KColorScheme::LinkText ).color() );
-    p.setOpacity( 1.0 );
-    p.drawText( iconWithNumberImage.rect(), Qt::AlignCenter, countString );
+    p.drawText( overlayImage.rect(), Qt::AlignCenter, countString );
+    p.end();
 
-    setIcon( iconWithNumberImage );
+    setOverlayIconByPixmap( overlayImage );
   } else
   {
-    setIcon( mDefaultIcon );
+    setOverlayIconByPixmap( QPixmap() );
   }
 }
 
@@ -232,7 +235,7 @@ void KMSystemTray::foldersChanged()
   mCount = 0;
 
   if ( mMode == GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ) {
-    hide();
+    setStatus( KStatusNotifierItem::Passive );
   }
 
   /** Disconnect all previous connections */
@@ -271,21 +274,6 @@ void KMSystemTray::foldersChanged()
   }
 }
 
-/**
- * On left mouse click, switch focus to the first KMMainWidget.  On right
- * click, bring up a list of all folders with a count of unread messages.
- */
-void KMSystemTray::slotActivated( QSystemTrayIcon::ActivationReason reason )
-{
-  kDebug() << "trigger:" << reason;
-
-  // switch to kmail on left mouse button
-  if( reason == QSystemTrayIcon::Trigger )
-  {
-    kmkernel->toggleMainWin();
-  }
-}
-
 void KMSystemTray::slotContextMenuAboutToShow() 
 {
   // Rebuild popup menu before show to minimize race condition if
@@ -424,9 +412,8 @@ void KMSystemTray::updateNewMessages()
         continue;
 
       // Make sure the icon will be displayed
-      if ( ( mMode == GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ) &&
-           !isVisible() ) {
-        show();
+      if ( mMode == GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ) {
+        setStatus( KStatusNotifierItem::Active );
       }
     }
     else {
@@ -443,7 +430,7 @@ void KMSystemTray::updateNewMessages()
           mCount = 0;
 
           if ( mMode == GlobalSettings::EnumSystemTrayPolicy::ShowOnUnread ) {
-            hide();
+            setStatus( KStatusNotifierItem::Passive );
           }
         }
       }
@@ -453,10 +440,10 @@ void KMSystemTray::updateNewMessages()
   updateCount();
 
   // Update tooltip to reflect count of unread messages
-  setToolTip( mCount == 0 ? i18n("KMail - There are no unread messages")
-                          : i18np("KMail - 1 unread message",
-                                  "KMail - %1 unread messages",
-                                  mCount));
+  setToolTipSubTitle( mCount == 0 ? i18n("KMail - There are no unread messages")
+                                  : i18np("KMail - 1 unread message",
+                                          "KMail - %1 unread messages",
+                                          mCount));
 
   mLastUpdate = time( 0 );
 }
diff --git a/kmail/kmsystemtray.h b/kmail/kmsystemtray.h
index 04ec58e..68be83f 100644
--- a/kmail/kmsystemtray.h
+++ b/kmail/kmsystemtray.h
@@ -18,8 +18,9 @@
 #ifndef KMSYSTEMTRAY_H
 #define KMSYSTEMTRAY_H
 
-#include <ksystemtrayicon.h>
+#include <kstatusnotifieritem.h>
 
+#include <QAction>
 #include <QMap>
 #include <QPointer>
 #include <QVector>
@@ -34,15 +35,15 @@ class QPoint;
 class QMenu;
 
 /**
- * KMSystemTray extends KSystemTray and handles system
+ * KMSystemTray extends KStatusNotifierItem and handles system
  * tray notification for KMail
  */
-class KMSystemTray : public KSystemTrayIcon
+class KMSystemTray : public KStatusNotifierItem
 {
   Q_OBJECT
 public:
   /** construtor */
-  KMSystemTray(QWidget* parent=0);
+  KMSystemTray(QObject* parent=0);
   /** destructor */
   ~KMSystemTray();
 
@@ -58,7 +59,6 @@ private slots:
   void updateNewMessageNotification(KMFolder * folder);
   void selectedAccount(int);
   void updateNewMessages();
-  void slotActivated( QSystemTrayIcon::ActivationReason reason );
   void slotContextMenuAboutToShow();
 
 protected:
@@ -73,7 +73,6 @@ private:
 
   QMenu *mNewMessagesPopup;
   QAction *mSendQueued;
-  QPixmap mDefaultIcon;
 
   QVector<KMFolder*> mPopupFolders;
   QMap<QPointer<KMFolder>, int> mFoldersWithUnread;
-- 
1.7.0.4

