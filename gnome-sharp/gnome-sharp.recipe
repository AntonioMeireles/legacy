#
# Copyright (c) 2004-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadRecipe('gnomepackage.recipe')
class GnomerSharp(GnomePackageRecipe):
    name = 'gnome-sharp'
    version = '2.16.0'

    buildRequires = [ 'GConf:devel', 'ORBit2:devel', 'atk:devel',
        'cairo:devel', 'fontconfig:devel', 'freetype:devel', 'glib:devel',
        'gnome-keyring:devel', 'gnome-panel:devel', 'gnome-vfs:devel',
        'gtk-sharp:lib', 'gtk-sharp:cil', 'gtk-sharp:runtime', 'libart_lgpl:devel',
        'libbonobo:devel', 'libbonoboui:devel', 'libgnome:devel',
        'libgnomecanvas:devel', 'libgnomeprint:devel', 'libgnomeprintui:devel',
        'libgnomeui:devel', 'libpng:devel', 'libxml2:devel', 'mono:devel',
        'mono:lib', 'mono:cil', 'mono:runtime', 'pango:devel', 'popt:devel', 'vte:devel',
        'gtk-sharp:devellib', 'gtkhtml:devel', 'librsvg:devel', 'which:runtime',
        'autoconf:runtime' ]

    def setup(r):                                                                                                                              
        r.macros.majversion = '.'.join(r.version.split('.')[0:2])                                                                              
        r.disableParallelMake()                                                                                                                
        r.Environment('MONO_SHARED_DIR', '/tmp')                                                                                               
        r.addArchive('mirror://gnome/%(name)s/%(majversion)s/')                                                                                
        r.addPatch('gnome-sharp-2.16.0-gtkhtml-3.14.patch')                                                                                    
        r.Run('autoconf')                                                                                                                      
        GnomePackageRecipe.build(r)                                                                                                            
        GnomePackageRecipe.install(r)                                                                                                          
        r.NonBinariesInBindirs(exceptions=['%(bindir)s/.*\.exe'])                                                                              
        r.Remove('%(libdir)s/mono/*/*.mdb')                                                                                                    
        r.Remove('%(libdir)s/mono/*/*.config')  
