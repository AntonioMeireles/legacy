--- dhcp-3.0pl2/client/scripts/linux.clientscript	2003-08-22 14:53:18.269084521 -0400
+++ dhcp-3.0pl2/client/scripts/linux	2003-08-22 14:56:20.511009634 -0400
@@ -1,6 +1,6 @@
 #!/bin/bash
 # Network Interface Configuration System
-# Parts Copyright (c) 2002 Red Hat, Inc. all rights reserved.
+# Parts Copyright (c) 2002, 2003 Red Hat, Inc. all rights reserved.
 #
 # Based on:
 #   dhclient-script for Linux. Dan Halbert, March, 1997.
@@ -21,11 +21,21 @@
 # address if it is not supplied. This might be much more easily done
 # by the dhclient C code, and passed on.
 
+function save_previous() {
+      if [ -e $1 -a ! -e $1.predhclient ]; then
+	  mv $1 $1.predhclient 
+      fi
+}
 make_resolv_conf() {
   if [ -n "$new_domain_name" ] || [ -n "$new_domain_name_servers" ]; then
+    save_previous /etc/resolv.conf
     echo '; generated by /sbin/dhclient-script' > /etc/resolv.conf
-    if [ -n "$new_domain_name" ]; then
-	echo search $new_domain_name >> /etc/resolv.conf
+    if [ -n "$SEARCH" ]; then
+ 	echo search $SEARCH >> /etc/resolv.conf
+    else
+	if [ -n "$new_domain_name" ]; then
+ 	    echo search $new_domain_name >> /etc/resolv.conf
+ 	fi
     fi
     chmod 644 /etc/resolv.conf
     for nameserver in $new_domain_name_servers; do
@@ -127,10 +137,12 @@ fi
 if [ x$reason = xBOUND ] || [ x$reason = xRENEW ] || \
    [ x$reason = xREBIND ] || [ x$reason = xREBOOT ]; then
 
-  if [ -n "$new_nis_domain" ]; then
+  if [ "${PEERNIS}" = no ]; then
+    :
+  elif [ -n "$new_nis_domain" ]; then
 	domainname "$new_nis_domain"
-
-	rm -f /etc/yp.conf
+	save_previous /etc/yp.conf
+	echo '# generated by /sbin/dhclient-script' > /etc/yp.conf
 	if [ -n "$new_nis_servers" ]; then
 	    for I in $new_nis_servers; do
 		echo "domain $new_nis_domain server $I" >> /etc/yp.conf
@@ -139,28 +151,34 @@ if [ x$reason = xBOUND ] || [ x$reason =
 	    echo "domain $new_nis_domain broadcast" >> /etc/yp.conf
 	fi
   elif [ -n "$new_nis_servers" ]; then
+      save_previous /etc/yp.conf
       echo '# generated by /sbin/dhclient-script' > /etc/yp.conf
       for I in $new_nis_servers; do
 	  echo "ypserver $I" >> /etc/yp.conf
       done
   fi
 
-  if [ -n "$new_ntp_servers" ] && [ -e /etc/ntp.conf ]; then
+  if [ "${PEERNTP}" = no ]; then
+    :
+  elif [ -n "$new_ntp_servers" ] && [ -e /etc/ntp.conf ]; then
+      save_previous /etc/ntp.conf
       cat <<EOF > /etc/ntp.conf
+# generated by /sbin/dhclient-script
 restrict default ignore
 restrict 127.0.0.1
-driftfile /etc/ntp/drift
+driftfile /var/lib/ntp/drift
 broadcastdelay 0.008
 authenticate yes
 keys /etc/ntp/keys
 EOF
-      :> /etc/ntp/step-tickers
+      save_previous /etc/ntp/step-tickers
+      echo '# generated by /sbin/dhclient-script' > /etc/ntp/step-tickers
       for I in $new_ntp_servers; do
           echo "restrict $I nomodify notrap noquery" >> /etc/ntp.conf
 	  echo "server $I" >> /etc/ntp.conf
 	  echo "$I" >> /etc/ntp/step-tickers
       done
-	fi
+  fi
 
   if [ -n "$new_host_name" ] && need_hostname; then
       hostname $new_host_name
@@ -197,7 +215,7 @@ EOF
     ifconfig $interface:0 inet $alias_ip_address $alias_subnet_arg
     route add -host $alias_ip_address $interface:0
   fi
-  if [ "${PEERDNS}" != "no" ]; then 
+  if [ x$reason != xRENEW ] && [ "${PEERDNS}" != "no" ]; then 
     make_resolv_conf
   fi
   exit_with_hooks 0
