#
# Copyright (c) 2008-2011 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('kernelmodulepackage')
class NdiswrapperKernel(KernelModulePackageRecipe):
    name = 'ndiswrapper-kernel'
    version =  '1.58'

    def unpack(r):
        r.macros.name = 'ndiswrapper'
        r.addArchive('http://sourceforge.net/projects/ndiswrapper/files/stable/')
        # https://bbs.archlinux.org/viewtopic.php?pid=1307968
        r.addPatch('kernel-3.10.patch')
        # r.addPatch('ndiswrapper-1.58-add_taint.patch')

        r.Replace(('.*depmod.*', ''),
                  ('/include/linux/version.h','/include/generated/uapi/linux/version.'),
                  'driver/Makefile')
        # r.Run("""   sed -i "/modinfo/s/s/usr\//" driver/Makefile """)

        r.macros.ksrcdir = '/lib/modules/%(kver)s/build'
        r.Environment('KVERS_UNAME', '%(kver)s')
        r.Environment('KBUILD', '%(ksrcdir)s')

    def build(r):
        r.Make('-C driver')

    def install(r):
        r.Make('DESTDIR=%(destdir)s -C driver install')

    def policy(r):
        # We want to make sure that the userspace code can require the
        # matching kernel-space code
        r.ComponentProvides('%(version)s')
        r.ComponentSpec('runtime', '/lib/modules/')

        r.Requires('ndiswrapper:runtime(%(version)s)',
                   '/lib/modules/')
