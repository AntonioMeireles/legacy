#
# Copyright (c) 2008-2011 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
loadSuperClass('kernelmodulepackage')
class AtiFglrxKernel(KernelModulePackageRecipe):
    name = 'ati-fglrx-kernel'
    version = '11.2'

    def unpack(r):
        # https://launchpad.net/ubuntu/jaunty/+source/fglrx-installer/2:8.600-0ubuntu1
        #r.macros.version = '8.60_RC1'
        r.macros.version = r.version.replace('.', '-')
        #r.addSource('ati-driver-installer-%(version)s-x86.x86_64.run')
        r.addSource('https://a248.e.akamai.net/f/674/9206/0/www2.ati.com/'
                    'drivers/linux/ati-driver-installer-%(version)s-x86.x86_64.run')
        r.addAction('sh ./ati-driver-installer-%(version)s-x86.x86_64.run '
                    '--extract archive_files')
        r.addPatch('02-dkms-arch_compat.diff')

        if Arch.x86_64:
            r.Copy('archive_files/arch/x86_64/*', 'src/')
            # I doubt, we need these files for the kernel module
            #r.Copy('archive_files/xpif_64a/*', 'src/')
        else:
            r.Copy('archive_files/arch/x86/*', 'src/')
            # I doubt, we need these files for the kernel module
            #r.Copy('archive_files/xrpif*', 'src/')

        r.Copy('archive_files/common/*', 'src/')

        r.Copy('src/lib/modules/fglrx/build_mod/2.6.x/Makefile',
                'src/lib/modules/fglrx/build_mod/')

        r.macros.ksrcdir = '/lib/modules/%(kver)s/build/'
        r.macros.modpath = '/lib/modules/%(kver)s/updates/'
        r.macros.cflags += ' -I%(ksrcdir)s/include'

    def build(r):
        # These control kernel version detection
        r.Replace('\$\(shell uname -r\)', '%(kver)s', 'src/lib/modules/fglrx/build_mod/Makefile')

        r.Make('PAGE_ATTR_FIX=0 KERNELPATH=%(ksrcdir)s MODULEPATH=%(modpath)s '
                'KVER=%(kver)s', dir='src/lib/modules/fglrx/build_mod/')

    def install(r):
        r.Install('src/lib/modules/fglrx/build_mod/fglrx.ko',
                '/lib/modules/%(kver)s/updates/fglrx.ko')

    def policy(r):
        # We want to make sure that the userspace code can require the
        # matching kernel-space code
        r.ComponentProvides('%(version)s')
        r.ComponentSpec('runtime', '/lib/modules/')
