#
# Copyright (c) 2008-2012 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
loadSuperClass('kernelmodulepackage')
class AtiFglrxKernel(KernelModulePackageRecipe):
    name = 'ati-fglrx-kernel'
    version = '12.3'

    def unpack(r):
        r.macros.version = r.version.replace('.', '-')
        r.addSource('https://a248.e.akamai.net/f/674/9206/0/www2.ati.com/'
                    'drivers/linux/amd-driver-installer-%(version)s-x86.x86_64.run')
        r.addAction('sh ./amd-driver-installer-%(version)s-x86.x86_64.run '
                    '--extract archive_files')
        for p in [
            '02-dkms-arch_compat.diff',
            '3.2.8.patch',
        ]:
            r.addPatch(p)

        if Arch.x86_64:
            r.Copy('archive_files/arch/x86_64/*', 'src/')
            # I doubt, we need these files for the kernel module
            #r.Copy('archive_files/xpif_64a/*', 'src/')
        else:
            r.Copy('archive_files/arch/x86/*', 'src/')
            # I doubt, we need these files for the kernel module
            #r.Copy('archive_files/xrpif*', 'src/')

        r.Copy('archive_files/common/*', 'src/')

        r.Copy('src/lib/modules/fglrx/build_mod/2.6.x/Makefile',
                'src/lib/modules/fglrx/build_mod/')

        r.macros.ksrcdir = '/lib/modules/%(kver)s/build/'
        r.macros.modpath = '/lib/modules/%(kver)s/updates/'
        r.macros.cflags += ' -I%(ksrcdir)s/include'

    def build(r):
        # These control kernel version detection
        r.Replace('\$\(shell uname -r\)', '%(kver)s', 'src/lib/modules/fglrx/build_mod/Makefile')

        r.Make(' KERNELPATH=%(ksrcdir)s MODULEPATH=%(modpath)s '
               ' MODFLAGS="-DMODULE -DATI -DFGL -DPAGE_ATTR_FIX=$PAGE_ATTR_FIX -DCOMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE $def_smp $def_modversions"   '
               ' PAGE_ATTR_FIX=$PAGE_ATTR_FIX COMPAT_ALLOC_USER_SPACE=$COMPAT_ALLOC_USER_SPACE '
               ' KVER=%(kver)s', dir='src/lib/modules/fglrx/build_mod/')



    def install(r):
        r.Install('src/lib/modules/fglrx/build_mod/fglrx.ko',
                '/lib/modules/%(kver)s/updates/fglrx.ko')

    def policy(r):
        # We want to make sure that the userspace code can require the
        # matching kernel-space code
        r.ComponentProvides('%(version)s')
        r.ComponentSpec('runtime', '/lib/modules/')
