#
# Copyright (c) 2004-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class NetSnmp(RPMPackageRecipe, CPackageRecipe):
    name = 'net-snmp'
    version = '5.4.1'
    rpmRelease = '19.fc9'
    distroVersion = '9'
    isUpdate = True
    fedora_updates_sans_core = "mirror://fedora/../updates/%(distroVersion)s/SRPMS.newkey/%(rpmName)s-%(rpmUpVer)s-%(rpmRelease)s.src.rpm"

    buildRequires = [ 'openssl:devel', 'bzip2:devel',
        'elfutils:devel', 'perl:runtime', 'coreutils:runtime',
        'grep:runtime', 'sed:runtime', 'findutils:runtime',
        'libtool:runtime', 'zlib:devel', 'autoconf:runtime', 'cups:runtime',
        'perl:lib', 'procps:runtime', 'tcp_wrappers:devel' ]

    if Arch.x86 or Arch.x86_64:
        buildRequires.append('lm_sensors:devel')

    rpmPatches = [ 'ucd-snmp-4.2.4.pre3-mnttab.patch',
                   'net-snmp-5.0.8-readonly.patch',
                   'net-snmp-5.4-64bit.patch',
                   'net-snmp-5.1.2-dir-fix.patch',
                   'net-snmp-5.2.1-file_offset.patch',
                   'net-snmp-5.3.1-multilib.patch',
                   'net-snmp-5.4.1-config_libdir.patch',
                   'net-snmp-5.4.1-hostname.patch',
                   'net-snmp-5.4.1-shared-ip.patch',
                   'net-snmp-5.4-exec-crash.patch',
                   'net-snmp-5.4.1-sensors3.patch',
                   'net-snmp-5.4.1-xen-crash.patch',
                   'net-snmp-5.4.1-hmac-check.patch',
                   'net-snmp-5.4.1-perl-snprintf.patch',
                   'net-snmp-5.4.1-perl-set.patch',
                   'net-snmp-5.4.1-long-iface-names.patch',
                   'net-snmp-5.4.1-getbulk-crash.patch' ]

    rpmSources = [ 'net-snmpd.init', 'net-snmp-config', 'net-snmpd.logrotate', 'ucd5820stat' ]

    def setup(r):
        r.disableParallelMake()
        r.macros.perldir = '%(libdir)s/perl5/vendor_perl/'

        r.unpack()

        # Use source from srpm until patches can be dropped
        #r.addArchive('mirror://sourceforge/%(name)s/', keyid='7800FEAC')
        r.addSource('net-snmp.conf.new', dest='net-snmp.conf')
        r.addSource('net-snmptrapd.init', macros=True)
        r.addSource('snmpd.sysconfig', dest='%(sysconfdir)s/sysconfig/snmpd')
        r.addSource('snmptrapd.sysconfig',
                    dest='%(sysconfdir)s/sysconfig/snmptrapd')
        r.addPatch('net-snmp-5.4.1-strange_libpath.patch')
        # fix ipv6 getaddrinfo error (RPL-3110)
        r.addPatch('net-snmp-getaddrinfo-ipv6.patch')

        r.Replace(r'\$install_libdir', '%(libdir)s', 'ltmain.sh')

        r.macros.MIBS = 'host agentx smux ucd-snmp/diskio tcp-mib ' \
               'udp-mib mibII/mta_sendmail ip-mib/ipv4InterfaceTable ' \
               'ip-mib/ipv6InterfaceTable ' \
               'ip-mib/ipAddressPrefixTable/ipAddressPrefixTable '
        if Arch.x86 or Arch.x86_64:
            r.macros.MIBS += 'ucd-snmp/lmsensorsMib '
        r.Configure(' --enable-static --enable-shared'
                    ' --with-cflags="%(cflags)s"'
                    ' --with-ldflags="%(ldflags)s -lcrypto -lsensors"'
                    ' --with-sys-location="Unknown"'
                    ' --with-logfile="%(localstatedir)s/log/snmpd.log"'
                    ' --with-persistent-directory="/var/net-snmp"'
                    ' --with-mib-modules="%(MIBS)s"'
                    ' --with-libwrap="%(libdir)s"'
                    ' --sysconfdir=%(sysconfdir)s'
                    ' --enable-ipv6'
                    ' --enable-ucd-snmp-compatibility'
                    ' --with-openssl'
                    ' --with-pic'
                    ' --enable-embedded-perl'
                    ' --enable-mfd-rewrites'
                    ' --enable-local-smux'
                    ' --with-sys-contact="root@localhost"' )
        r.Make()

        r.Run('export NETSNMP_DONT_CHECK_VERSION=1; cd perl ; perl Makefile.PL -NET-SNMP-IN-SOURCE=true INSTALLDIRS=vendor BINDIR=%(bindir)s PERL5DIR=%(perldir)s DESTDIR=%(destdir)s -NET-SNMP-CONFIG="sh ../../net-snmp-config" ;')
        for dir in 'default_store OID agent agent/default_store ASN SNMP TrapReceiver'.split(' '):
            r.Replace(('^LD_RUN_PATH.*', ''), (r'LD_RUN_PATH=\".*\" ', ''),
                      'perl/%s/Makefile' % dir, allowNoChange=True )

        r.Make(dir='perl')

        r.MakePathsInstall('LIBTOOL=%(bindir)s/libtool'
                           ' ucdincludedir=%(destdir)s%(includedir)s/ucd-snmp')
        r.MakeInstall(installtarget='install_vendor', dir='perl')
        r.Install('local/mib2c.*.conf', '%(datadir)s/snmp')
        r.Install('net-snmp.conf', '%(sysconfdir)s/snmp/snmpd.conf',
                  mode=0644)
        r.Install('net-snmpd.init', '%(initdir)s/snmpd', mode=0755)
        r.Install('net-snmptrapd.init', '%(initdir)s/snmptrapd', mode=0755)
        r.Install('net-snmpd.logrotate',
                  '%(sysconfdir)s/logrotate.d/snmpd', mode=0644)
        r.Install('ucd5820stat', '%(bindir)s/', mode=0755)
        r.Symlink('snmptrap', '%(bindir)s/snmpinform')
        r.Doc('AGENT.txt', 'EXAMPLE.conf', 'PORTING', 'local/passtest',
              'local/ipf-mod.pl')

        # start initscripts by default (RPL-418)
        r.Replace('chkconfig: -', 'chkconfig: 345', '%(initdir)s/*')

        r.Remove('%(bindir)s/{snmpinform,tkmib,snmpcheck}')
        r.Remove('%(mandir)s/man1/snmpconf.1*')

        # hack to get everything where it should be
        r.Move('%(includedir)s/*', '/tmp-net-snmp/')
        r.Move('/tmp-net-snmp/*', '%(includedir)s/net-snmp/')
        r.Move('%(includedir)s/net-snmp/ucd-snmp', '%(includedir)s/')

        r.Run('find %(destdir)s%(libdir)s -name Makefile.subs.pl | xargs rm -f')

        r.PackageSpec('net-snmp-client',
                      '%(bindir)s/(fixproc|ipf-mod.pl|encode_keychange|snmp.*|traptoemail)',
                      '.*snmptrapd.*',
                      '%(mandir)s/man1/snmp.*.1.*')

        r.PackageSpec('net-snmp-server', '.*snmpd.*')

        # Tag init scripts in case the initscript tag desc. is not installed
        r.TagSpec('initscript', '%(initdir)s/')
