#
# Copyright (c) 2004-2011 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
loadSuperClass('rpmpackage')
class Kvm(RPMPackageRecipe,AutoPackageRecipe):

    name = 'kvm'
    version = '0.14.0'
    rpmRelease = '4.fc15'
    rpmName = 'qemu'
    tarballName = 'qemu-kvm-%(version)s.tar.gz'
    # tarballName = rpmName + '-' + name + '-' + version + '.tar.gz' 
    rpmSources = [ 'kvm.modules',
                   # Creates /dev/kvm
                   '80-kvm.rules',
                   # KSM control scripts
                   'ksm.init',
                   'ksm.sysconfig',
                   'ksmtuned.init',
                   'ksmtuned',
                   'ksmtuned.conf',]
    rpmPatches = [ 'pc-add-a-Fedora-13-machine-type-for-backward-compat.patch',
                   'qemu-fix-non-PCI-target-build.patch',
                   'qemu-vhost-fix-dirty-page-handling.patch'
                   ]

    buildRequires = [ 'SDL:devel', 'alsa-lib:devel', 'e2fsprogs:devel',
                      'zlib:devel', 'chkconfig:runtime', 'info-kvm:group',
                      'iasl:runtime', 'gnutls:devel', 'kernel:build-tree',
                      'dev86:runtime', 'pkgconfig:devel', 'ncurses:devel',
                      'python:devel', 'esound:devel', 'git:runtime', 'rsync:runtime',
                      'bluez:devel', 'curl:devel', 'cyrus-sasl:devel', 'libX11:devel',
                      'openssl:devel', 'pulseaudio:devel', 'texi2html:runtime',
                      'pciutils:devel', 'which:runtime', 'util-linux:devel',
                      'attr:devel', 'libjpeg:devel', 'libpng:devel',
                      'gpxe-roms-qemu:data', 'userspace-kernel-headers',
                      'vgabios:data', 'seabios:data', 
                      # for docs/man
                      'texinfo:runtime', 'perl:runtime']
    
    def configure(r):
        r.disableParallelMake()

        if Arch.x86:
            r.Environment('ARCH', 'i386')
        else:
            r.Environment('ARCH', 'x86_64')

        r.macros.securityflags = ''


        cfg = ( ' --target-list=x86_64-softmmu '
                ' --prefix=%(prefix)s'
                ' --audio-drv-list=pa,sdl,oss,alsa '
                ' --disable-strip '
                ' --disable-xen '
                ' --extra-cflags="%(optflags)s " ')
#        if Arch.x86_64:
#            cfg += ' --enable-spice '

        r.ManualConfigure( cfg )


    def make(r):
        r.Make('V=1')

    def makeinstall(r):
        r.MakeInstall('datadir=%(datadir)s/qemu '
                      'sharedir=%(datadir)s/qemu ')
        # upstream Makefiles _features_ ...
        r.Install('kvm/scripts/qemu-ifup', '%(sysconfdir)s/qemu-ifup', mode = 0755)
        
        r.Install('kvm/kvm_stat', '%(bindir)s/', mode = 0755)

        r.Install('kvm.modules', '%(sysconfdir)s/sysconfig/modules/kvm.modules', mode = 0755)
        r.Install('80-kvm.rules', '%(sysconfdir)s/udev/rules.d/', mode = 0644)

        r.Install('ksm.init', '%(initdir)s/ksm', mode = 0755)
        r.Install('ksm.sysconfig', '%(sysconfdir)s/sysconfig/ksm', mode = 0644)

        r.Install('ksmtuned.init', '%(initdir)s/ksmtuned', mode = 0755)
        r.Install('ksmtuned', '%(sbindir)s/ksmtuned', mode = 0755)
        r.Install('ksmtuned.conf', '%(sysconfdir)s/ksmtuned.conf', mode = 0644)

        r.Install('qemu.sasl', '%(sysconfdir)s/sasl2/qemu.conf', mode = 0644)

        
        r.Remove('%(datadir)s/qemu/pxe*bin')
        r.Remove('%(datadir)s/qemu/gpxe*rom')
        r.Remove('%(datadir)s/qemu/vgabios*bin')
        r.Remove('%(datadir)s/qemu/bios.bin')
        r.Remove('%(datadir)s/qemu/openbios-ppc')
        r.Remove('%(datadir)s/qemu/openbios-sparc32')
        r.Remove('%(datadir)s/qemu/openbios-sparc64')
        r.Remove('%(datadir)s/qemu/petalogix-s3adsp1800.dtb')
        r.Remove('%(datadir)s/qemu/s390-zipl.rom')
        
        r.Remove('%(datadir)s/qemu/bamboo.dtb')
        r.Remove('%(datadir)s/qemu/ppc_rom.bin')
        r.Remove('%(datadir)s/qemu/video.x')

        for a, b in [('e1000', '8086100e'),
                   ('ne2k_pci', 'rtl8029'),
                   ('pcnet', 'pcnet32'),
                   ('rtl8139', 'rtl8139'),
                   ('virtio', 'virtio-net')]: 
            
            r.Symlink('../gpxe/' + b + '.rom', '%(datadir)s/qemu/pxe-'+a+'.bin')

        r.Symlink('../vgabios/VGABIOS-lgpl-latest.bin', '%(datadir)s/qemu/vgabios.bin')
        r.Symlink('../vgabios/VGABIOS-lgpl-latest.cirrus.bin', '%(datadir)s/qemu/vgabios-cirrus.bin')
        r.Symlink('../vgabios/VGABIOS-lgpl-latest.qxl.bin',  '%(datadir)s/qemu/vgabios-qxl.bin')
        r.Symlink('../vgabios/VGABIOS-lgpl-latest.stdvga.bin', '%(datadir)s/qemu/vgabios-stdvga.bin')
        r.Symlink('../vgabios/VGABIOS-lgpl-latest.vmware.bin', '%(datadir)s/qemu/vgabios-vmware.bin')
        r.Symlink('%(datadir)s/seabios/bios.bin', '%(datadir)s/qemu/bios.bin')
        r.DanglingSymlinks(exceptions = '%(datadir)s/.*')
        
        # 
        r.Requires('seabios:data', '%(datadir)s/qemu/bios.bin')
        r.Requires('vgabios:data', '%(datadir)s/qemu/vgabios.*')        
        r.Requires('gpxe-roms-qemu:data', '%(datadir)s/qemu/pxe.*')        

        r.Symlink('%(mandir)s/man1/qemu.1', '%(mandir)s/man1/qemu-kvm.1')

        r.Symlink('%(bindir)s/qemu-system-x86_64', '%(bindir)s/qemu-kvm')

        r.Requires('info-kvm:group', '%(bindir)s/qemu-kvm')

        
