#
# Copyright (c) 2008 Lance Haig.
#               2008 the Foresight Linux Project 
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class LibVirt(RPMPackageRecipe,AutoPackageRecipe):
    buildRequires = [ 'iptables:runtime', 
                      'libxml2:devel', 
                      'libxml2:runtime', 
                      'libxslt:runtime', 
                      'ncurses:devel', 
                      'readline:devel', 
                      'sysfsutils:devel', 
                      'zlib:devel',
                      #'xen:devel', # enable this on rpl2 for xen support
                      'gnutls:devel',
                      'gnutls:runtime',
                      'cyrus-sasl:devel',
                      'cyrus-sasl:runtime',
                      'parted:devel',
                      'parted:devellib',
                      'parted:runtime',
                      'pkgconfig:devel',
                      'PolicyKit:devel',
                      'avahi:devel',
                      'bridge-utils:runtime',
                      'cyrus-sasl:devel',
                      'dbus:devel',
                      'python:devel',
                      'readline:devel',
                      'PolicyKit:runtime', 
                      'gcc-c++:runtime', 
                      'kvm:runtime', 
                      'open-iscsi:runtime',
                      'gettext:runtime', 
                      'intltool:runtime', 
                      'chkconfig:runtime',
                      'dnsmasq:runtime',
                      'nfs-client:runtime',
                      'hal:devel', 'udev:runtime',
                      'module-init-tools:runtime'
                      ]

    name = 'libvirt'
    version = '0.6.1'
    rpmRelease = '5.fc11'
    rpmPatches = [ 'libvirt-0.6.1-xend-lookup.patch',
                   'libvirt-0.6.1-xen-events.patch',
                   'libvirt-0.6.1-events-dispatch.patch',
                   'libvirt-0.6.1-fd-leaks.patch',
                   'libvirt-0.6.1-getvcpus-remote.patch',
                   'libvirt-0.6.1-pool-mode-parse.patch',
                   'libvirt-0.6.1-storage-free.patch',
                   'libvirt-0.6.1-vcpu-deadlock.patch',
                   'libvirt-0.6.1-xenblock-detach.patch',
                   'libvirt-0.6.1-fd-leaks2.patch',
                   'libvirt-0.6.1-svirt-shared-readonly.patch',
                   # 'libvirt-0.6.1-vnc-sasl-auth.patch',
                   'libvirt-0.6.1-svirt-sound.patch'
                   ]
                   

    def configure(r):

        config =  ' --with-libvirtd --with-init-scripts=redhat --with-sasl --with-polkit --with-avahi --with-gnu-ld --with-lxc '
        config += ' --without-xen --with-qemu --with-python '
        config += ' --with-remote-file=%(localstatedir)s/run/libvirtd.pid '
        config += ' --prefix=%(prefix)s --localstatedir=%(localstatedir)s --libdir=%(libdir)s'

        r.ManualConfigure(config)

    def policy(r):

        for d in [ '%(localstatedir)s/run/%(name)s', 
                   '%(sysconfdir)s/libvirt/qemu/networks/autostart',
                   '%(localstatedir)s/log/libvirt/qemu',
                   # FC9 default locations are sane; let's use them. 
                   '%(localstatedir)s/lib/%(name)s/images',
                   '%(localstatedir)s/lib/%(name)s/boot', 
                   '%(localstatedir)s/cache/%(name)s',
                   ]:
            r.MakeDirs(d)
            r.ExcludeDirectories(exceptions = d)

        for d in [ '%(libdir)s/%(name)s/drivers',
                   '%(localstatedir)s/lib/%(name)s/.*',
                   '%(localstatedir)s/run/%(name)s/.*',
                   '%(localstatedir)s/%(name)s/.*',
                   ]:
            r.ExcludeDirectories(exceptions = d)

        # set perms right
        r.SetModes('%(sysconfdir)s/%(name)s/', 0700)

        r.SetModes('%(localstatedir)s/lib/%(name)s/images/', 0700)
        r.SetModes('%(localstatedir)s/lib/%(name)s/boot/', 0700)
        r.SetModes('%(localstatedir)s/lib/%(name)s/qemu/', 0700)

        r.SetModes('%(localstatedir)s/lib/%(name)s/network/', 0700)
        r.SetModes('%(localstatedir)s/lib/%(name)s/iptables/', 0700)
        r.SetModes('%(localstatedir)s/lib/%(name)s/iptables/filter', 0700)
        r.SetModes('%(localstatedir)s/lib/%(name)s/iptables/nat', 0700)

        r.SetModes('%(localstatedir)s/log/%(name)s/', 0700)
        r.SetModes('%(localstatedir)s/log/%(name)s/qemu', 0700)

        r.SetModes('%(libexecdir)s/libvirt_parthelper', 0755)
        r.SetModes('%(sbindir)s/libvirtd', 0755)

        # We don't want to install /etc/libvirt/qemu/networks in the package directly
        # because if the admin wants to delete the default network completely, we don't
        # want to end up re-incarnating it on every conary upgrade.
        r.MakeDirs('%(datadir)s/libvirt/networks')
        r.Copy('%(sysconfdir)s/libvirt/qemu/networks/default.xml', '%(datadir)s/libvirt/networks/default.xml')
        r.Remove('%(sysconfdir)s/libvirt/qemu/networks/default.xml')
        r.Remove('%(sysconfdir)s/libvirt/qemu/networks/autostart/default.xml')
        # Strip auto-generated UUID - we need it generated per-install
        r.Run('sed -i -e "/<uuid>/d" %(destdir)s%(datadir)s/libvirt/networks/default.xml')

        # We want to install the default network for initial conary installs
        # or on the first upgrade from a non-network aware libvirt only.
        # We check this by looking to see if the daemon is already installed
        # thru a taghandler

        r.addSource('%(name)s_uuidgen.tagdescription', macros=True,
                    dest='%(tagdescriptiondir)s/%(name)s_uuidgen')
        r.addSource('%(name)s_uuidgen.taghandler', macros=True,
                    dest='%(taghandlerdir)s/%(name)s_uuidgen', mode=0755)

        r.Requires('file: %(bindir)s/virsh', '%(taghandlerdir)s/%(name)s_uuidgen')
        r.Requires('file: %(sbindir)s/dnsmasq', '%(bindir)s/virsh')

        r.TagSpec('%(name)s_uuidgen', '%(bindir)s/virsh')

