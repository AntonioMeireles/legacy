#
# Copyright (c) 2008 Lance Haig.
#               2008-2009 the Foresight Linux Project 
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class LibVirt(RPMPackageRecipe,AutoPackageRecipe):
    buildRequires = [ 'iptables:runtime', 
                      'libxml2:devel', 
                      'libxml2:runtime', 
                      'libxslt:runtime', 
                      'ncurses:devel', 
                      'readline:devel', 
                      'sysfsutils:devel', 
                      'zlib:devel',
                      #'xen:devel', # enable this on rpl2 for xen support
                      'gnutls:devel',
                      'gnutls:runtime',
                      'cyrus-sasl:devel',
                      'cyrus-sasl:runtime',
                      'parted:devel',
                      'parted:devellib',
                      'parted:runtime',
                      'pkgconfig:devel',
                      'PolicyKit:devel',
                      'avahi:devel',
                      'bridge-utils:runtime',
                      'cyrus-sasl:devel',
                      'dbus:devel',
                      'python:devel',
                      'readline:devel',
                      'polkit:runtime', 
                      'polkit:devel', 
                      'gcc-c++:runtime', 
                      'kvm:runtime', 
                      'open-iscsi:runtime',
                      'gettext:runtime', 
                      'intltool:runtime', 
                      'chkconfig:runtime',
                      'dnsmasq:runtime',
                      'nfs-client:runtime',
                      'hal:devel', 'udev:runtime',
                      'module-init-tools:runtime',
                      'lvm2:runtime',
                      'info-kvm:group',
                      'automake:runtime',
                      'autoconf:runtime',
                      'curl:devel',
                      'device-mapper:devel',
                      'openssl:devel',
		      'libgcrypt:devel'
                      ]

    name = 'libvirt'
    version = '0.7.1'
    rpmRelease = '15.fc12'
    rpmPatches = [ # A couple of hot-unplug memory handling fixes (#523953)
                   'libvirt-fix-net-hotunplug-double-free.patch',
                   'libvirt-fix-pci-hostdev-hotunplug-leak.patch',
                   # Don't set a bogus error in virDrvSupportsFeature()
                   'libvirt-fix-drv-supports-feature-bogus-error.patch',
                   # Fix raw save format
                   'libvirt-fix-qemu-raw-format-save.patch',
                   # Fix USB device passthrough (#422683)
                   'libvirt-fix-usb-device-passthrough.patch',
                   # Disable sound backend (#524499, #508317)
                   'libvirt-disable-audio-backend.patch',
                   # Re-label qcow2 backing files (#497131)
                   'libvirt-svirt-relabel-qcow2-backing-files.patch',
                   # Change logrotate config to weekly (#526769)
                   'libvirt-change-logrotate-config-to-weekly.patch',
                   'libvirt-logrotate-create-lxc-uml-dirs.patch',
                   # Add several PCI hot-unplug typo fixes from upstream
                   'libvirt-fix-device-detach-typo1.patch',
                   'libvirt-fix-device-detach-typo2.patch',
                   'libvirt-fix-device-detach-typo3.patch',
                   # Fix libvirtd memory leak during error reply sending (#528162)
                   'libvirt-fix-libvirtd-leak-in-error-reply.patch',
                   # Fix restore of qemu guest using raw save format (#523158)
                   'libvirt-fix-qemu-restore-from-raw1.patch',
                   'libvirt-fix-qemu-restore-from-raw2.patch',
                   
                   # Misc fixes to qemu machine types handling
                   'libvirt-qemu-machine-type-fixes1.patch',
                   'libvirt-qemu-machine-type-fixes2.patch',

                   # A couple of XML formatting fixes
                   'libvirt-storage-iscsi-auth-xml-formatting.patch',
                   'libvirt-network-delay-attribute-formatting.patch',

                   # Fix xen driver recounting (#531429)
                   'libvirt-fix-xen-driver-refcounting.patch',

                   # Fix crash on virsh error (#531429)
                   'libvirt-double-free-on-virsh-error.patch',
                   # Fix segfault where XML parsing fails in qemu disk hotplug
                   'libvirt-fix-crash-on-device-hotplug-parse-error.patch',
                   # Fix segfault where interface target device name is ommitted (#523418)
                   'libvirt-fix-crash-on-missing-iface-target-dev.patch',

                   # Avoid compressing small log files (#531030)
                   'libvirt-logrotate-avoid-compressing-small-logs.patch',
                   ]
    
    def configure(r):
        r.Replace('with_init_scripts', 'with_init_script', 'configure')

        config =  (' --with-libvirtd --with-init-script=redhat --with-sasl'
                   ' --with-polkit '
                   ' --with-avahi --with-gnu-ld --with-lxc'
                   ' --without-xen --with-qemu --with-python --without-phyp'
                   ' --without-capng --without-netcf --with-vbox --with-hal --with-esx'
                   ' --with-storage-lvm --with-storage-iscsi --with-storage-disk --with-storage-mpath'
                   ' --with-remote-pid-file=%(localstatedir)s/run/libvirtd.pid '
                   ' --prefix=%(prefix)s --localstatedir=%(localstatedir)s --libdir=%(libdir)s'
                   ' --with-qemu-user=root --with-qemu-group=root' )

        r.ManualConfigure(config)

    def policy(r):

        for d in [ '%(localstatedir)s/run/%(name)s', 
                   '%(sysconfdir)s/libvirt/qemu/networks/autostart',
                   '%(localstatedir)s/log/libvirt',
                   '%(localstatedir)s/log/libvirt/qemu',
                   '%(localstatedir)s/lib/%(name)s/images',
                   '%(localstatedir)s/lib/%(name)s/boot', 
                   '%(localstatedir)s/cache/%(name)s',
                   '%(localstatedir)s/cache/%(name)s/qemu',
                   '%(sysconfdir)s/%(name)s',
                   ]:
            r.MakeDirs(d)
            r.ExcludeDirectories(exceptions = d)

        for d in [ '%(libdir)s/%(name)s/drivers',
                   '%(localstatedir)s/lib/%(name)s/.*',
                   '%(localstatedir)s/run/%(name)s/.*',
                   ]:
            r.ExcludeDirectories(exceptions = d)

        # set perms right
        r.SetModes('%(sysconfdir)s/%(name)s/', 0700)

        for d in ('libvirt/qemu', 'libvirt/qemu/networks', 'libvirt/qemu/autostart'):
            dir = '%(sysconfdir)s/' + d
            r.MakeDirs(dir)
            r.SetModes(dir, 0700)

        r.SetModes('%(localstatedir)s/lib/%(name)s/images/', 0711)
        r.SetModes('%(localstatedir)s/lib/%(name)s/boot/', 0711)
        r.SetModes('%(localstatedir)s/cache/%(name)s/', 0700)

        for d in [ 'run/%(name)s/qemu/',
                   'lib/%(name)s/qemu/', 
                   'lib/%(name)s/lxc/', 
                   'cache/%(name)s/qemu/',
                   'lib/%(name)s/network/', 
                   'lib/%(name)s/iptables/',
                   'lib/%(name)s/iptables/filter/', 
                   'lib/%(name)s/iptables/nat/',
                   'log/%(name)s/',
                   'log/%(name)s/qemu/']:
            r.SetModes('%(localstatedir)s/' + d, 0700)

        r.SetModes('%(libexecdir)s/libvirt_parthelper', 0755)
        r.SetModes('%(sbindir)s/libvirtd', 0755)

        # We don't want to install /etc/libvirt/qemu/networks in the package directly
        # because if the admin wants to delete the default network completely, we don't
        # want to end up re-incarnating it on every conary upgrade.
        r.MakeDirs('%(datadir)s/libvirt/networks')
        r.Copy('%(sysconfdir)s/libvirt/qemu/networks/default.xml', '%(datadir)s/libvirt/networks/default.xml')
        r.Remove('%(sysconfdir)s/libvirt/qemu/networks/default.xml')
        r.Remove('%(sysconfdir)s/libvirt/qemu/networks/autostart/default.xml')
        # Strip auto-generated UUID - we need it generated per-install
        r.Run('sed -i -e "/<uuid>/d" %(destdir)s%(datadir)s/libvirt/networks/default.xml')

        # We want to install the default network for initial conary installs
        # or on the first upgrade from a non-network aware libvirt only.
        # We check this by looking to see if the daemon is already installed
        # thru a taghandler

        r.addSource('%(name)s_uuidgen.tagdescription', macros=True,
                    dest='%(tagdescriptiondir)s/%(name)s_uuidgen')
        r.addSource('%(name)s_uuidgen.taghandler', macros=True,
                    dest='%(taghandlerdir)s/%(name)s_uuidgen', mode=0755)

        r.Requires('file: %(bindir)s/virsh', '%(taghandlerdir)s/%(name)s_uuidgen')
        r.Requires('file: %(sbindir)s/dnsmasq', '%(bindir)s/virsh')

        r.TagSpec('%(name)s_uuidgen', '%(bindir)s/virsh')

        # Client files
        r.PackageSpec("%(name)s-client", '%(mandir)s/man1/virsh\.1.*')
        r.PackageSpec("%(name)s-client", '%(mandir)s/man1/virt-xml-validate\.1.*')
        r.PackageSpec("%(name)s-client", '%(bindir)s/virsh')
        r.PackageSpec("%(name)s-client", '%(bindir)s/virt-xml-validate')
        r.PackageSpec("%(name)s-client", '%(libdir)s/lib.*\.so\..*')
        r.PackageSpec("%(name)s-client", '%(datadir)s/locale/.*')
        r.PackageSpec("%(name)s-client", '%(datadir)s/%(name)s/schemas/.*')
        r.PackageSpec("%(name)s-client", '%(sysconfdir)s/sasl2/libvirt.conf')
