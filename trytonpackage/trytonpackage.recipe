loadInstalled("python")
class TrytonPackage(PackageRecipe):
    name = 'trytonpackage'
    version = '2.0.X'
    to_version = "2.0.5"
    download_url = None
    url = "http://www.tryton.org"
    prebuild = []
    deps = []
    buildRequires = ['python-setuptools:python']

    def setup(r):
        import urllib
        if r.__class__.__name__ == 'TrytonPackage':
            return
        r.macros.pyver =  Python.majversion
        r.macros.sitepkgs = '%(libdir)s/python%(pyver)s/site-packages'
        r.macros.tryver = r.version[:3]
        r.macros.trytonname = r.name[8:]

        r.buildRequires.extend(r.prebuild)
        if "trytond_" in r.name:
            r.buildRequires.extend(['python:devel', 'trytond:python'])
        from_version = 0
        a,b,to_version = r.to_version.split(".")
        for i in range(int(from_version), int(to_version)+1):
            r.macros.check_version = ".".join([a,b,str(i)])
            url = "http://downloads.tryton.org/%(tryver)s/%(name)s-%(check_version)s.tar.gz" % r.macros
            code = urllib.urlopen(url).code
            print "%s code by %s" % ( code, url)
            if code == 200:
                r.macros.reversion = ".".join([a,b,str(i)])
        if r.download_url:
            r.addArchive(r.download_url)
        else:
            r.addArchive("http://downloads.tryton.org/%(tryver)s/%(name)s-%(reversion)s.tar.gz")
        r.PythonSetup(data='--install-data=%(prefix)s')
        if "trytond_" in r.name and r.deps:
            for dep in r.deps:
                r.Requires(dep,"%(sitepkgs)s/trytond/modules/%(trytonname)s/__tryton__.py")

