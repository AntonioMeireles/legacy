#
# Copyright (c) 2008 rPath, Inc.
# Copyright (c) 2008 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

import inspect
from conary.build import packagerecipe

class PackageRecipe(packagerecipe.AbstractPackageRecipe):
    name = 'package'
    version = '1'

    abstractBaseClass = 1

    buildRequires = [
        'bzip2:runtime',
        'gzip:runtime',
        'tar:runtime',
        'cpio:runtime',
        'patch:runtime',
        ]

    def __init__(self, *args, **kwargs):
        packagerecipe.AbstractPackageRecipe.__init__(self, *args, **kwargs)
        if  hasattr(self, "summary") or hasattr(self, "packageDescription"):
            self.Description(shortDesc = self.summary, longDesc =  self.packageDescription, macros = True)
        for name, item in build.__dict__.items():
            if inspect.isclass(item) and issubclass(item, action.Action):
                self._addBuildAction(name, item)

    def setupAbstractBaseClass(r):
        r.addSource(r.name + '.recipe', dest = str(r.cfg.baseClassDir) + '/')
