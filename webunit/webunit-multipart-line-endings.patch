From RFC 2046, section 4.1.1:
   The canonical form of any MIME "text" subtype MUST always represent a
   line break as a CRLF sequence.

diff -ur webunit-1.3.8/webunit/utility.py webunit-1.3.8.new/webunit/utility.py
--- webunit-1.3.8/webunit/utility.py	2003-08-22 22:01:59.000000000 -0400
+++ webunit-1.3.8.new/webunit/utility.py	2007-12-14 15:40:03.000000000 -0500
@@ -20,7 +20,7 @@
         return cmp(self.filename, other.filename)
 
 boundary = '--------------GHSKFJDLGDS7543FJKLFHRE75642756743254'
-sep_boundary = '\n--' + boundary
+sep_boundary = '\r\n--' + boundary
 end_boundary = sep_boundary + '--'
 
 def mimeEncode(data, sep_boundary=sep_boundary, end_boundary=end_boundary):
@@ -37,18 +37,18 @@
             ret.write(sep_boundary)
             # if key starts with a '$' then the entry is a file upload
             if isinstance(value, Upload):
-                ret.write('\nContent-Disposition: form-data; name="%s"'%key)
-                ret.write('; filename="%s"\n\n'%value.filename)
+                ret.write('\r\nContent-Disposition: form-data; name="%s"'%key)
+                ret.write('; filename="%s"\r\n\r\n'%value.filename)
                 if value.filename:
                     value = open(os.path.join(value.filename), "rb").read()
                 else:
                     value = ''
             else:
-                ret.write('\nContent-Disposition: form-data; name="%s"'%key)
-                ret.write("\n\n")
+                ret.write('\r\nContent-Disposition: form-data; name="%s"'%key)
+                ret.write("\r\n\r\n")
             ret.write(str(value))
             if value and value[-1] == '\r':
-                ret.write('\n')  # write an extra newline
+                ret.write('\r\n')  # write an extra newline
     ret.write(end_boundary)
     return ret.getvalue()
 
