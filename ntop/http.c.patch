--- http.c	2010-10-24 12:01:01.000000000 +0200
+++ http.c.new	2010-11-22 13:45:03.000000000 +0100
@@ -831,7 +831,7 @@
 		  "    </tr>\n"
 		  "   </table></td>\n"
 
-		  "<td align=right class=\"leftmenuitem\"><b>(C) 1998-2010 - " CONST_MAILTO_LUCA "</b>&nbsp;&nbsp;</td>"
+		  "<td align=right class=\"leftmenuitem\"> &nbsp;&nbsp;</td>"
 
 		  " </tr>\n"
 		  " <tr>\n"
@@ -1295,106 +1295,6 @@
   }
 
   sendString("\n<br>&nbsp;<br><div id=\"bottom\"><div id=\"footer\">");
-
-  safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER, "&nbsp;<br>Report created on %s ",
-		ctime(&myGlobals.actTime));
-  sendString(buf);
-
-  if(myGlobals.pcap_file_list == NULL) {
-    safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER, "[ntop uptime: %s]\n",
-		  formatSeconds((unsigned long)(time(NULL)-myGlobals.initialSniffTime), 
-						formatBuf, sizeof(formatBuf)));
-  } else {
-    safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER,
-		  "[from file %s]\n",
-		  myGlobals.pcap_file_list->fileName);
-  }
-  sendString(buf);
-
-  if(theHttpUser[0] != '\0') {
-    safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER,
-		  "[HTTP user: %s]\n", theHttpUser);
-    sendString(buf);
-  }
-  sendString("<br>\n");
-
-  safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER,
-		"Generated by ntop v.%s (%d bit)\n[%s]<br>"
-                "&copy; 1998-2010 by Luca Deri, built: %s.<br>\n",
-		version, sizeof(long) == 8 ? 64 : 32, osName, buildDate);
-  sendString(buf);
-
-  sendString("<script type=\"text/javascript\">function nicetitleDecorator(el) {\nvar result = el.title;\nif(el.href){\nresult += '<p>' + el.href + '</p>';\n	}\nreturn result;\n}\ndomTT_replaceTitles(nicetitleDecorator);\n</script>\n");
-
-  if(myGlobals.checkVersionStatus != FLAG_CHECKVERSION_NOTCHECKED) {
-    u_char useRed;
-
-    switch(myGlobals.checkVersionStatus) {
-    case FLAG_CHECKVERSION_OBSOLETE:
-    case FLAG_CHECKVERSION_UNSUPPORTED:
-    case FLAG_CHECKVERSION_NOTCURRENT:
-    case FLAG_CHECKVERSION_OLDDEVELOPMENT:
-    case FLAG_CHECKVERSION_DEVELOPMENT:
-    case FLAG_CHECKVERSION_NEWDEVELOPMENT:
-      useRed = 1;
-      break;
-    default:
-      useRed = 0;
-      break;
-    }
-
-    sendString("Version: ");
-    if(useRed) sendString("<font color=\"red\">");
-    sendString(reportNtopVersionCheck());
-    if(useRed) sendString("</font>");
-    sendString("<br>\n");
-  }
-
-  if(myGlobals.pcap_file_list != NULL) {
-    safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER, "Listening on [%s]\n",
-		  CONST_PCAP_NW_INTERFACE_FILE);
-  } else {
-    buf[0] = '\0';
-
-    for(i=len=numRealDevices=0; i<myGlobals.numDevices; i++, len=strlen(buf)) {
-      if((!myGlobals.device[i].virtualDevice) && myGlobals.device[i].activeDevice) {
-	safe_snprintf(__FILE__, __LINE__, &buf[len], LEN_GENERAL_WORK_BUFFER - len, "%s%s",
-		      (numRealDevices>0) ? "," : "Listening on [", 
-		      myGlobals.device[i].humanFriendlyName);
-	numRealDevices++;
-      }
-    }
-
-    if((i == 0) || (numRealDevices == 0))
-      buf[0] = '\0';
-    else {
-      safe_snprintf(__FILE__, __LINE__, &buf[len], LEN_GENERAL_WORK_BUFFER-len, "]\n");
-    }
-  }
-
-  len = strlen(buf);
-
-  if ((myGlobals.runningPref.currentFilterExpression != NULL) &&
-      (*myGlobals.runningPref.currentFilterExpression != '\0')) {
-    safe_snprintf(__FILE__, __LINE__, &buf[len], LEN_GENERAL_WORK_BUFFER-len,
-		  "with kernel (libpcap) filtering expression </b>\"%s\"<br>\n",
-		  myGlobals.runningPref.currentFilterExpression);
-  } else {
-    safe_snprintf(__FILE__, __LINE__, &buf[len], LEN_GENERAL_WORK_BUFFER-len,
-		  "for all packets (i.e. without a filtering expression)\n<br>");
-  }
-
-  sendString(buf);
-
-  if(!myGlobals.runningPref.mergeInterfaces) {
-    safe_snprintf(__FILE__, __LINE__, buf, LEN_GENERAL_WORK_BUFFER, 
-		  "Web reports include only interface \"%s\"",
-                  myGlobals.device[myGlobals.actualReportDeviceId].humanFriendlyName);
-    sendString(buf);
-  } else {
-    sendString("Web reports include all interfaces (merged)");
-  }
-
   sendString("</div></div>\n</body>\n</html>\n");
 }
 
