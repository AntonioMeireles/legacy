#
# Copyright (c) 2008 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Virtualbox(PackageRecipe):
    name = 'virtualbox'
    version = '3.1.6'
 
    buildRequires = ['SDL:devel', 'chkconfig:runtime', 'desktop-file-utils:runtime', 'fontconfig:devel', 'freetype:devel', 'glib:devel', 'glibc:devel', 'libICE:devel', 'libSM:devel', 'libX11:devel', 'libXcursor:devel', 'libXext:devel', 'libXfixes:devel', 'libXi:devel', 'libXinerama:devel', 'libXrandr:devel', 'libXrender:devel', 'libXt:devel', 'libgcc:devellib', 'libpng:devel', 'libstdc++:devel', 'zlib:devel', 'Mesa:devel', 'PIL:python', 'libXmu:devel', 'python:devel']
 
    def setup(r):
        r.addSource('http://download.virtualbox.org/%(name)s/%(version)s/'
                'VirtualBox-%(version)s-59338-Linux_x86.run', use=Arch.x86)
        r.addSource('http://download.virtualbox.org/%(name)s/%(version)s/'
                'VirtualBox-%(version)s-59338-Linux_amd64.run', use=Arch.x86_64)
        r.addSource('vbox_build_module')
        r.addSource('interfaces')
        r.addSource('60-vboxdrv.rules')
        r.addSource('vbox.cfg')
        if Arch.x86:
            r.Run('echo yes | sh VirtualBox-%(version)s-59338-Linux_x86.run --target %(builddir)s/src/ --nox11 --noexec &>/dev/null')
#		if Arch.x86_64:
        else:
            r.Run('echo yes | sh VirtualBox-%(version)s-59338-Linux_amd64.run --target %(builddir)s/src/ --nox11 --noexec &>/dev/null')		
        r.MakeDirs('/opt/virtualbox')
        r.MakeDirs('%(bindir)s')
        r.MakeDirs('/etc/udev/rules.d/')
        r.MakeDirs('/etc/init.d/')
        r.MakeDirs('%(datadir)s/applications/')
        r.MakeDirs('%(datadir)s/pixmaps/')
        r.MakeDirs('%(datadir)s/licences/%(name)s')
        r.Run('tar xfj %(builddir)s/src/VirtualBox.tar.bz2 -C %(destdir)s/opt/virtualbox/')
        r.Install('vbox_build_module', 'i%(bindir)svbox_build_module')
        r.SetModes('/opt/virtualbox/VirtualBox', 04511)
        r.SetModes('/opt/virtualbox/VBoxSDL', 04511)
        r.SetModes('/opt/virtualbox/VBoxHeadless', 04511)

        #File isnt avaiable anymore.
        #r.Symlink('/opt/virtualbox/VBoxAddIF.sh', '/opt/virtualbox/VBoxAddIF')
        #r.Symlink('/opt/virtualbox/VBoxAddIF.sh', '/opt/virtualbox/VBoxAddIF')
        #r.Symlink('/opt/virtualbox/VBoxAddIF.sh', '/opt/virtualbox/VBoxDelIF')
        r.Symlink('/opt/virtualbox/VBox.sh', '%(bindir)s/VirtualBox')
        r.Symlink('/opt/virtualbox/VBox.sh', '%(bindir)s/VBoxManage')
        r.Symlink('/opt/virtualbox/VBox.sh', '%(bindir)s/VBoxSDL')
        r.Symlink('/opt/virtualbox/VBox.sh', '%(bindir)s/VBoxVRDP')
        r.Symlink('/opt/virtualbox/VBox.sh', '%(bindir)s/VBoxHeadless')
        r.Symlink('/opt/virtualbox/VBoxTunctl', '%(bindir)s/VBoxTunctl')
        r.Copy('/opt/virtualbox/VBox.png', '%(datadir)s/pixmaps/VBox.png')
        r.Copy('/opt/virtualbox/virtualbox.desktop', '%(datadir)s/applications/virtualbox.desktop')
        r.Copy('/opt/virtualbox/LICENSE', '%(datadir)s/licenses/%(name)s/PUEL')
        r.Run('sed -i -e "s/sudo \/etc\/init.d\/vboxdrv setup/\/usr\/bin\/vbox_build_module/g" %(destdir)s/opt/virtualbox/VBox.sh')
        r.Run('sed -i -e "s/sudo \/etc\/init.d\/virtualbox restart/modprobe vboxdrv/g" %(destdir)s/opt/virtualbox/VBox.sh')
        r.Run('sed -i -e "s/sudo \/etc\/init.d\/virtualbox restart/modprobe vboxdrv/g" %(destdir)s/opt/virtualbox/VBox.sh')
        r.Copy('60-vboxdrv.rules', '/etc/udev/rules.d/')
        r.Copy('interfaces', '/etc/vbox/interfaces' ,mode=0644)
        r.Copy('vbox.cfg', '/etc/vbox/')

        #File not avaiable anymore
        #r.Run('cp %(builddir)s/src/vboxnet.sh %(destdir)s/etc/init.d/vboxnet')
        if Arch.x86:
            r.Requires(exceptDeps=r'soname\:\ ELF32\/libcrypto\.so\.4\(SysV\ x86\)')
            r.Requires(exceptDeps=r'soname\:\ ELF32\/libstdc\+\+\.so\.5\(CXXABI\_1\.2\ GLIBCPP\_3\.2\ GLIBCPP\_3\.2\.2\ SysV\ x86\)')
            r.Requires(exceptDeps=r'soname\:\ ELF32\/libstdc\+\+\.so\.5\(CXXABI\_1\.2\ GLIBCPP\_3\.2\ SysV\ x86\)')
            r.Requires(exceptDeps=r'soname\:\ ELF32\/libstdc\+\+\.so\.5\(CXXABI\_1\.2\ SysV\ x86\)')
        else:
            r.Requires(exceptDeps=r'soname\:\ ELF64\/libavcodec\.so\.51\(SysV\ x86\_64\)')
            r.Requires(exceptDeps=r'soname\:\ ELF64\/libavformat\.so\.51\(SysV\ x86\_64\)')
            r.Requires(exceptDeps=r'soname\:\ ELF64\/libavutil\.so\.49\(SysV\ x86\_64\)')		

        # Make sure the kernel module is installed and loaded at boot
        r.Requires('virtualbox-kernel:lib(%(version)s)','%(bindir)s/VirtualBox')
        r.Create('/etc/sysconfig/%(name)s.modules',
                contents='modprobe vboxdrv\n', mode=0755)

        r.UtilizeGroup('vboxusers', '%(bindir)s/VirtualBox')

        r.Requires(exceptDeps=r'soname\:\ ELF64\/libpython2\.3\.so\.1\.0\(SysV\ x86\_64\)')
        r.Requires(exceptDeps=r'soname\:\ ELF64\/libpython2\.5\.so\.1\.0\(SysV\ x86\_64\)')

