#
# Copyright (c) 2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class PolicyKit(RPMPackageRecipe,AutoPackageRecipe):
    name = 'PolicyKit'
    version = '0.7'
    rpmRelease = '3.fc9'

    buildRequires = [ 'libtool:runtime', 'automake:runtime',
                      'autoconf:runtime', 'dbus:devel', 'pkgconfig:devel',
                      'glib:devel', 'dbus-glib:devel', 'dbus-glib:runtime',
                      'pam:devel', 'xmlto:runtime', 'expat:devel',
                      'gnome-doc-utils:devel', 'gnome-doc-utils:runtime',
                      ]

    def configure(r):
        r.addPatch('wheel.patch')

        r.Configure('--with-os-type=redhat --disable-docbook-docs --disable-selinux --disable-gtk-doc')

    def policy(r):
        r.ExcludeDirectories(exceptions='%(datadir)s/PolicyKit/policy')

        # Move package config files to correct directory
        if Arch.x86_64:
            r.Move('%(prefix)s/lib/pkgconfig/*', '%(libdir)s/pkgconfig/')

        # see upstream design specification for why these permissions are necessary
        for d in [ 'polkit-set-default-helper', 'polkit-read-auth-helper' , 'polkit-revoke-helper',
                   'polkit-explicit-grant-helper', 'polkit-grant-helper']:
                    r.Ownership('root','polkituser','%(libexecdir)s/' + d)
                    r.SetModes('%(libexecdir)s/' + d, 02755)

        r.Ownership('root','polkituser','%(libexecdir)s/polkit-grant-helper-pam')
        r.SetModes('%(libexecdir)s/polkit-grant-helper-pam', 04755)

        r.Ownership('polkituser','polkituser','%(localstatedir)s/run/PolicyKit')
        r.Ownership('polkituser','polkituser','%(localstatedir)s/lib/PolicyKit')
        r.Ownership('polkituser','polkituser','%(localstatedir)s/lib/PolicyKit-public')
        r.Ownership('polkituser','polkituser','%(localstatedir)s/lib/misc/PolicyKit.reload')

        r.SetModes('%(localstatedir)s/run/PolicyKit', 0770)
        r.SetModes('%(localstatedir)s/lib/PolicyKit', 0770)
        r.SetModes('%(localstatedir)s/lib/PolicyKit-public', 0775)
        r.SetModes('%(localstatedir)s/lib/misc/PolicyKit.reload', 0775)

        # allows x86 and x86_64 :lib co-existence
        r.ComponentSpec(':runtime', '%(localstatedir)s/lib/PolicyKit/reload')


