#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadRecipe('rpmpackage')
class Dbus(RPMPackageRecipe,AutoPackageRecipe):
    name = 'dbus'
    version = '1.1.2'
    rpmRelease = '2.fc8'
    rpmPatches = ['dbus-0.60-start-early.patch',
                  'dbus-1.0.1-generate-xml-docs.patch',
                  'dbus-1.0.2-lsb.patch']

    buildRequires = [ 'doxygen:runtime', 'expat:devel', 'pkgconfig:devel',
                      'xmlto:runtime', 'libICE:devel', 'libSM:devel',
                      'libX11:devel' , 'audit:devel', 'libcap:devel',
                      'automake:runtime', 'linuxdoc-tools:runtime',
                      'autoconf:runtime', 'libtool:devel', 'libtool:runtime',
                      'util-macros:devel', ]

    def configure(r):
        r.Run('autoreconf -f -i')
        # rPL's default dbus user is dbus. we mantain that for compatibility.
        # should be 'messagebus' ?.

        r.macros.dbus_user = 'dbus'
        r.Configure(' --disable-selinux'
                    ' --disable-tests '
                    ' --with-dbus-user=%(dbus_user)s'
                    ' --disable-asserts '
                    ' --disable-verbose-mode '
                    ' --with-init-scripts=redhat '
                    ' --with-system-pid-file=%(localstatedir)s/run/messagebus.pid')

    def policy(r):

        r.MakeDirs('%(localstatedir)s/run/dbus')
        r.MakeDirs('%(datadir)s/dbus-1/services')
        r.MakeDirs('%(sysconfdir)s/dbus-1/session.d')

        r.ExcludeDirectories(exceptions=['%(datadir)s/dbus-1/services'])
        r.ExcludeDirectories(exceptions=['%(sysconfdir)s/dbus-1/system.d'])
        r.ExcludeDirectories(exceptions=['%(sysconfdir)s/dbus-1/session.d'])
        r.ExcludeDirectories(exceptions=['%(localstatedir)s/run/dbus'])
        r.ExcludeDirectories(exceptions=['%(localstatedir)s/lib/dbus'])

        r.TagSpec('initscript', '%(initdir)s/')
        r.UtilizeUser('dbus', '%(sysconfdir)s/.*/system.conf')

        r.PackageSpec('dbus-x11', '%(bindir)s/dbus-launch')
