#
# Copyright (c) 2004-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class FireFox(RPMPackageRecipe, AutoPackageRecipe):
    name = 'firefox'
    version = '3.6.12'

    buildRequires = ['atk:devel', 'autoconf:runtime', 'xulrunner:devel',
                     'cairo:devel', 'desktop-file-utils:runtime', 'fontconfig:devel',
                     'freetype:devel', 'gcc:devel', 'glib:devel', 'gtk:devel', 'nss:devel',
                     'libIDL:devel', 'libjpeg:devel', 'libpng:devel', 'pango:devel',
                     'perl:runtime', 'pkgconfig:devel', 'zip:runtime',
                     'zlib:devel', 'libstdc++:devel', 'libgcc:devellib', 'nspr:devel',
                     'krb5:devel', 'expat:devel',
                     'libICE:devel', 'libSM:devel', 'libX11:devel', 'libXext:devel',
                     'libXft:devel', 'libXinerama:devellib', 'libXrender:devel',
                     'libXt:devel', 'libXau:devel', 'libXdmcp:devel',
                     'GConf:devel', 'ORBit2:devel', 'gnome-vfs:devel',
                     'libbonobo:devel', 'libgnome:devel', 'popt:devel','alsa-lib:devel',
                     'gnome-keyring:devel', 'libart_lgpl:devel', 'libbonoboui:devel',
                     'libgnomecanvas:devel', 'libgnomeui:devel', 'libxml2:devel', 'unzip:runtime',
                     'startup-notification:devel', 'libXinerama:devel', 'dbus-glib:devel',
                     'dbus:devel', 'libnotify:devel' ]

    rpmRelease = '1.fc13'

    tarballName = 'firefox-%(version)s.source.tar.bz2'
    rpmArchives = ['firefox-langpacks-%(version)s-20101027.tar.bz2']
    rpmSources = [ 'firefox.sh.in', 'firefox-redhat-default-prefs.js', 'firefox.1']
    rpmPatches = [ 'firefox-disable-checkupdates.patch',
                   'firefox-default.patch',
                   ]

    def unpack(r):
        RPMPackageRecipe.unpack(r)
        # taken from xulrunner 
#        r.addPatch('nspr-build.patch')

        # macros bellow called by taghandler
        r.macros.fflib = '%(libdir)s/%(name)s-%(version)s/'
        r.macros.ffinc = '%(includedir)s/%(name)s-%(version)s/'

        r.addSource('firefox.taghandler', macros=True,
                    dest='%(taghandlerdir)s/firefox', mode=0755)

        for descr in ('extension', 'xpt-component', 'chrome'):
            r.addSource('firefox-%s.tagdescription' %descr, macros=True,
                        dest='%(tagdescriptiondir)s/firefox-' + descr)

        # alsa-lib not an inplicit Requires. we make it explicit to control 
        # update order and avoid errors like the one bellow ...
        #  [firefox-xpt-component] /usr/lib64/firefox-3.5/firefox-bin: error while loading shared libraries:
        #  libasound.so.2: cannot open shared object file: No such file or directory
        r.Requires('alsa-lib:lib', '%(taghandlerdir)s/.*')

    def configure(r):
        r.macros.version = '3.6'
        r.Environment('INTERNAL_GECKO','%(version)s')
        r.Environment('MOZ_APP_DIR','%(libdir)s/%(name)s-%(version)s')
        r.macros.MOZ_APP_DIR = '%(libdir)s/%(name)s-%(version)s'
        r.macros.INTERNAL_GECKO = '%(version)s'

        r.Environment('BUILD_OFFICIAL', '1')
        r.Environment('MOZILLA_OFFICIAL', '1')

        r.macros.ldflags += ' -Wl,-rpath,%(MOZ_APP_DIR)s '

        r.Replace('\$\(MOZ_APP_NAME\)-\$\(MOZ_APP_VERSION\)','$(MOZ_APP_NAME)-%(version)s', 'config/autoconf.mk.in')
        r.Replace('\$\(MOZ_APP_NAME\)-devel-\$\(MOZ_APP_VERSION\)','$(MOZ_APP_NAME)-devel-%(version)s', 'config/autoconf.mk.in')

        r.Run('echo "ac_cv_visibility_pragma=no" >> .mozconfig')
        r.Run('echo "ac_cv_visibility_hidden=no" >> .mozconfig')
        r.Run('echo "ac_cv_visibility_default=no" >> .mozconfig')

        r.Configure(
            ' --with-system-nspr'
            ' --with-system-nss'
            ' --with-system-jpeg'
            ' --with-system-zlib'
            # ' --with-system-png'
            ' --with-pthreads'
            ' --disable-tests'
            ' --disable-debug'
            ' --enable-optimize=\"%(optflags)s  -I%(includedir)s/nss3 -I%(includedir)s/nspr4\"'
            ' --disable-installer'
            ' --enable-xinerama' 
            ' --enable-default-toolkit=cairo-gtk2'
            ' --disable-xprint'
            ' --disable-strip'

            ' --disable-system-hunspell'
            ' --disable-system-cairo'

            ' --enable-pango'
            ' --enable-svg'
            ' --enable-canvas'
            ' --disable-startup-notification'
            ' --enable-libxul'
            ' --with-system-libxul '
            ' --disable-crashreporter'
            ' --enable-safe-browsing'
            ' --enable-official-branding'
            ' --enable-application=browser'
            ' --disable-necko-wifi '
            )


    def makeinstall(r):
        r.MakeInstall()

        r.addSource('firefox.desktop')
        r.Desktopfile('firefox.desktop')

        # set up the firefox start script
        r.Remove('%(bindir)s/%(name)s')

        r.Install('%(name)s.sh.in', '%(bindir)s/%(name)s', mode = 0755)
        r.Replace('FIREFOX_VERSION', '%(version)s', '%(bindir)s/%(name)s')

        # set up our default preferences

        r.Replace('FIREFOX_RPM_VR', '%(version)s', '%(name)s-redhat-default-prefs.js')
        r.Replace('Fedora', 'Foresight Linux', '%(name)s-redhat-default-prefs.js')


        # set up our default homepage
        # SADLY mozilla.org licensing terms don't allow this (!)...

        #        r.Run("""
        # cat >> %(name)s-redhat-default-prefs.js << EOF
        # pref("browser.startup.homepage", "http://www.foresightlinux.org");
        # # Don't show an welcome page during first start
        # pref("startup.homepage_override_url", "");
        # pref("startup.homepage_welcome_url", "");
        # EOF
        # """)

        # place the preferences
        r.Install('%(name)s-redhat-default-prefs.js', '%(MOZ_APP_DIR)s/defaults/pref/all-foresight.js', mode = 0644)

        r.Install('firefox.1', '%(mandir)s/man1/firefox.1', mode = 0644)

        r.Remove('%(libdir)s/%(name)s-%(version)s/firefox-config')

        # langpacks

        # FIXME
        r.Run(""" 
mkdir  %(destdir)s/%(MOZ_APP_DIR)s/extensions
cp -ar ../%(name)s-%(version)s/firefox-langpacks %(destdir)s/%(MOZ_APP_DIR)s/extensions/
cd %(destdir)s/%(MOZ_APP_DIR)s/extensions/
for langpack in `ls firefox-langpacks/*.xpi`; do
  language=`basename $langpack .xpi`
  extensiondir=%(destdir)s/%(MOZ_APP_DIR)s/extensions/langpack-$language@firefox.mozilla.org
  mkdir  $extensiondir
  unzip $langpack -d $extensiondir
  find $extensiondir -type f | xargs chmod 644

done
rm -rf firefox-langpacks

""")

        firefox_app_id = "{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"
        for d in ["%(datadir)s/mozilla/extensions/", "%(libdir)s/mozilla/extensions/"]:
            dd = d + firefox_app_id
            #r.MakeDirs(dd)
            r.Run("""mkdir -p ./%s"""  % dd , dir = '%(destdir)s' )
            r.ExcludeDirectories(exceptions = dd)


        # r.Create('%(MOZ_APP_DIR)s/components/compreg.dat')
        r.Create('%(MOZ_APP_DIR)s/components/xpti.dat')
        # r.InitialContents('%(MOZ_APP_DIR)s/components/compreg.dat')
        r.InitialContents('%(MOZ_APP_DIR)s/components/xpti.dat')

        # icons 
        r.Install('other-licenses/branding/%(name)s/default16.png', '%(MOZ_APP_DIR)s/icons/')
        r.Install('other-licenses/branding/%(name)s/default16.png', '%(datadir)s/icons/hicolor/16x16/apps/firefox.png', mode = 0644)
        r.Install('other-licenses/branding/%(name)s/default22.png', '%(datadir)s/icons/hicolor/22x22/apps/firefox.png', mode = 0644)
        r.Install('other-licenses/branding/%(name)s/default24.png', '%(datadir)s/icons/hicolor/24x24/apps/firefox.png', mode = 0644)
        r.Install('other-licenses/branding/%(name)s/default32.png', '%(datadir)s/icons/hicolor/32x32/apps/firefox.png', mode = 0644)
        r.Install('other-licenses/branding/%(name)s/default48.png', '%(datadir)s/icons/hicolor/48x48/apps/firefox.png', mode = 0644)
        r.Install('other-licenses/branding/%(name)s/default256.png', '%(datadir)s/icons/hicolor/256x256/apps/firefox.png', mode = 0644)


    def policy(r):
        # We use separate nspr & nss
        r.Remove('%(libdir)s/pkgconfig/firefox-nspr.pc')
        r.Remove('%(libdir)s/pkgconfig/firefox-nss.pc')

        r.Requires(exceptDeps='java:.*')
        # FL-2595
        r.ComponentSpec('devel', '%(libdir)s/%(name)s-devel-%(version)s/(xpcom-config.h|bin|idl|include|lib)')
        r.ComponentSpec('devellib', '%(libdir)s/%(name)s-devel-%(version)s/sdk/lib/lib(mozjs|xpcom|xul).so')
