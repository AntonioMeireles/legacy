#
# Copyright (c) 2004-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage', label='conary.rpath.com@rpl:devel')
class FireFox(RPMPackageRecipe, CPackageRecipe):
    name = 'firefox'
    version = '1.5.0.6'

    rpmUpVer = '1.5.0.6'
    rpmRelease = '3'

    buildRequires = ['atk:devel', 'autoconf:runtime',
        'cairo:devel', 'desktop-file-utils:runtime', 'fontconfig:devel',
        'freetype:devel', 'gcc:devel', 'glib:devel', 'gtk:devel', 'nss:devel',
        'libIDL:devel', 'libjpeg:devel', 'libpng:devel', 'pango:devel',
        'perl:runtime', 'pkgconfig:devel', 'zip:runtime',
        'zlib:devel', 'libstdc++:devel', 'libgcc:devellib',
        'nspr:devel', 'libX11:devel', 'libXau:devel',
        'libXdmcp:devel', 'libXt:devel', 'libXext:devel',
        'libXi:devel', 'libXinerama:devellib', 'libXft:devel',
        'libXrender:devel','libdmx:devel', 'libICE:devel', 'libSM:devel' ]

    rpmPatches = [ 'firefox-1.1-nss-system-nspr.patch',
                   'firefox-1.5-with-system-nss.patch' ]
    externalArchive = 'http://ftp.mozilla.org/pub/mozilla.org/%(name)s/releases/%(version)s/source/%(name)s-%(version)s-source.tar.bz2'

    if Use.gnome:
        buildRequires.extend(['GConf:devel', 'ORBit2:devel', 'gnome-vfs:devel',
            'libbonobo:devel', 'libgnome:devel', 'popt:devel',
            'gnome-keyring:devel', 'libart_lgpl:devel', 'libbonoboui:devel',
            'libgnomecanvas:devel', 'libgnomeui:devel', 'libxml2:devel' ])

    if Use.krb:
        buildRequires.append('krb5:devel')

    def setup(r):
        r.unpack()

        r.addPatch('foresight-homepage.patch')

        r.macros.fflib = '%(libdir)s/firefox/'
        r.macros.ffinc = '%(includedir)s/firefox/'

        r.addSource('dot_mozconfig', dest='.mozconfig')
        r.addSource('firefox.taghandler', macros=True,
                    dest='%(taghandlerdir)s/firefox', mode=0755)
        for descr in ('extension', 'xpt-component', 'chrome'):
            r.addSource('firefox-%s.tagdescription' %descr, macros=True,
                        dest='%(tagdescriptiondir)s/firefox-' + descr)
        r.addSource('firefox.desktop')
        r.Desktopfile('firefox.desktop')
        r.addSource('firefox.png', dest='%(datadir)s/pixmaps/firefox.png',
                    mode=0644)

        r.addPatch('firefox-use-running.patch')
        r.addPatch('firefox-nopangoxft.patch')

        r.disableParallelMake()
        r.Replace(('%%MOZAPPDIR%%', '%(libdir)s/firefox'),
                  ('%%MREDIR%%', '%(libdir)s/mre/mre'),
                  'browser/app/mozilla.in')

        if not Use.gnome:
            r.Run('echo "ac_add_options --disable-gnomevfs" >> .mozconfig')
            r.Run('echo "ac_add_options --disable-gnomeui" >> .mozconfig')

        r.Make('-f client.mk build')
        # disable stripping while we're creating the tarball so that
        # we will get debuginfo
        r.Make('-C browser/installer/ STRIP=/bin/true')
        # now extract the tar archive in firefox's home
        r.MakeDirs('%(libdir)s')
        r.Run('tar -xz -C %(destdir)s/%(libdir)s -f dist/firefox-*.tar.gz')
        # this should not be included
        r.Move('%(libdir)s/firefox/{README.txt,LICENSE}', '%(thisdocdir)s/')
        # add a link into %(bindir)s for the firefox executable
        r.Symlink('%(libdir)s/firefox/firefox', '%(bindir)s/')
        # files in this directory are dynamically generated by the
        # tag handler script.  They should always be replaced on update
        r.Transient('%(libdir)s/firefox/extensions/')

        # Install :devel component
        r.Install('dist/include/*', '%(ffinc)s/')
        r.MakeDirs('%(datadir)s/idl/firefox')
        r.Install('dist/idl/*', '%(datadir)s/idl/firefox')
        for file in ('xpcshell', 'xpidl', 'xpt_dump', 'xpt_link'):
            r.Install('dist/bin/%s' % file, '%(fflib)s')
        for file in ('gtkmozembed', 'js', 'nspr', 'nss', 'plugin', 'xpcom'):
            r.Replace('\/local', '', 'build/unix/firefox-%s.pc' % file)
            r.Replace('firefox-.*', 'firefox', 'build/unix/firefox-%s.pc' % file)
            r.Install('build/unix/firefox-%s.pc' % file, '%(libdir)s/pkgconfig/')
