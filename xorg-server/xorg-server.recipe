#
# Copyright (c) 2005-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('xorgpackage.recipe')
class XorgServer(XorgPackageRecipe):
    name = 'xorg-server'
    version = '1.1.1'
    component = 'xserver'

    Flags.dmx  = True
    Flags.dri = True
    Flags.xnest = True

    # XXX: ld dies trying to link xorgcfg without libXext, need to make sure
    # configure checks for it
    # perl:lib needed to satisfy "perl: File::Glob" for /usr/bin/getconfig.pl
    buildRequires = [ 'flex:runtime', 'freetype:devel', 'libICE:devel',
        'libSM:devel', 'libXaw:devel', 'libXext:devel', 'libXfont:devel',
        'libXmu:devel', 'libXpm:devel', 'libXt:devel', 'libXxf86misc:devel',
        'libXxf86vm:devel', 'libfontenc:devel', 'liblbxutil:devellib',
        'libxkbfile:devel', 'libxkbui:devel', 'ncurses:devel', 'perl:lib',
        'perl:runtime', 'xtrans:devel', 'zlib:devel', 'espgs:runtime'  ]

    protoBuildRequires = [ 'bigreqsproto:devel', 'compositeproto:devel',
        'damageproto:devel', 'evieext:devel',  'fixesproto:devel',
        'fontsproto:devel', 'inputproto:devel', 'randrproto:devel',
        'recordproto:devel', 'renderproto:devel', 'resourceproto:devel',
        'scrnsaverproto:devel', 'trapproto:devel', 'videoproto:devel',
        'xcmiscproto:devel', 'xextproto:devel', 'xf86bigfontproto:devel',
        'xf86dgaproto:devel', 'xf86miscproto:devel', 'xf86vidmodeproto:devel',
        'xineramaproto:devel', 'xproto:devel' ]

    buildRequires.extend(protoBuildRequires)

    # XXX: can go away when the libxf86config parser patches go away
    buildRequires.extend([ 'autoconf:runtime', 'automake:runtime',
        'libtool:runtime', 'util-macros:devel' ])

    # XXX: we don't support xprint
    extraConfig = ' --disable-xprint'

    if Use.nvidia:
        buildRequires.extend(['nvidia'])


    if Flags.dmx:
        buildRequires.extend([ 'libXi:devel', 'libXrender:devel',
            'libXres:devel', 'libXtst:devellib', 'libdmx:devel' ])
    else:
        extraConfig += ' --disable-dmx'

    if Flags.dri:
        buildRequires.extend([ 'Mesa:devel', 'glproto:devel', 'libdrm:devel',
            'xf86driproto:devel' ])

    if not Flags.xnest:
        extraConfig += ' --disable-xnest'

    def setup(r):
        r.macros.osname = "'Foresight Linux (rPath Linux derivative)'"
        r.macros.vendor = "'Ant√≥nio Meireles aka doniphon'"
        r.extraConfig += ' --with-os-name=%(osname)s --with-vendor=%(vendor)s'

        XorgPackageRecipe.setup(r)

    def unpack(r):

        srpm = 'http://download.fedora.redhat.com/pub/fedora/linux/core/development/source/SRPMS/xorg-x11-server-1.1.1-40.fc6.src.rpm'

        r.addArchive(srpm)
        # pulled from Fedora CVS (xorg-x11-xdm, rev. 1.1)
        r.addSource('xserver.pamd',
                    dest='%(sysconfdir)s/pam.d/xserver', mode=00644)

        # need to have archive before we apply patches to it
        XorgPackageRecipe.unpack(r)

        # according to http://xorg.freedesktop.org/wiki/ModularDevelopersGuide
        # we need the Mesa source to build GLX support
        r.macros.mesaVersion = '6.5.1'
        r.addArchive('mirror://sourceforge/mesa3d/MesaLib-%(mesaVersion)s.tar.bz2', use=Flags.dri)

        if Flags.dri:
            r.extraConfig += ( ' --enable-dri'
                               ' --enable-glx-tls'
                               ' --with-mesa-source=%(builddir)s/../Mesa-%(mesaVersion)s'
                               ' --with-dri-driver-path=%(libdir)s/dri'
                               ' --with-pic'
                               ' --enable-composite'
                               ' --enable-xtrap'
                               ' --enable-xcsecurity'
                               ' --enable-xevie'
                               ' --with-default-font-path="unix/:7100,built-ins"'
                               ' --with-xkb-output=%(localstatedir)s/lib/xkb'
                               ' --with-rgb-path=%(datadir)s/X11'
                               )
        else:
            r.extraConfig += ' --disable-dri'

        # Fedora xorg-server patchset
        # base patches
        r.addPatch('xorg-x11-server-0.99.3-init-origins-fix.patch', rpm=srpm)
        r.addPatch('xserver-1.0.0-parser-add-missing-headers-to-sdk.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-libxf86config-dont-write-empty-sections.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-builderstring.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-xkb-in-xnest.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-xvfb-composite-crash.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-pclose-confusion.patch', rpm=srpm)
        # OpenGL compositing manager feature/optimization patches.
        r.addPatch('xorg-x11-server-1.1.0-no-move-damage.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-dont-backfill-bg-none.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-tfp-damage.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-mesa-copy-sub-buffer.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-enable-composite.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-no-composite-in-xnest.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-offscreen-pixmaps.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-mesa-6.5.1.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-aiglx-happy-vt-switch.patch', rpm=srpm)
        # Red Hat specific tweaking (some are usefull to us ;-) )
        r.addPatch('xorg-redhat-die-ugly-pattern-die-die-die.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.0.1-fpic-libxf86config.patch', rpm=srpm)
        # Backports of post-1.1 stuff.
        r.addPatch('xorg-x11-server-1.1.0-pci-scan-fixes.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-no-zlib.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-Xdmx-render-fix-fdo7482.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-revert-xkb-change.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-aiglx-locking.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-edid-hex-dump.patch', rpm=srpm)
        # autoconfiguration feature patches
        r.addPatch('xorg-x11-server-1.1.0-edid-mode-injection-1.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-edid-mode-injection-2.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-cvt-generator-in-core.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.0-no-autoconfig-targetrefresh.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-getconfig-pl-die-die-die.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-dpms-on-by-default.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-edid-root-window-properties.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-sanedefaultmode.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-module-list.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-edid-quirks-list.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-defaultdepth-24.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-always-mouse-thyself.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-fix-default-mouse-device-yet-again.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-infer-virtual.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-mode-sort-kung-fu.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-pci-paranoia.patch', rpm=srpm)
        r.addPatch('xorg-x11-server-1.1.1-believe-monitor-rb-modes.patch', rpm=srpm)


        r.Automake()

    def install(r):
        XorgPackageRecipe.install(r)

        r.SetModes('%(bindir)s/Xorg', 04611)

        # copied from xorg-x11 recipe; is this for consolehelper?
        r.MakeDirs('%(sysconfdir)s/security/console.apps/')
        r.Run('touch %(destdir)s%(sysconfdir)s/security/console.apps/xserver')


        # make xorg.conf an InitialContents file so it's managed locally, but
        # removed when xorg-server is
        r.MakeDirs('%(sysconfdir)s/X11')
        r.Run('touch %(destdir)s%(sysconfdir)s/X11/xorg.conf')
        r.InitialContents('%(sysconfdir)s/X11/xorg.conf')

        # XXX: until conary has overrides
        # we remove the files that conflict with proprietary drivers
        # by having a flavoured xorg-server
        # contrary to Mesa, only nVidia messes with files from xorg-server

        if Use.nvidia:
            r.Remove('%(libdir)s/xorg/modules/extensions/libglx.*')



