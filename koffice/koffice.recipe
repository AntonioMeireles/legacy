#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('kdepackage.recipe')
class KOffice(kdePackageRecipe):

    name = 'koffice'
    version = '1.6.3'

    buildRequires = [
        'bzip2:devel', 'expat:devel', 'ImageMagick:devel', 'lcms:devel',
        'libexif:devel', 'libgsf:devel', 'libpqxx:devel', 'libtermcap:devel',
        'libtiff:devel', 'libwpd:devel', 'libxml2:devel', 'libxslt:devel',
        'mysql:devel', 'OpenEXR:devel', 'openssl:devel', 'pcre:devel',
        'perl:lib', 'postgresql:devel', 'python:devel', 'readline:devel',
        'ruby:devellib', 'ruby:runtime', 'which:runtime', 'wv2:devel'
    ]

    def unpack(r):

        r.addArchive('mirror://kde/stable/%(name)s-%(version)s/src/')

        # Build fix
        r.Replace('^ksqlite',
                  'LD_LIBRARY_PATH=$KEXISQL3PATH ksqlite',
                  'kexi/examples/build_kexi_file.sh')

    def makeinstall(r):

        extraSpecs = [
            ('kexi-mysql', '.+mysql.+'),
            ('kexi-postgresql', '.+pqxx.+'),
            ('kword', '%(datadir)s/templates/.*TextDocument.+'),
            ('karbon', '%(datadir)s/templates/.*Illustration.+'),
            ('kspread', '%(datadir)s/templates/.*SpreadSheet.+'),
            ('kpresenter', '%(datadir)s/templates/.*Presentation.+')
        ]
        for package, spec in extraSpecs:
            r.PackageSpec(package, spec)

        packages = [
            'karbon', 'kchart', 'kexi', 'kformula', 'kivio', 'kplato',
            'kpresenter', 'krita', 'kspread', 'kugar', 'kword'
        ]
        for package in packages:
            r.MakeInstall(dir=package, package=package)
            r.PackageSpec(package,
                          '%(thisdocdir)s/' + package + '/',
                          '%(datadir)s/.+/' + package + '_konqi.desktop')
            for dir in ('doc', 'filters'):
                r.MakeInstall(dir='/'.join((dir, package)),
                              package=package, skipMissingDir=True)

        extraModules = [
            ('kplato', 'kdgantt'),
            ('koffice-common',
                'autocorrect', 'doc', 'filters', 'interfaces', 'koshell',
                'kounavail', 'lib', 'mimetypes', 'pics', 'plugins',
                'servicetypes', 'tools')
        ]
        for module in extraModules:
            package = module[0]
            subDirs = module[1:]
            for dir in subDirs:
                r.MakeInstall(dir=dir, package=package)
                r.PackageSpec(package, '%(thisdocdir)s/' + dir + '/')

        r.PackageSpec('koffice-common', '%(thisdocdir)s/')

        r.MakeInstall(package='koffice-orphan')

