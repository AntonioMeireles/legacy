--- util-linux-2.11y/partx/dos.c.endians	2002-04-10 06:11:07.000000000 -0400
+++ util-linux-2.11y/partx/dos.c	2003-05-23 18:50:25.000000000 -0400
@@ -1,4 +1,5 @@
 #include <stdio.h>
+#include <asm/byteorder.h>
 #include "partx.h"
 #include "dos.h"
 
@@ -18,7 +19,7 @@ read_extended_partition(int fd, struct p
 	int moretodo = 1;
 	int i, n=0;
 
-	here = start = ep->start_sect;
+	here = start = __le32_to_cpu(ep->start_sect);
 
 	while (moretodo) {
 		moretodo = 0;
@@ -38,8 +39,8 @@ read_extended_partition(int fd, struct p
 			if (p->nr_sects == 0 || is_extended(p->sys_type))
 				continue;
 			if (n < ns) {
-				sp[n].start = here + p->start_sect;
-				sp[n].size = p->nr_sects;
+				sp[n].start = here + __le32_to_cpu(p->start_sect);
+				sp[n].size = __le32_to_cpu(p->nr_sects);
 				n++;
 			} else {
 				fprintf(stderr,
@@ -52,7 +53,7 @@ read_extended_partition(int fd, struct p
 		p -= 2;
 		for (i=0; i<2; i++, p++) {
 			if(p->nr_sects != 0 && is_extended(p->sys_type)) {
-				here = start + p->start_sect;
+				here = start + __le32_to_cpu(p->start_sect);
 				moretodo = 1;
 				break;
 			}
@@ -91,8 +92,8 @@ read_dos_pt(int fd, struct slice all, st
 	for (i=0; i<4; i++) {
 		/* always add, even if zero length */
 		if (n < ns) {
-			sp[n].start = p->start_sect;
-			sp[n].size = p->nr_sects;
+			sp[n].start = __le32_to_cpu(p->start_sect);
+			sp[n].size = __le32_to_cpu(p->nr_sects);
 			n++;
 		} else {
 			fprintf(stderr,
