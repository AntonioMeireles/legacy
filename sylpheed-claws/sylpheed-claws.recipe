class sylpheedclaws(AutoPackageRecipe):
    name = 'sylpheed-claws'
    version = '2.6.0'

    Flags.aspell = True
#clamav isn't in rpl or contrib yet
    Flags.clamav = False
#dillo support is disabled by default because it might have security holes (just being cautious)
    Flags.dillo = False
    Flags.compface = True
    Flags.crashdialog = True
    Flags.gnomeprint = True
    Flags.gpg = True
    Flags.imap = True
    Flags.pilot = True
    Flags.spamassassin = True

    buildRequires = ['flex:runtime', 'pkgconfig:devel',
		     'atk:devel', 'cairo:devel', 'cyrus-sasl:devel', 
		     'db:devel', 'fontconfig:devel', 'freetype:devel', 
                     'glib:devel', 'gtk:devel', 'krb5:devel', 
		     'libart_lgpl:devel', 'libgnomecanvas:devel', 'libpng:devel', 'libxml2:devel', 
                     'pango:devel', 'startup-notification:devel',
                     'xorg-x11:devel', 'zlib:devel', 'desktop-file-utils:runtime',
                     'gtk:runtime', 'e2fsprogs:devel']

    if Flags.aspell:
	buildRequires.extend(['aspell:runtime', 'aspell:devel'])
    if Flags.clamav:
#untested
	buildRequires.extend(['clamav:devel'])
    if Flags.compface:
    	buildRequires.extend(['compface:devel'])
    if Flags.dillo:
        buildRequires.extend(['dillo:devel'])
    if Flags.gnomeprint:
        buildRequires.extend(['libgnomeprint:devel', 'libgnomeprintui:devel'])
    if Flags.gpg:
        buildRequires.extend(['gpgme:devel', 'gnupg:runtime', 'libgpg-error:devel'])
    if Flags.imap:
	buildRequires.extend(['libetpan:devel'])
    if Flags.pilot:
        buildRequires.extend(['pilot-link:devel'])
    if Flags.spamassassin:
	buildRequires.extend(['spamassassin:devel'])

    if Use.ldap:
	buildRequires.extend(['openldap:devel'])
    if Use.ssl:
	buildRequires.extend(['openssl:devel'])

    def unpack(r):
       	r.addArchive('http://puzzle.dl.sourceforge.net/sourceforge/sylpheed-claws/%(name)s-%(version)s.tar.bz2')

    def configure(r):
        if Use.krb:
            r.macros.cppflags = '%(cppflags)s -I%(prefix)s/kerberos/include'
            r.macros.ldflags = '%(ldflags)s -L%(prefix)s/kerberos/lib'

	extraConf=''
	if not Flags.aspell:
        	extraConf += ' --disable-aspell'
	if not Flags.clamav:
        	extraConf += ' --disable-clamav-plugin'
	if not Flags.compface:
        	extraConf += ' --disable-compface'
        if Flags.crashdialog:
        	extraConf += ' --enable-crash-dialog'
	if not Flags.dillo:
        	extraConf += ' --disable-dillo-plugin'
	if not Flags.gnomeprint:
        	extraConf += ' --disable-gnomeprint'
	if not Flags.gpg:
        	extraConf += ' --disable-pgpcore-plugin --disable-pgpmime-plugin --disable-pgpinline-plugin'
	if not Flags.imap:
        	extraConf += ' --disable-libetpan'
        if not Flags.pilot:
        	extraConf += ' --disable-jpilot'
	if Flags.spamassassin:
        	extraConf += ' --enable-spamassassin-plugin'
        if not Use.ldap:
        	extraConf += ' --disable-ldap'
        if not Use.ssl:
        	extraConf += ' --disable-openssl'

	r.Configure(extraConf)

    def policy(r):
        r.Install('*.png', '%(datadir)s/pixmaps/')
