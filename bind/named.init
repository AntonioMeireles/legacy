#!%(essentialbindir)s/bash
#
# named           This shell script takes care of starting and stopping
#                 named (BIND DNS server).
#
# chkconfig: - 55 45
# description: named (BIND) is a Domain Name Server (DNS) \
# that is used to resolve host names to IP addresses.
# probe: true

# Source function library.
. %(sysconfdir)s/rc.d/init.d/functions

# Source networking configuration.
[ -r %(sysconfdir)s/sysconfig/network ] && . %(sysconfdir)s/sysconfig/network

RETVAL=0
prog="named"

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

[ -r %(sysconfdir)s/sysconfig/named ] && . %(sysconfdir)s/sysconfig/named

[ -x %(sbindir)s/named ] || exit 0 

[ -r ${ROOTDIR}%(sysconfdir)s/named.conf ] || exit 0 


start() {
        # Start daemons.
	if [ -n "`%(essentialsbindir)s/pidof named`" ]; then
		echo -n $"$prog: already running"
		return 1
	fi
	# Set up key if necessary
	if grep '@KEY@' %(sysconfdir)s/rndc.key &>/dev/null ; then
		sed -i "s/@KEY@/$(%(sbindir)s/dns-keygen)/" %(sysconfdir)s/rndc.key
	fi
        echo -n $"Starting $prog: "
	if [ -n "${ROOTDIR}" -a "x${ROOTDIR}" != "x/" ]; then
		OPTIONS="${OPTIONS} -t ${ROOTDIR}"
	fi
	daemon %(sbindir)s/named -u named ${OPTIONS}
	RETVAL=$?
 	[ $RETVAL -eq 0 ] && touch %(localstatedir)s/lock/subsys/named 
        echo
	return $RETVAL
}
stop() {
        # Stop daemons.
        echo -n $"Stopping $prog: "
	%(sbindir)s/rndc stop
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f %(localstatedir)s/lock/subsys/named || {
        	killproc named
		RETVAL=$?
		[ $RETVAL -eq 0 ] && rm -f %(localstatedir)s/lock/subsys/named
		echo
		return $RETVAL 
	}
	success
        echo
	return $RETVAL
}
status() {
	if [ -z "`%(essentialsbindir)s/pidof named`" ]; then
	    # not running, start it
	    echo $"$prog not running"
	    return 1
	fi
	%(sbindir)s/rndc status
	return $?
}	
restart() {
	stop
	# wait a couple of seconds for the named to finish closing down
	sleep 2
	start
}	
reload() {
        echo -n $"Reloading $prog: "
	if [ -z "`%(essentialsbindir)s/pidof named`" ]; then
	    # not running, start it
	    failure $"$prog reload"
	    start
	fi
	%(sbindir)s/rndc reload >/dev/null 2>&1 || %(essentialbindir)s/kill -HUP `%(essentialsbindir)s/pidof -o %%PPID named`
	[ "$?" -eq 0 ] && success $"$prog reload" || failure $"$prog reload"
        echo
	return $?
}
probe() {
	# named knows how to reload intelligently; we don't want linuxconf
	# to offer to restart every time
	%(sbindir)s/rndc reload >/dev/null 2>&1 || echo start
	return $?
}  

# See how we were called.
case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	restart)
		restart
		;;
	condrestart)
		if [ -e %(localstatedir)s/lock/subsys/named ]; then restart; fi
		;;
	reload)
		reload
		;;
	probe)
		probe
		;;
	*)
        	echo $"Usage: $0 {start|stop|status|restart|condrestart|reload|probe}"
		exit 1
esac

exit $?
