#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Curl(AutoPackageRecipe):
    name = 'curl'
    version = '7.21.7'

    buildRequires = [ 'libtool:runtime', 'pkgconfig:devel', 'krb5:devel',
                      'zlib:devel', 'perl:runtime', 'openssl:devel', 
                      'libidn:devel', 'openldap:devel', 'perl:devel',
                      'rtmpdump:devel', 'nss:devel']
    # requires: openssl:runtime for shared ca-bundle

    def unpack(r):
        r.addArchive('http://curl.haxx.se/download/')
        for patch in [ '0001-curl-7.21.7-a7864c4.patch',
                       '0002-curl-7.21.7-5eb2396.patch',
                       '0005-curl-7.21.7-61ae7e9.patch',
                       '0003-curl-7.21.7-5538904.patch',
                       '0004-curl-7.21.7-d6f319f.patch',
                       '0006-curl-7.21.7-3445fa2.patch',
                       '0007-curl-7.21.7-75ca568.patch',
                       '0008-curl-7.21.7-4851daf.patch',
                       '0009-curl-7.21.7-20cb12d.patch',
                       '0010-curl-7.21.7-a60edcc.patch',
                       '0101-curl-7.21.1-multilib.patch',
                       '0102-curl-7.21.2-debug.patch',
                       '0104-curl-7.19.7-localhost6.patch',
                       '0105-curl-7.21.3-disable-test1112.patch',
                       '0106-curl-7.21.0-libssh2-valgrind.patch',
                       '0107-curl-7.21.4-libidn-valgrind.patch',
                       ]:
            r.addPatch(patch)

    def configure(r):
        r.macros.cppflags += ' $(pkg-config --cflags openssl)'
        r.macros.ldflags += ' $(pkg-config --libs openssl)'

        r.Configure(' --disable-static'
                    ' --enable-hidden-symbols'
                    ' --enable-ipv6 '
                    ' --enable-manual'
                    ' --enable-threaded-resolver '
                    ' --with-openssl=%(prefix)s'
                    ' --without-ssl'
                    ' --with-nss '
                    ' --enable-crypto-auth'
                    ' --enable-ldaps'
                    ' --with-libidn'
                    ' --enable-tls-srp'
                    ' --enable-cookies '
                    ' --with-gssapi=%(prefix)s/kerberos'
                    ' --with-ca-bundle=%(sysconfdir)s/ssl/certs/ca-bundle.crt '
                    )
        r.Replace(('^hardcode_libdir_flag_spec=.*',
                   'hardcode_libdir_flag_spec=""'),
                  ('^runpath_var=LD_RUN_PATH',
                   'runpath_var=DIE_RPATH_DIE'),
                  'libtool')

    def policy(r):
        r.Install('docs/libcurl/libcurl.m4',
                  '%(datadir)s/aclocal/', mode = 0644)

        r.Doc('docs/BUGS', 'docs/CONTRIBUTE', 'docs/FAQ',
              'docs/FEATURES', 'docs/INSTALL', 'docs/INTERNALS',
              'docs/MANUAL', 'docs/RESOURCES',
              'docs/TheArtOfHttpScripting', 'docs/TODO')
        r.ComponentSpec('devel',
            '%(bindir)s/curl-config',
            '%(mandir)s/man1/curl-config.*')

        # # testing
        # if Use.buildtests:
        #     for dir in [ 'libtest', 'server' ]:
        #         r.Make(dir='tests/%s' % dir)
        # r.TestSuiteLinks(fileMap={'src/curl' : '%(bindir)s/curl'})
        # r.TestSuite('tests', 'perl ./runtests.pl')
        r.EnforceConfigLogBuildRequirements(exceptions=['groff:runtime'])


