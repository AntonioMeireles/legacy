# Copyright (c) 2006-2010 Foresight Linux Project
# Copyright (c) 2004-2010 rPath, Inc.
#
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
import datetime
class GroupDesktopPlatform(GroupRecipe):
    name = 'group-desktop-platform'
    version = '2.3.4.99' + '_' + datetime.date.today().strftime("%Y.%m.%d")

    autoResolve = True

    Flags.local_tools = True
    depCheck = True
    # we handle this on the group-{gnome,xfce,dist}-dist stage
    checkPathConflicts = False
    checkOnlyByDefaultDeps = True
    requireLatest = False

    x86_64rplGroupsFlavorString = 'is: x86 x86_64'
    x86_64FlavorString = 'is: x86_64'
    x86FlavorString  = 'is: x86'
    x86rplGroupsFlavorString = x86FlavorString

    rPathVersionStr = None

    supDocComponents = [ 'supdoc', ]
    develComponents  = [ 'build-tree', 'devellib', 'devel']
    docComponents  = [ 'supdoc', 'doc']
    localeComponents  = [ 'locale']

    rplGroups = [ 'group-base',
                  'group-bootable',
                  'group-core',
                  'group-printing',
                  'group-text-tools',
                  'group-devel',
                  'group-os-devel',
                  'group-anaconda-deps'
                  ]

    kdegroups = [
        'group-kde',
    ]

    xfcegroups = [
        'group-xfce',
        'group-xfce-core',
        'group-xfce-devel',
        'group-xfce-apps',
        'group-xfce-extras',
    ]

    bucketDevelGroups = [ 'group-devel',
                          'group-os-devel',
                          'group-gnome-devel',
                          'group-kde-devel',
                          'group-xfce-devel',
                          'group-desktop-common-devel',
                          ]
    bucketExtraDocGroups = [ 'group-extra-docs']

    rplLabel = 'conary.rpath.com@rpl:2-qa'
    rplLabelCompat = 'conary.rpath.com@rpl:1-compat'

    compatLabel = 'foresight.rpath.org@fl:2-compat'
    rplGroupUmbrella = 'group-os=' + rplLabel + '[%s]'

    if Arch.x86_64:
        rplGroupUmbrella = rplGroupUmbrella % x86_64rplGroupsFlavorString
        # we need the one bellow to make sure choices in compat32 are allways
        # in sync with one in x86_64
        rplGroupUmbrellaCompat32 = 'group-os=' + rplLabel + '[%s]'
        rplGroupUmbrellaCompat32 = rplGroupUmbrellaCompat32 % x86rplGroupsFlavorString
    else:
        rplGroupUmbrella = rplGroupUmbrella % x86rplGroupsFlavorString

    def flCreateGroup(r, name, parentGroup=None, depCheck=False,
                      byDefault=True, checkOnlyByDefaultDeps=True,
                      autoResolve = False, dynamicGroup = False, checkPathConflicts=None):
        # creates group named 'name', adds it to the toplevel group,
        # and sets the current group to that name.  calls to r.add()
        # will use the current group by default.

        # note: byDefault applies to whether the group is included by
        # default in its parent group, not whether the troves in
        # the group are added by default. (use the setByDefault() command
        # to get that)

        # get all the the default for the new group from its parent group.
        if parentGroup:
            r.setDefaultGroup(parentGroup)
        r.createGroup(name, autoResolve=autoResolve, depCheck=depCheck,
                      checkOnlyByDefaultDeps=checkOnlyByDefaultDeps, 
                      byDefault=byDefault,  checkPathConflicts=checkPathConflicts)
        if parentGroup:
            r.addNewGroup(name, groupName=parentGroup, byDefault=byDefault)
        r.setDefaultGroup(name)


        if parentGroup and not name in r.bucketExtraDocGroups:
            r.moveComponents(r.supDocComponents, name, 'group-extra-docs')

        if parentGroup and not dynamicGroup:
            if name in r.xfcegroups:
                r.copyComponents(r.develComponents,  name, 'group-xfce-devel')
            elif name in r.kdegroups:
                r.copyComponents(r.develComponents,  name, 'group-kde-devel')
            elif name == 'group-gnome':
               r.copyComponents(r.develComponents,  name, 'group-gnome-devel')

            elif name not in r.bucketDevelGroups and name not in r.bucketExtraDocGroups and name not in ['group-gnome' ] and name not in r.kdegroups and name not in r.xfcegroups:
                r.copyComponents(r.develComponents,  name, 'group-desktop-common-devel')

    def rplAddGroup(r, name, flavor = None):
        if not flavor:
            if Arch.x86_64:
                flavor = r.x86_64rplGroupsFlavorString
            else:
                flavor = r.x86rplGroupsFlavorString

        # copyScripts = True gives interesting errors...
        # has to do with group recursion
        r.addCopy(name, flavor=flavor, searchPath = r.rplGroupUmbrella)

        # below until rpl:2-qa decides to do it too...
        r.moveComponents(r.supDocComponents, name, 'group-rpl-extra-docs')

    def flAddTroves(r, troves, **kwargs):
        for trove in troves:
            r.flAdd(trove, **kwargs)

    def flAdd(r, name, components = None, source=None, versionStr=None, 
              groupName=None, flavor=None, byDefault=True, singleArch=False):

        searchPath = (r.foresightLinuxLabel)

        if not versionStr:
            versionStr = r.foresightLinuxLabel

        if isinstance(name, tuple):
            # This allows us to put troves created with PackageSpec into
            # lists where each trove is added iteratively, and still specify
            # an explicit source.
            name, source = name

        if not versionStr:
            requireLatest = True
        else:
            requireLatest = False

        if not flavor:
            if Arch.x86_64:
                flavor = r.x86_64rplGroupsFlavorString
            else:
                flavor = r.x86rplGroupsFlavorString

        #  first, we add the trove, normally
        r.add(name,
              components = components,
              versionStr = versionStr,
              source=source,
              groupName=groupName,
              flavor=flavor,
              byDefault=byDefault,
              searchPath=searchPath,
              requireLatest = requireLatest
              )

        # second, we check if that trove is already in any of the upstream, pre-built,
        # groups, we use, and - there - we replace it.
        if Arch.x86_64 and not name == 'anaconda' and not singleArch:

            r.replace(name,
                      groupName='group-compat32',
                      allowNoMatch=True,
                      newVersionStr = versionStr,
                      newFlavor = r.x86FlavorString,
                      searchPath=searchPath,
                      )

        if not singleArch:
            for g in r.rplGroups:
                r.replace(name,
                          newVersionStr = versionStr,
                          groupName = g,
                          newFlavor=flavor,
                          searchPath=searchPath,
                          allowNoMatch=True)


    # for replacing stuff also in compat32
    def flReplace(r, name, groupName=None, flavor=None):
        if not flavor:
            if Arch.x86_64:
                flavor = r.x86_64FlavorString
            else:
                flavor = r.x86FlavorString

        r.replace(name, groupName=groupName, newFlavor=flavor)

        if Arch.x86_64:

            r.replace(name,
                      groupName='group-compat32',
                      allowNoMatch=True,
                      newFlavor=r.x86FlavorString)

    def rplAdd(r, name, versionStr=None, groupName=None, components=None, byDefault=True, flavor = None, source = None):

        if not flavor:
            if Arch.x86_64:
                flavor = r.x86_64FlavorString
            else:
                flavor = r.x86FlavorString

        if not versionStr:
            versionStr = r.rplLabel

        searchPath = (r.rplGroupUmbrella)

        if isinstance(name, tuple):
            # This allows us to put troves created with PackageSpec into
            # lists where each trove is added iteratively, and still specify
            # an explicit source.
            name, source = name

        if Arch.x86_64:
            flavor32 = r.x86FlavorString

            r.replace(name,
                      newVersionStr = versionStr,
                      groupName='group-compat32',
                      newFlavor=flavor32,
                      allowNoMatch=True,
                      searchPath=searchPath
                      )

        r.add(name,
              source = source,
              versionStr = versionStr,
              components = components,
              groupName = groupName,
              flavor = flavor,
              byDefault = byDefault,
              searchPath = searchPath
              )

        # in the case when we are not using tip of what is in rpl groups...
        if versionStr:
            for g in r.rplGroups:
                r.replace(name,
                          newVersionStr = versionStr,
                          groupName = g,
                          newFlavor=flavor,
                          allowNoMatch=True,
                          searchPath=searchPath
                          )

    def setup(r):
        r.foresightLinuxLabel = r.macros.buildlabel
        r.foresightLinuxKernelLabel = r.macros.buildlabel + '-kernel'

        r.conaryVersion = r.macros.buildlabel 

        # PreUpdateScript for migrating firefox and alsa needs to
        # be attached to group-core to execute on migrations from
        # fl:1 (since it runs on update, not install, and the
        # group-desktop-common group does not exist on fl:1) and
        # to group-desktop-common to ensure that it executes at
        # the right time on fl:2 alpha updates.  This second
        # link (group-desktop-common) is needed only if group-core
        # has not changed contents, so in a few weeks it can be
        # removed, and can certainly be removed before fl:2 is final.
        r.addPreUpdateScript('fl2-core-pre-update.script',
                             groupName = 'group-core')
        r.addPreUpdateScript('fl2-core-pre-update.script',
                             groupName = 'group-desktop-common')
        # Attempt to work around pam changes.  This should not
        # be needed for final migrations, as pam and authconfig
        # are set up the same on :1 and :2
        r.addPostUpdateScript('fl2-core-post-update.script',
                             groupName = 'group-core')
        # work around flakeyness in nspluginwrapper
        r.addPostUpdateScript('fl2-mozilla-update.script',
                             groupName = 'group-mozilla')
        # work around for lm_sensors update bug
        r.addPostUpdateScript('fl2-gnome-dist-update.script',
                             groupName = 'group-gnome-dist')

        # making sure a user who is trying to install -devel-groups
        # doesn't get them stripped due to the excludeTroves default
        # settings we have in stock non devel installs
        for edition in ['gnome', 'kde', 'xfce']:
            r.addPreUpdateScript('fl2-devel-groups-pre-update.script',
                                 groupName = 'group-' + edition + '-dist-devel')
            r.addPreUpdateScript('fl2-devel-groups-pre-update.script',
                                 groupName = 'group-' + edition + '-devel')


        r.setSearchPath(r.foresightLinuxLabel, r.compatLabel, r.rplGroupUmbrella, r.foresightLinuxKernelLabel, r.rplLabelCompat)

        # Create a out shell group for all the belong to (no parent)
        r.flCreateGroup('group-world')

        r.addNewGroup('group-desktop-platform', groupName='group-world')

        r.flCreateGroup('group-extra-docs', parentGroup='group-desktop-platform', dynamicGroup = True)
        r.flCreateGroup('group-rpl-extra-docs', parentGroup='group-desktop-platform', dynamicGroup = True)

        # stuff we re{use,factor} from upstream (rpl:2-qa)
        r.flCreateGroup('group-rpl-fullpack', parentGroup='group-desktop-platform', dynamicGroup = True)

        for groupName in r.rplGroups:
            r.rplAddGroup(groupName)

        if Arch.x86_64:
            r.rplAddGroup('group-compat32')

        # we don't ship those anymore
        r.remove('perl-libwww-perl', groupName='group-devel')
        r.remove('perl-HTML-Entities', groupName='group-devel')
        # we rely on polkit now
        for i in r.rplGroups:
            r.remove('PolicyKit', groupName=i)

        r.remove('xf86-video-i810:devellib', groupName='group-devel')
        r.remove('xf86-video-via:devellib', groupName='group-devel')
        # deprecated. now in gtk
        r.remove('gail', groupName='group-devel')
        r.remove('gail', groupName='group-anaconda-deps')
        # deprecated. now in mono
        r.remove('monodoc', groupName='group-devel')
        # replaced by ptlib
        r.remove('pwlib', groupName='group-devel')

        # we want more terminfo than rpl:2 ships
        r.rplAdd('ncurses:supterminfo', groupName='group-core')

        # devel groups
        r.flCreateGroup('group-gnome-devel', parentGroup='group-desktop-platform',
                        dynamicGroup = True,
                        depCheck=False, autoResolve = False, checkPathConflicts=True
        )
        r.flCreateGroup('group-desktop-common-devel', parentGroup='group-gnome-devel',
                        dynamicGroup = True)
        r.addNewGroup('group-devel', groupName='group-gnome-devel')
        r.flCreateGroup('group-kde-devel', parentGroup='group-desktop-platform',
                        depCheck=False,  autoResolve = False, checkPathConflicts=True,
                        dynamicGroup = True)
        r.addNewGroup('group-devel', groupName='group-kde-devel')
        r.addNewGroup('group-desktop-common-devel', groupName='group-kde-devel')
        r.flCreateGroup('group-xfce-devel', parentGroup='group-desktop-platform',
                        depCheck=False,  autoResolve = False, checkPathConflicts=True,
                        dynamicGroup = True)
        r.addNewGroup('group-devel', groupName='group-xfce-devel')
        r.addNewGroup('group-desktop-common-devel', groupName='group-xfce-devel')

        # common bits
        r.flCreateGroup('group-desktop-common', parentGroup='group-desktop-platform')
        # bits from rpl that ship by default
        r.flCreateGroup('group-rpl-derived', parentGroup='group-desktop-common', dynamicGroup = True)

        for i in r.rplGroups:
            if i not in [ 'group-devel','group-anaconda-deps', 'group-os-devel' ]:
                r.addNewGroup(i, groupName='group-rpl-derived')

        if Arch.x86_64:
            r.addNewGroup('group-compat32', groupName='group-rpl-derived')

        # the real show beguins here
        r.flCreateGroup('group-desktop-common-extras', parentGroup='group-desktop-platform', dynamicGroup = True)
        # above dynamicGroup = True because we don't want the :devel 's there to go to 'group-desktop-common-devel'

        # kernel
        if Arch.x86:
            kernelFlavor = 'kernel.smp,!kernel.pae is: x86(i486,i586,i686)'
        elif Arch.x86_64:
            kernelFlavor = 'kernel.smp'

        r.replace('kernel', r.foresightLinuxKernelLabel+'/2.6.33.5-4-1', newFlavor = kernelFlavor)

        #
        # stuff specific to foresight and common across all editions
        # will need to be spslit later in three extra sub-groups - -gnome, -kde, -xfce, maybe.
        r.flCreateGroup('group-foresight-basics', parentGroup='group-desktop-common')

        # libs we want in all editions
        #

        ##
        r.rplAdd('libcap', groupName = 'group-foresight-basics')
        r.rplAdd('nfs-utils', groupName = 'group-foresight-basics')
        # FL-2518
        r.rplAdd('cyrus-sasl', groupName = 'group-foresight-basics')
        # to fix stupid group update issues
        r.rplAdd('openssl', groupName = 'group-foresight-basics')
        ## 
        r.flAdd('qt', groupName='group-foresight-basics')

        r.flAdd('qt4', groupName='group-foresight-basics')
        r.flAdd('qt4-core', groupName='group-foresight-basics', source = 'qt4')
        r.flAdd('qt4-gui', groupName='group-foresight-basics', source = 'qt4')
        r.flAdd('qt4-sql', groupName='group-foresight-basics', source = 'qt4')
        r.flAdd('qt4-qt3support', groupName='group-foresight-basics', source = 'qt4')

        r.flAdd('gtk', groupName='group-foresight-basics')

        r.flAdd('gtk-qt-engine', groupName='group-foresight-basics')
        r.flAdd('gtk-qt-engine-kde', groupName='group-foresight-basics', source = 'gtk-qt-engine')

        r.flAdd('pango', groupName='group-foresight-basics')

        # fl specific variations
        r.flAdd('glibc', groupName = 'group-foresight-basics')

        r.flAdd('hwdata', groupName = 'group-foresight-basics')
        r.flAdd('mkinitrd', groupName = 'group-foresight-basics')
        r.flAdd('shadow', groupName = 'group-foresight-basics')
        r.flAdd('sysvinit', groupName = 'group-foresight-basics')
        r.flAdd('initscripts', groupName = 'group-foresight-basics')
        r.flAdd('libpng', groupName='group-foresight-basics')

        r.flAdd('bootman', groupName = 'group-foresight-basics')

        r.flAdd('iw', groupName = 'group-desktop-common')

        r.flAdd('authconfig', groupName='group-foresight-basics')
        r.flAdd('bash', groupName='group-foresight-basics')

        r.flAdd('nasm', groupName='group-foresight-basics')
        r.flAdd('tzdata', groupName='group-foresight-basics')

        r.flAdd('passwd', groupName='group-foresight-basics')
        r.flAdd('pam', groupName='group-foresight-basics')

        # r.flAdd('pam-keyring', groupName='group-foresight-basics')

        r.flAdd('lvm2', groupName='group-foresight-basics')
        r.flAdd('device-mapper', groupName='group-foresight-basics', source ='lvm2')

        r.flAdd('dvd+rw-tools', groupName='group-foresight-basics')
        r.flAdd('cdrkit', groupName='group-foresight-basics', source = 'cdrkit')
        r.flAdd('cdda2wav', groupName='group-foresight-basics', source = 'cdrkit')
        r.flAdd('mkisofs', groupName='group-foresight-basics', source = 'cdrkit')
        # FAKE pkg below. allows a clean migration path. 
        # works like an Obsoletes. 
        r.flAdd('cdrtools', groupName='group-foresight-basics', source = 'cdrkit')


        # we need to explicitly reference rPL's perl
        r.rplAdd('perl', groupName='group-foresight-basics')

        # Simple editor
        r.flAdd('nano', groupName='group-foresight-basics')

        # we need a newer syslinux
        for x in ('extlinux', 'pxelinux', 'syslinux'):
            r.flAdd(x, groupName='group-foresight-basics', source = 'syslinux')

        # we ship util-linux-ng, but keep old naming
        r.flAdd('util-linux', groupName='group-foresight-basics')
        r.flAdd('util-linux-extras', groupName='group-foresight-basics', source = 'util-linux', byDefault = False)
        r.flAdd('setarch', groupName='group-foresight-basics', source = 'util-linux', byDefault = True)
        # util-linux(-ng) expects a recent enough coreutils to behave
        r.flAdd('coreutils', groupName='group-foresight-basics')
        # mktemp now comes from coreutils. we pkgSpec it not to break anything 
        r.flAdd('mktemp', groupName='group-foresight-basics', source = 'coreutils')

        r.flAdd('microcode_ctl', groupName='group-foresight-basics', source = 'coreutils')

        # 3G modem support. 
        r.flAdd('usb_modeswitch', groupName='group-foresight-basics')

        # we should include samba... people do actually share files
        r.rplAdd('samba', groupName='group-foresight-basics')
        r.rplAdd('samba-client', groupName='group-foresight-basics')
        r.rplAdd('samba-server', groupName='group-foresight-basics')

        # our ruby
        r.flAdd('ruby', groupName='group-desktop-common-devel')

        r.flAdd('perl-HTML-Parser', groupName='group-desktop-common-devel')

        r.replace('distro-release', r.foresightLinuxLabel)

        # freedesktop.org xdg stuff
        r.flAdd('xdg-user-dirs', groupName='group-foresight-basics')
        r.flAdd('xdg-user-dirs-gtk', groupName='group-foresight-basics')
        r.flAdd('xdg-utils', groupName='group-foresight-basics')
        r.flAdd('pyxdg', groupName='group-foresight-basics')
        # end of freedesktop.org xdg stuff

        # need for abiword/OOO/koffice
        r.flAdd('libwpd', groupName='group-foresight-basics')

        r.flAdd('ilmbase', groupName='group-foresight-basics')
        r.flAdd('OpenEXR', groupName='group-foresight-basics')

        # nice pretty fonts
        r.flAdd('font-fixed-terminus', groupName='group-foresight-basics')
        r.flAdd('font-fixed-terminus-console', groupName='group-foresight-basics')

        # qt4 bindings for python
        r.flAdd('PyQt4', groupName='group-foresight-basics', byDefault=False)
        r.flAdd('QScintilla2', groupName='group-foresight-basics', byDefault=False)

        # override rPL in order to fetch our metadata package policy hooks
        r.flAdd('conary-policy-foresight', groupName='group-desktop-common-devel')

        # package to override configs for developers
        r.flAdd('foresight-conary-config-devel', groupName='group-desktop-common-devel')
        # Configs to set the installLabelPath for 2-qa and 2-devel users
        r.flAdd('foresight-conary-config-2-qa', groupName='group-desktop-common-devel', byDefault=False)
        r.flAdd('foresight-conary-config-2-devel', groupName='group-desktop-common-devel', byDefault=False)

        # we  need newer versions than the ones in rPL-2
        r.flAdd('pkgconfig', groupName='group-desktop-common-devel')
        r.flAdd('flex', groupName='group-desktop-common-devel')
        r.flAdd('dmraid', groupName='group-desktop-common')
        r.flAdd('autofs', groupName='group-desktop-common')
        r.flAdd('db', groupName='group-desktop-common')
        r.flAdd('userspace-kernel-headers', groupName = 'group-desktop-common-devel')
        r.flAdd('libnl', groupName = 'group-desktop-common-devel')
        r.flAdd('automake', groupName = 'group-desktop-common-devel')
        r.flAdd('autoconf', groupName = 'group-desktop-common-devel')
        r.flAdd('libtool', groupName = 'group-desktop-common-devel')
        r.flAdd('elfutils', groupName = 'group-desktop-common-devel')
        r.flAdd('sqlite', groupName = 'group-desktop-common-devel')

        # patched rPL gcc in order for boost to behave
        r.flAdd('gcc', groupName = 'group-desktop-common-devel')
        r.flAdd('gcc-c++', groupName = 'group-desktop-common-devel')
        r.flAdd('gcc-fortran', groupName = 'group-desktop-common-devel')
        r.flAdd('gcc-java', groupName = 'group-desktop-common-devel')
        r.flAdd('gcc-objc', groupName = 'group-desktop-common-devel')
        r.flAdd('libgcc', groupName = 'group-desktop-common-devel')
        r.flAdd('libstdc++', groupName = 'group-desktop-common-devel')

        # 'fixes' FL-2088 on our side  while CNY-3143 not properly resolved 
        r.flAdd('expat', groupName = 'group-desktop-common-devel')
        
        # a lot of stock userland expect it to handle encrypted media
        r.flAdd('cryptsetup', groupName='group-foresight-basics')

        r.flAdd('python-keyutils', groupName='group-foresight-basics')

        # Firefox with gnome support wants it
        r.flAdd('GConf', groupName='group-foresight-basics')

        # we need this. otherwise no crypted mail in our gfx MUAs
        r.rplAdd('pinentry-gtk-2', groupName='group-foresight-basics')

        # Branding
        r.flAdd('branding', groupName='group-foresight-basics')

        # Generic Xorg configurator
        r.flAdd('xconfigurator', groupName='group-foresight-basics')

        # Generi print config
        r.flAdd('cups', groupName='group-foresight-basics')
        r.flAdd('system-config-printer', groupName='group-foresight-basics')
        r.flAdd('pycups', groupName='group-foresight-basics')
        r.flAdd('pysmbc', groupName='group-foresight-basics')
        r.flAdd('notify-python', groupName='group-foresight-basics')
        r.flAdd('hal-cups-utils', groupName='group-foresight-basics')

        r.flAdd('tmpwatch', groupName='group-foresight-basics')

        # get around the CNY-3238 mess
        # Various deps with byDefault=False
        commonDeps = [
            ('avahi-qt4', 'avahi'),
            'exiv2',
            'libgphoto2',
            'gsm',
            'x264',
            'imlib2',
            'ffmpeg',
            'transcode',
            'libdvdnav',
            'mplayer', #TODO: install by default?
            'gnome-mplayer',
            'mplayer-codecs',
            'qt4',
                ('qt4-core', 'qt4'),
                ('qt4-gui', 'qt4'),
                ('qt4-qt3support', 'qt4'),
                ('qt4-sql', 'qt4'),
            'qca2',
            'qca2-ossl',
            'qimageblitz',
            'poppler-data',
            'poppler',
                ('poppler-glib', 'poppler'),
                ('poppler-qt', 'poppler'),
                ('poppler-qt4', 'poppler'),
            'libpqxx',
            'wv2',
            'libzip',
            'libvncserver',
            'wxGTK',
            'wxPython',
            ('svncpp', 'rapidsvn'),
            'rapidsvn',
            'libical',
            'libopensync',
            'gnokii',
            'chmlib',
            'libetpan',
            'gst-python',
            'cddb-py',
            'mutagen', 'notify-python', 'python-ctypes',
            'commoncpp',
            'libspectre',
            'taglib',
            'taglib-extras',
            'gmm',
            'gtk-chtheme',
            'giver',
            'reportlab',
            'gourmet',
            'gthumb',
            'mysql-embedded',
            'opencv',
            'synapse',
            'GraphicsMagick',
            'llvm',
            'libopenraw',
            ('libopenraw-gnome', 'libopenraw'),
            'gsl',
            'glew',
            'OpenGTL',
            # various libs used (not only) by kde4
            'akonadi',
            'automoc',
            'eigen2',
            'libassuan',
            'raptor',
            'rasqal',
            'redland',
            'soprano',
            'strigi',
            'xz',
            'oxygen-icon-theme',
            'attica',
            'libiodbc',
            'libssh',
            'polkit-qt-1',
            'shared-desktop-ontologies',
            'libindicate-qt',
        ]
        for p in commonDeps:
            # keep it here for now (see CNY-3238 comments)
            # get around the CNY-3238 mess
            r.flAdd(p, groupName='group-foresight-basics', byDefault=False)
            #r.flAdd(p, groupName='group-supported-stuff-extra')


        # extra stuff to anaconda-deps, per elliot request
#        r.flAdd('anaconda', groupName='group-anaconda-deps')
        r.flAdd('booty', groupName='group-anaconda-deps')
        r.rplAdd('busybox', groupName='group-anaconda-deps')
        r.rplAdd('bogl', groupName='group-anaconda-deps')
        r.flAdd('device-mapper', groupName='group-anaconda-deps', source = 'lvm2')
        r.flAdd('dmraid', groupName='group-anaconda-deps')
        r.rplAdd('libdhcp', groupName='group-anaconda-deps')
        r.rplAdd('libdhcp4client', groupName='group-anaconda-deps')
        r.rplAdd('libdhcp6client', groupName='group-anaconda-deps')
        r.flAdd('pykickstart', groupName='group-anaconda-deps')
        r.flAdd('pyblock', groupName='group-anaconda-deps')
        r.flAdd('pyparted', groupName='group-anaconda-deps')
        r.flAdd('pyxf86config', groupName='group-anaconda-deps')
        r.flAdd('vnc', groupName='group-anaconda-deps')
        r.flAdd('font-util', groupName='group-anaconda-deps')
        # end of extra stuff to anaconda-deps

        r.flCreateGroup('group-drivers', parentGroup='group-desktop-common')

        # firmware is a tricky business. (allways use r.add here)
        #
        r.add('userspace-kernel-firmware', source = 'kernel',
              versionStr=r.foresightLinuxKernelLabel, groupName='group-drivers')

        r.add('ipw2200-fw', groupName='group-drivers', components = ['lib'])
        r.add('ipw2100-fw', groupName='group-drivers', components = ['lib'])
        r.add('iwlwifi-3945-ucode', groupName='group-drivers', components = ['lib'])
        r.add('iwlwifi-4965-ucode', groupName='group-drivers', components = ['lib'])
        r.add('iwlwifi-5000-ucode', groupName='group-drivers', components = ['lib'])
        r.add('rt61pci-firmware', groupName='group-drivers', components = ['lib'])
        r.add('rt71pci-firmware', groupName='group-drivers', components = ['lib'])
        r.add('rt2860-firmware', groupName='group-drivers', components = ['lib'])
        r.add('rt2870-firmware', groupName='group-drivers', components = ['lib'])
        r.add('rtl8192se-firmware', groupName='group-drivers', components = ['lib'])

        #
        # end of firmware

        r.flAdd('rtl8192se-kmod', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers')
        r.flAdd('rt2860-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers')
        r.flAdd('rt2870-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers')

        # byDefault = False, as native linux wireless drivers are supposed to work
        # we ship this as a fallback
        r.add('ndiswrapper-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers', byDefault = False)
        r.add('ndiswrapper', groupName='group-drivers', byDefault = False)

        # byDefault = False, as in-kernel broadcom drivers are generally prefered
        # we ship this as a fallback
        r.add('broadcom-wl-kmod', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers', byDefault = False)
        r.add('broadcom-wl', groupName='group-drivers', byDefault = False)

        # those  below are ALLWAYS byDefault=False
        if Arch.x86_64:
            r.add('nvidia', flavor='is: x86 x86_64', groupName='group-drivers', byDefault = False)
            r.add('ati-fglrx', flavor='is: x86 x86_64', groupName='group-drivers', byDefault = False)
        else:
            r.add('nvidia', groupName='group-drivers', byDefault = False)
            r.add('ati-fglrx', groupName='group-drivers', byDefault = False)

        r.add('nvidia-kernel', versionStr =  r.foresightLinuxKernelLabel, groupName='group-drivers', byDefault = False)
        r.add('ati-fglrx-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers', byDefault = False)

        # virtualization...
        r.add('kqemu', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers')
        r.add('kvm-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers')

        #  vbox needs to be bumped
        r.add('virtualbox-kernel', versionStr = r.foresightLinuxKernelLabel, groupName='group-drivers', byDefault = False)
        

        r.add('kvm', groupName='group-drivers')

        #

        #
        # Alsa/pulseaudio/sound bloc
        #

        # Alsa sound system
        # FIXME: research about utility of having alsa-firmware
        r.flAdd('info-audio')
        r.flAdd('alsa-plugins')
        r.flAdd('alsa-lib')
        r.flAdd('alsa-utils')
        r.flAdd('alsa-oss')
        # end of Alsa pack

        # device related info packages
        r.flAdd('info-powerdev', groupName='group-foresight-basics')
        r.flAdd('info-plugdev', groupName='group-foresight-basics')
        r.flAdd('info-netdev', groupName='group-foresight-basics')

        # needed for polkit
        r.flAdd('info-desktop_admin_r', groupName='group-foresight-basics')
        r.flAdd('info-desktop_user_r', groupName='group-foresight-basics')

        # pulseaudio & associates {info-pulse,info-pulse-access,info-pulse-rt,libatomic_ops}
        r.flAdd('info-pulse', groupName='group-foresight-basics')
        r.flAdd('info-pulse-rt', groupName='group-foresight-basics')
        # r.flAdd('info-rtkit', groupName='group-foresight-basics')
        r.flAdd('info-pulse-access', groupName='group-foresight-basics')
        r.flAdd('libatomic_ops', groupName='group-foresight-basics')

        r.flAdd('pulseaudio', groupName='group-foresight-basics')
        # r.flAdd('rtkit', groupName='group-foresight-basics')
        r.flAdd('esound', groupName='group-foresight-basics')

        r.flAdd('paprefs', groupName='group-foresight-basics')
        r.flAdd('pavucontrol', groupName='group-foresight-basics')
        r.flAdd('pavumeter', groupName='group-foresight-basics')
        r.flAdd('padevchooser', groupName='group-foresight-basics')

        r.flAdd('libao-pulse', groupName='group-foresight-basics')

        r.flAdd('libsamplerate', groupName='group-foresight-basics')
        r.flAdd('libsndfile',  groupName='group-foresight-basics')
        r.flAdd('jack', groupName='group-foresight-basics')
        r.flAdd('portaudio', groupName='group-foresight-basics')

        # end off pulseaudio & associates

        r.flAdd('gstreamer', groupName='group-foresight-basics')
        r.flAdd('SDL', groupName='group-foresight-basics')
        r.flAdd('SDL_mixer', groupName='group-foresight-basics')

        # FIXME: check if the one bellow is still needed
        r.flAdd('alsa-lib', groupName='group-anaconda-deps')

        #
        # end of Alsa/pulseaudio/sound bloc
        #

        # free multimedia codecs/libraries
        r.flAdd('aalib', groupName='group-foresight-basics')
        r.flAdd('celt', groupName='group-foresight-basics')
        r.flAdd('libao', groupName='group-foresight-basics')
        r.flAdd('libcaca', groupName='group-foresight-basics')
        r.flAdd('libogg', groupName='group-foresight-basics')
        r.flAdd('libshout', groupName='group-foresight-basics')
        r.flAdd('libtheora', groupName='group-foresight-basics')
        r.flAdd('libvorbis', groupName='group-foresight-basics')
        r.flAdd('schroedinger', groupName='group-foresight-basics')
        r.flAdd('speex', groupName='group-foresight-basics')
        r.flAdd('vorbis-tools', groupName='group-foresight-basics')

        # other free media codecs
        r.flAdd('fribidi', groupName='group-foresight-basics')

        # gst-plugins-base demands it
        r.flAdd('cdparanoia', groupName='group-foresight-basics')


        # wanted/expected for gdm Xsession plumbing
        r.rplAdd('xterm', groupName='group-foresight-basics')

        r.rplAdd('info-wheel', groupName='group-foresight-basics')
        r.flReplace('sudo')
        r.flReplace('setup')

        r.flAdd('info-kvm', groupName='group-foresight-basics')
        r.flAdd('info-bitlbee', groupName='group-foresight-basics')

        r.flAdd('info-polkituser', groupName='group-foresight-basics')
        r.flAdd('ConsoleKit', groupName='group-foresight-basics')
        r.flAdd('udev', groupName='group-foresight-basics')
        r.flAdd('acl', groupName='group-foresight-basics')
        r.flAdd('usbutils', groupName='group-foresight-basics')
        r.flAdd('dbus', groupName='group-foresight-basics')
        r.flAdd('dbus-glib', groupName='group-foresight-basics')
        r.flAdd('dbus-x11', groupName='group-foresight-basics', source='dbus')
        r.flAdd('dbus-sharp', groupName='group-foresight-basics')
        r.flAdd('ndesk-dbus', groupName='group-foresight-basics')
        r.flAdd('ndesk-dbus-glib', groupName='group-foresight-basics')
        r.flAdd('hal', groupName='group-foresight-basics')
        r.flAdd('hal-info', groupName='group-foresight-basics')
        r.flAdd('smbios', groupName='group-foresight-basics')
        r.flAdd('polkit', groupName='group-foresight-basics')
###        r.flAdd('PackageKit', groupName='group-foresight-basics')
        r.flAdd('openvpn', groupName='group-foresight-basics')
        r.flAdd('vpnc', groupName='group-foresight-basics')
        r.flAdd('pptpclient', groupName='group-foresight-basics')
        r.flAdd('laptop-detect', groupName='group-foresight-basics')
        # This contains service ordering information, useful for all foresight editions
        r.flAdd('foresight-services', groupName='group-foresight-basics')

        # needed for thunbails, etc
        r.flAdd('ImageMagick', groupName='group-foresight-basics')

        #  bluetooth pack
        r.flAdd('bluez-firmware', groupName='group-foresight-basics')
        r.flAdd('bluez-hcidump', groupName='group-foresight-basics')
        r.flAdd('bluez', groupName='group-foresight-basics')
        r.flAdd('obexd', groupName='group-foresight-basics')
        r.flAdd('libbtctl', groupName='group-foresight-basics')
        r.flAdd('openobex', groupName='group-foresight-basics')
        r.flAdd('obex-data-server', groupName='group-foresight-basics')
        # end of bluetooth pack

        r.rplAdd('info-bin', groupName='group-foresight-basics')

        r.rplAdd('info-nobody', groupName='group-foresight-basics')
        r.rplAdd('mailx', groupName='group-foresight-basics')

        r.flAdd('nss', groupName='group-foresight-basics')
        r.flAdd('nspr', groupName='group-foresight-basics')

        r.flAdd('mono', groupName='group-foresight-basics')

        r.flAdd('kerneloops', groupName='group-foresight-basics')

        # we want our craptastic interactive=True configs to be easily
        # overridable by folks building on top of us :)
        r.add('foresight-conary-config')

        r.flAdd('dbus-python', groupName='group-foresight-basics')
        r.flAdd('perl-Net-DBus', groupName='group-foresight-basics')

        r.flAdd('flac', groupName='group-foresight-basics')

        #Placeholder trove that anaconda looks for in setting the default runlevel
        r.add('xorg-x11', 'foresight.rpath.org@fl:1', groupName='group-foresight-basics')

        r.flAdd('nas', groupName='group-foresight-basics')
        r.flAdd('unixODBC', groupName='group-foresight-basics')
        r.flAdd('doxygen', groupName='group-foresight-basics')
        r.flAdd('doxywizard', groupName='group-foresight-basics', source = 'doxygen', byDefault=False)
        r.rplAdd('unzip', groupName='group-foresight-basics')
        r.flAdd('libdvdcss', groupName='group-foresight-basics')

        # oot points that a vnc client is a good thing to ship stock...
        r.flAdd('vinagre', groupName='group-foresight-basics')

        # rpl's one is too old
        r.flAdd('python-sqlite', groupName='group-foresight-basics')

        r.flCreateGroup('group-internet', parentGroup='group-desktop-common')

        # r.flAdd('gizmo', groupName='group-internet',  flavor='is: x86', singleArch=True, byDefault=False)
        r.flAdd('skype', groupName='group-internet',  flavor='is: x86', singleArch=True, byDefault=False)
        r.flAdd('transmission', groupName='group-internet')

        r.flCreateGroup('group-mozilla', parentGroup='group-desktop-common')
        r.flAdd('flashplayer', groupName='group-mozilla')
        r.flAdd('moonlight', groupName='group-mozilla')
        r.flAdd('moonshine', groupName='group-mozilla')
        r.flAdd('firefox', groupName='group-mozilla')
        r.flAdd('firefox-package-search', groupName='group-mozilla')   
        r.flAdd('firefox-rpathwiki-search', groupName='group-mozilla')   

        r.flAdd('google-earth', groupName='group-mozilla', byDefault=False, flavor='is: x86', singleArch=True)

        # r.flAdd('libflashsupport', groupName='group-mozilla')
        if Arch.x86_64:
        #    r.flAdd('libflashsupport', flavor='is: x86', groupName='group-mozilla',
        #            singleArch=True, components = ['lib'])
            r.flAdd('nspluginwrapper', groupName='group-mozilla', singleArch=True)
            
        r.flAdd('nss', groupName='group-internet')
        r.flAdd('nspr', groupName='group-internet')
        r.flAdd('thunderbird', groupName='group-mozilla', byDefault=False)
        r.flAdd('xulrunner', groupName='group-internet')
        r.flAdd('libpurple', groupName='group-internet', source='pidgin')

        # moovida media pack
        r.flCreateGroup('group-moovida-media', parentGroup='group-desktop-platform')
        r.flAdd('moovida', groupName='group-moovida-media')
        r.flAdd('moovida-plugins-bad', groupName='group-moovida-media')
        r.flAdd('moovida-plugins-good', groupName='group-moovida-media')
        r.flAdd('moovida-plugins-ugly', groupName='group-moovida-media')
        r.flAdd('pigment', groupName='group-moovida-media')
        r.flAdd('pigment-python', groupName='group-moovida-media')
        r.flAdd('twill', groupName='group-moovida-media')
        r.flAdd('python-twisted', groupName='group-moovida-media')
        r.flAdd('python-zopeinterface', groupName='group-moovida-media')
        r.flAdd('pyOpenSSL', groupName='group-moovida-media')
        r.flAdd('python-cssutils', groupName='group-moovida-media')
        r.flAdd('coherence', groupName='group-moovida-media')
        r.flAdd('python-hashlib', groupName='group-moovida-media')

        # pidgin pack
        r.flCreateGroup('group-pidgin', parentGroup='group-desktop-platform')
        r.flAdd('pidgin', groupName='group-pidgin')
        r.flAdd('pidgin-plugin_pack', groupName='group-pidgin')
        r.flAdd('pidgin-encryption', groupName='group-pidgin')
        r.flAdd('pidgin-libnotify', groupName='group-pidgin')
        r.flAdd('pidgin-webkit', groupName='group-pidgin')
        r.flAdd('libotr', groupName='group-pidgin')
        r.flAdd('pidgin-otr', groupName='group-pidgin')
        # end of pidgin pack

        # telepathy goodness
        r.flCreateGroup('group-telepathy', parentGroup='group-desktop-platform', byDefault=False)
        r.flAdd('telepathy-mission-control', groupName='group-telepathy')
        # bindings
        r.flAdd('telepathy-glib', groupName='group-telepathy')
        r.flAdd('telepathy-sharp', groupName='group-telepathy')
        r.flAdd('telepathy-python', groupName='group-telepathy')
        # connection managers
        r.flAdd('telepathy-gabble', groupName='group-telepathy')
        r.flAdd('telepathy-idle', groupName='group-telepathy')
        r.flAdd('telepathy-salut', groupName='group-telepathy')
        r.flAdd('telepathy-butterfly', groupName='group-telepathy')
        # IM
        r.flAdd('empathy', groupName='group-telepathy')
        # farsight framework
        r.flAdd('telepathy-farsight', groupName='group-telepathy')
        r.flAdd('farsight2', groupName='group-telepathy')
        r.flAdd('papyon', groupName='group-telepathy')
        # end of telepathy goodness

        # fuse
        r.flAdd('fuse',  groupName='group-desktop-common')

        # cpuspeed
        r.flAdd('cpuspeed', groupName='group-desktop-common')

        # ntfs-3g
        r.flAdd('ntfs-3g', groupName='group-desktop-common')

        # monitoring tools
        r.flAdd('conky', groupName='group-desktop-common-extras')
        r.flAdd('htop', groupName='group-desktop-common-extras')

        # graphics
        r.flAdd('gimp', groupName='group-desktop-common')
        r.flAdd('gutenprint', groupName='group-desktop-common-extras')
        r.flAdd('inkscape', groupName='group-desktop-common-extras')
        r.flAdd('vsdviewer', groupName='group-desktop-common-extras')
        r.flAdd('libwmf', groupName='group-desktop-common-extras') # dep for gimp
        r.flAdd('libexif', groupName='group-desktop-common') # dep for gimp and f-spot
        r.rplAdd('libjpeg',  groupName='group-desktop-common')

        r.flAdd('unrar', groupName='group-desktop-common')
        r.flAdd('p7zip', groupName='group-desktop-common')

        # burning libs
        r.flAdd('libisofs', groupName='group-desktop-common') # dep for xfburn and brasero
        r.flAdd('libburn', groupName='group-desktop-common') # dep for xfburn and brasero

        r.flAdd('sun-jre', groupName='group-desktop-common', source='sun-jdk')
        r.flAdd('sun-java-webplugin', groupName='group-desktop-common', source='sun-jdk')
        r.flAdd('sun-jdk', groupName='group-desktop-common-devel', source='sun-jdk')

        r.flCreateGroup('group-gnome-extras', parentGroup='group-desktop-platform', depCheck=False)

        r.flCreateGroup('group-gnome', parentGroup='group-desktop-platform', depCheck=False)
        r.flCreateGroup('group-kde', parentGroup='group-desktop-platform', depCheck=False)


        # stock indicator stuff
        for i in [ 'libindicate',
                   'libindicator',
                   'indicator-applet',
                   ('libdbusmenu', 'libdbusmenu'),
                   ('libdbusmenu-glib','libdbusmenu'),
                   ('libdbusmenu-gtk','libdbusmenu'),
                   'indicator-messages',
                   'indicator-applet',
                   'indicate-python',
                   ]:
            r.flAdd(i, groupName='group-foresight-basics')
        r.flAdd(('libdbusmenu-gtk', 'libdbusmenu'),groupName = 'group-gnome')
        r.flAdd('gdm-user-switch-applet', groupName='group-foresight-basics', source = 'gdm')
        # XXX MarkT research plz why libdbusmenu doesn't provide/build it anymore
        # r.flAdd(('libdbusmenu-qt', 'libdbusmenu'), groupName = 'group-kde')

        # default gnome .wav
        r.flAdd('gnome-audio', groupName='group-gnome')

        r.flAdd('usermode', groupName='group-foresight-basics')
        r.flAdd(('usermode-gtk', 'usermode'), groupName='group-gnome')

        r.flAdd('libgksu', groupName='group-gnome')
        r.flAdd('gksu', groupName='group-gnome')

        r.flAdd('polkit-gnome', groupName='group-gnome')
###        r.flAdd('gnome-packagekit', groupName='group-gnome')

        r.flAdd('gnome-bluetooth', groupName='group-gnome')
        
        r.flAdd('graphviz-gnome', groupName='group-gnome', source='graphviz')

        r.flAdd('gnome-do', groupName='group-gnome')
        r.flAdd('do-plugins', groupName='group-gnome')

        #
        # codecs we don't ship by default
        # XXX FIXME
        # we _should_ ship this as byDefault=False _but_ given the nature of CNY-3238 and the fact 
        # that it seems that due to it this group is messing with a clean upgrade(all) path in 2-qa 
        # the 'reasonable' thing to do now (in order for things to move forward) is to just ship it 
        # byDefault=True
        # XXX FIXME
        r.flCreateGroup('group-codecs', parentGroup='group-desktop-common', byDefault=True, depCheck=False)
        # r.flCreateGroup('group-codecs', parentGroup='group-desktop-platform', byDefault=False, depCheck=False)
        r.flAdd('gst-plugins-ugly', groupName='group-codecs')
        r.flAdd('gst-plugins-ffmpeg', groupName='group-codecs')
        r.flAdd('ffmpeg', groupName='group-codecs')
        r.flAdd('libquicktime', groupName='group-codecs')

        #deps for gst-plugins-ugly
        r.flAdd('mpeg2dec', groupName='group-codecs')
        r.flAdd('a52dec', groupName='group-codecs')
        r.flAdd('djbfft', groupName='group-codecs')
        r.flAdd('libdc1394', groupName='group-codecs')
        r.flAdd('libdvdread', groupName='group-codecs')
        r.flAdd('gst-plugins-bad', groupName='group-codecs')
        #deps for gst-plugins-bad
        r.flAdd('libmms', groupName='group-codecs')
        r.flAdd('mjpegtools', groupName='group-codecs')
        r.flAdd('faac', groupName='group-codecs')
        r.flAdd('faad2', groupName='group-codecs')
        r.flAdd('lame', groupName='group-codecs')
        r.flAdd('libid3tag', groupName='group-codecs')
        r.flAdd('libmpcdec', groupName='group-codecs')
        r.flAdd('libmad', groupName='group-codecs')
        r.flAdd('xvidcore', groupName='group-codecs')

        r.flAdd('gecko-mediaplayer', groupName='group-codecs')

        #deps for mplayer not included above
        r.flAdd('libdv', groupName='group-codecs')

        #dep for amarok
        r.flAdd('xine-lib', groupName='group-codecs')

        r.flAdd('libsexy', groupName='group-gnome')

        r.flAdd('libgalago', groupName='group-gnome')
        r.flAdd('galago-sharp', groupName='group-gnome')
        r.flAdd('gtk-sharp', groupName='group-gnome')
        r.flAdd('gnome-sharp', groupName='group-gnome')
        r.flAdd('gnome-desktop-sharp', groupName='group-gnome')
        r.flAdd('gecko-sharp', groupName='group-gnome')
        r.flAdd('tomboy', groupName='group-gnome')
        r.flAdd('nautilus-open-terminal', groupName='group-gnome')
        r.flAdd('nautilus-sendto', groupName='group-gnome')

        r.flAdd('liferea', groupName='group-gnome')
        r.flAdd('filezilla', groupName='group-gnome-extras')
        r.flAdd('pan', groupName='group-gnome-extras')
###        r.flAdd('xchat-gnome', groupName='group-gnome')

        # evolution et al.
        r.flAdd('evolution', groupName='group-gnome')
        r.flAdd('evolution-indicator', groupName='group-gnome')
        r.flAdd('evolution-data-server', groupName='group-gnome')
        r.flAdd('evolution-exchange', groupName='group-gnome')
        r.flAdd('evolution-webcal', groupName='group-gnome')
        r.flAdd('gnome-pilot', groupName='group-gnome')
        r.flAdd('pilot-link', groupName='group-gnome')
        r.flAdd('gnome-spell', groupName='group-gnome')

        # some basic productivity tools
        r.flAdd('dia', groupName='group-gnome')
        r.flAdd('inkscape', groupName='group-gnome')

        ## NetworkManager
        r.flAdd('NetworkManager', groupName='group-desktop-common')
        r.flAdd('ModemManager', groupName='group-desktop-common')
        r.flAdd('mobile-broadband-provider-info', groupName='group-desktop-common')
        r.flAdd('wpa_supplicant', groupName='group-desktop-common')
        r.flAdd('wireless-tools', groupName='group-desktop-common')
        r.flAdd('network-manager-applet', groupName='group-gnome')
        r.flAdd('network-manager-applet', groupName='group-kde') # There's no KDE/QT UI for the version we ship
        r.flAdd('NetworkManager-OpenVPN', groupName='group-desktop-common')
        r.flAdd('NetworkManager-vpnc', groupName='group-desktop-common')
        r.flAdd('NetworkManager-pptp', groupName='group-desktop-common')
        r.flAdd('libvirt', groupName='group-desktop-common')
        r.flAdd('libvirt-client', groupName='group-desktop-common')
        r.flAdd('dnsmasq', groupName='group-desktop-common')

        r.rplAdd('dhclient', source='dhcp', groupName='group-desktop-common')
        r.rplAdd('libdhcp4client', source='dhcp', groupName='group-desktop-common')
        r.rplAdd('libdhcp6client', source='dhcp', groupName='group-desktop-common')

        ## theming / goodlooking stuff
        r.flAdd('gtk-theme-foresight', groupName='group-desktop-common')
        r.flAdd('human-cursors-theme', groupName='group-desktop-common')
        r.flAdd('tango-icon-theme', groupName='group-desktop-common')
        r.flAdd('tango-icon-theme-extras', groupName='group-desktop-common')

        r.flAdd('sound-theme-freedesktop', groupName='group-desktop-common')

        # this way groups will behave (!)
        r.flAdd('plymouth', groupName='group-desktop-common')

        # we will have to keep ours, turned bogus ones to avoid CNY-3000
        # otherwise on update rPL ones will be picked (if we drop 
        # from groups and / or  redirect to NIL ...)
        r.flAdd('splashy', groupName='group-desktop-common')
        r.flAdd('splashy-theme', groupName='group-desktop-common')

        ## inotify bits
        r.flAdd('libnotify', groupName='group-desktop-common')

        ## 3d desktop stuff
        # compiz is now in all editions, as it has now kde support

        r.flAdd('compiz', groupName='group-desktop-common')

        r.flAdd('compiz-gnome', groupName='group-gnome', source='compiz')

        r.flAdd('bcop', groupName='group-desktop-common')
        r.flAdd('compizconfig', groupName='group-desktop-common')
        r.flAdd('simple-ccsm', groupName='group-desktop-common')
        r.flAdd('libcompizconfig', groupName='group-desktop-common')
        r.flAdd('compizconfig-python', groupName='group-desktop-common')
        r.flAdd('compizconfig-backend-gconf', groupName='group-desktop-common')
        r.flAdd('compiz-fusion-plugins-main', groupName='group-desktop-common')
        r.flAdd('compiz-fusion-plugins-extra', groupName='group-desktop-common')
        r.flAdd('compiz-fusion-plugins-unsupported', groupName='group-desktop-common')
        r.flAdd('emerald', groupName='group-gnome')
        r.flAdd('emerald-themes', groupName='group-gnome')

        # FIXME hack alert
        # conary isn't dealing specially well with stuff that was byDefault=False in a group
        # and got installed, before being droppped from that group (even if it is available
        # in the wider groups. to get around update issues, placing awn* here
        r.flAdd('avant-window-navigator', groupName='group-desktop-common', byDefault = False)
        r.flAdd('awn-extras', groupName='group-desktop-common', byDefault = False)

        ## theme engines
        r.flAdd('gtk-engine-murrine', groupName='group-gnome-extras')
        r.flAdd('gtk-nodoka-engine', groupName='group-gnome-extras')
        r.flAdd('gtk-engine-ubuntulooks', groupName='group-gnome-extras')
        r.flAdd('theme-engine-sun-nimbus', groupName='group-gnome-extras')
        r.flAdd('gtk-aurora-engine', groupName='group-gnome-extras')
        r.flAdd('gtk-equinox-engine', groupName='group-gnome-extras')
        r.flAdd('gnome-themes-extras', groupName='group-gnome-extras')

        ## graphics tools
        r.flAdd('f-spot', groupName='group-gnome')

        r.flAdd('graphviz', groupName='group-desktop-common-devel')
        r.flAdd('graphviz-mono', groupName='group-desktop-common-devel', source='graphviz')
        r.flAdd('graphviz-ruby', groupName='group-desktop-common-devel', source='graphviz')
        #r.flAdd('graphviz-java', groupName='group-desktop-common-devel', source='graphviz')
        #r.flAdd('graphviz-guile', groupName='group-desktop-common-devel', source='graphviz')
        r.flAdd('graphviz-perl', groupName='group-desktop-common-devel', source='graphviz')
        r.flAdd('graphviz-tcl', groupName='group-desktop-common-devel', source='graphviz')

        # foresight build related stuff
        r.flAdd('foresight-recipes', groupName='group-desktop-common-devel')

        ## brasero bits
        r.flAdd('brasero', groupName='group-gnome')

        #
        # foresight gnome stack
        #
        # the bits below are automatically generated from  gnome f.d.o jhbuild xml files
        # [http://ftp.gnome.org/pub/GNOME/teams/releng/...]
        # plz do not remove  them, or alter order if you don't know what you are doing ;)
        #
        # FIXME: I need to script  a smart way of parse what is strict userland and what is
        # strict group-devel-gnome stuff

        # FIXME: make tests to check/handle handle pkgs listed below when they are pkgSpeced


        #  MISSING   'libcolorblind', 'opencdk', - xchat

        #  gnome external modules (xulrunner is in group-internet). the others for now remain here

        # avahi, hal  and dbus are PkgSpeced
        # r.flAdd('hal-gnome', groupName='group-gnome')
        r.flAdd('dbus-x11', groupName='group-gnome', source='dbus')
        r.rplAdd('info-avahi', groupName='group-gnome')
        r.flAdd('avahi-glib', groupName='group-gnome', source='avahi')
        r.flAdd('avahi-sharp', groupName='group-gnome', source='avahi')
        r.flAdd('libcanberra', groupName='group-gnome')

        #  meta-gnome-core
        for g in [
            'gnome-desktop',
            'gnome-panel',
            'gnome-panel-layout',
            'gnome-session',
            'gnome-terminal',
            'gnome-applets',
            'libical',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-nautilus
        for g in [
            'nautilus',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-devel-tools
        for g in [
            'glade',
            'gconf-editor',
            'devhelp',
            ]:
            r.flAdd(g, groupName='group-gnome-devel')

        #  meta-gnome-python
        for g in [
            'pygtk',
            'gnome-python',
            'gnome-python-desktop',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-c++
        for g in [
            'gtkmm',
            'libgnomeuimm',
            'gnome-vfsmm',
            'gtksourceviewmm',
            'libxml++',
            ]:
            r.flAdd(g, groupName='group-gnome-devel')

        #  meta-gnome-accessibility
        for g in [
            'dasher',
            'gnome-mag',
            'gok',
            'gnome-speech',
            'orca',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-devel-platform-upcoming-deprecations
        for g in [
            'ORBit2',
            'audiofile',
            'esound',
            'libIDL',
            'libart_lgpl',
            'libbonobo',
            'libbonoboui',
            'libgnome',
                ('libgnome-background', 'libgnome'),
            'libgnomecanvas',
            'libgnomeui',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-devel-platform
        for g in [
            'GConf',
            'at-spi',
            'atk',
            'glib',
            'gnome-mime-data',
            'gnome-vfs',
            'gvfs',
            # 'gnome-disk-utility',
            'gnome-mount',
            'gtk',
            'gtk-doc',
            'intltool',
            'libglade',
            'libxml2',
            'libxslt',
            'pango',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-desktop-upcoming-deprecations
        for g in [
            'libgnomeprint',
            'libgnomeprintui',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-desktop-suite
        for g in [
            'alacarte',
            'bug-buddy',
            'gnome-control-center',
            'mousetweaks',
            'gnome-settings-daemon',
            'deskbar-applet',
            'ekiga',
            'eog',
            'evince',
            'pdfmod',
            'evolution-data-server',
            'evolution',
            'evolution-exchange',
            'evolution-webcal',
            'file-roller',
            'gcalctool',
            'gdm',
            'gedit',
            'gnome-backgrounds',
            'gnome-doc-utils',
            'gnome-games',
            'gnome-icon-theme',
            'gnome-keyring',
            'gnome-netstatus',
            'gnome-nettool',
            'gnome-media',
            'gnome-menus',
            'gnome-main-menu',
            'libslab',
            'gnome-shutdown',
            'gnome-power-manager',
            'gnome-screensaver',
            'gnome-system-monitor',
            'gnome-system-tools',
            'gnome-themes',
            'gnome-user-docs',
            'gnome-utils',
            #'gnome-volume-manager', #DEPRECATED  in 2.26
            'gstreamer',
            'gst-plugins-base',
            'gst-plugins-good',
            'gtk-engines',
            'gtkhtml',
            'gtksourceview',
            'gucharmap',
            'libgnomekbd',
            'libgtop',
            'liboobs',
            'librsvg',
            'libsoup',
            'libproxy',
            'libwnck',
            'metacity',
            'seahorse',
            'seahorse-plugins',
            'tomboy',
            'totem',
            'vino',
            'vte',
            'yelp',
            'zenity',
            'hamster-applet',
            ('poppler', 'poppler'),
            ('poppler-glib', 'poppler'),
            ]:
            r.flAdd(g, groupName='group-gnome')

        r.flAdd('sound-juicer', groupName='group-gnome', byDefault=False)

        #  meta-gnome-bindings-c++
        for g in [
            'glibmm',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-bindings-c++
        for g in [
            'libglademm',
            'gconfmm',
            'libgnomecanvasmm',
            'libgnomemm',
            ]:
            r.flAdd(g, groupName='group-gnome-extras')

        #  meta-gnome-bindings-python
        for g in [
            'pygobject',
            'pyorbit',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #  meta-gnome-admin
        for g in [
            'pessulus',
            'sabayon',
            ]:
            r.flAdd(g, groupName='group-gnome-extras')

        #  meta-gnome-proposed
        for g in [
            'pygtksourceview',
            ]:
            r.flAdd(g, groupName='group-gnome')

        # upstream gnome required dependencies
        for g in [
            'rarian',
            'libxklavier',
#            'libcolorblind',
            'system-tools-backends',
#            'opencdk',
            'icon-naming-utils',
            ('libXft', 'xorg-libs'),
            #'camorama',
            'cheese',
            'enchant',
            'libdaemon',
            'fontconfig',
            'hicolor-icon-theme',
            'dbus',
            'cairomm',
            'avahi',
            'hal',
            'libgcrypt',
            'gnome-vfs-monikers',
            'libcroco',
            'liboil',
            'guile',
            'libgsf',
            'autogen',
            'opal',
            'cairo',
            'libgpg-error',
            'dbus-glib',
            'iso-codes',
            'startup-notification',
            'libtasn1',
            'xdg-user-dirs',
            'gob2',
            'libmusicbrainz',
            'pycairo',
            'libsigc++',
            'libgnomecups',
            'gamin',
            'shared-mime-info',
            'libnotify',
            'notify-osd',
            ]:
            r.flAdd(g, groupName='group-gnome')

        #r.flAdd('gnome-cups-manager', groupName='group-gnome')
        r.flAdd('foresight-user-guide', groupName='group-gnome')
        r.flAdd('gnutls', groupName='group-gnome')
        r.rplAdd('lzo', groupName='group-gnome')

        # FIXME
        # we will want in the future to extend the tag handlers 
        # to call desktop-file-install   --vendor=foresight ...
        r.flAdd('desktop-file-utils', groupName='group-foresight-basics')

        #
        # end of 'default' f.d.o gnome stuff.
        #

        #
        # 'closures' section
        #

        r.flAdd('gnome-python-extras', groupName='group-desktop-common-devel')
        r.flAdd('libgda', groupName='group-desktop-common-devel')
        # nautilus wants it
        r.flAdd('exempi', groupName='group-gnome')

        # needed for evince
        r.flAdd('djvulibre', groupName='group-gnome')

        # complement for gedit
        r.flAdd('gedit-plugins', groupName='group-gnome')

        # complement for gnome-games
        r.flAdd('gnome-games-extra-data', groupName='group-gnome')

        # needed by cairo
        r.flAdd('glitz', groupName='group-gnome')

        # needed by gimp and f-spot
        r.flAdd('libgtkhtml', groupName='group-gnome')

        # needed at least by pygtk
        r.flAdd('python-numeric', groupName='group-gnome')

        # needed at least by eog
        r.flAdd('lcms', groupName='group-gnome')

        # needed at least by tomboy
        r.flAdd('gmime', groupName='group-gnome')
        r.flAdd('gtkspell', groupName='group-gnome')

        # needed for hal
        r.flAdd('smbios', groupName='group-gnome')
        r.flAdd('hal-info', groupName='group-gnome')
        r.flAdd('ConsoleKit', groupName='group-gnome')

#        r.flAdd('DeviceKit', groupName='group-foresight-basics')
        r.flAdd('DeviceKit-power', groupName='group-foresight-basics')
#        r.flAdd('DeviceKit-disks', groupName='group-foresight-basics')
        r.flAdd('parted', groupName='group-foresight-basics')
        r.flAdd('libatasmart', groupName='group-foresight-basics')
        r.flAdd('eggdbus', groupName='group-foresight-basics')

        # media tools
        r.flAdd('banshee', groupName='group-gnome')
        r.flAdd('hal-sharp', groupName='group-gnome') # dep for banshee
        r.flAdd('ipod-sharp', groupName='group-gnome') # dep for banshee
        r.flAdd('podsleuth', groupName='group-gnome') # dep for banshee
        r.flAdd('mono-zeroconf', groupName='group-gnome') # dep for banshee
        r.flAdd('libgphoto2-sharp', groupName='group-gnome') # needed by banshee for mtp support
        r.flAdd('libgphoto2', groupName='group-gnome') # needed by f-spot

        # needed at least by yelp and nautilus
        r.flAdd('beagle', groupName='group-gnome')
        r.rplAdd('info-beagleindex', groupName='group-gnome')

        r.flAdd('gtksourceview-sharp', groupName='group-gnome-devel') #dep for monodevelop
        r.flAdd('libgdiplus', groupName='group-gnome-devel') #dep for monodevelop
        r.flAdd('mono-addins', groupName='group-gnome-devel') #dep for monodevelop
        r.flAdd('mono-tools', groupName='group-gnome-devel')
        r.flAdd('monodevelop', groupName='group-gnome-devel')
        r.flAdd('meld', groupName='group-gnome-devel')
        r.flAdd('rarian', groupName='group-gnome-devel')
        r.flAdd('gnome-build', groupName='group-gnome-devel')
        r.flAdd('valgrind', groupName='group-gnome-devel')
        r.flAdd('anjuta', groupName='group-gnome-devel')
        r.flAdd('stetic', groupName='group-gnome-devel')
        r.flAdd('PyYAML', groupName='group-gnome-devel')
        r.flAdd('gnome-common', groupName='group-gnome-devel')

        # translation stuff
        r.flAdd('poedit', groupName='group-gnome-devel')

        # needed at least by evolution
        r.flAdd('gal', groupName='group-gnome')


        # needed at least by beagle
        r.flAdd('evolution-sharp', groupName='group-gnome')
        r.flAdd('gsf-sharp', groupName='group-gnome')

        # needed by pwlib at least
        r.flAdd('libavc1394', groupName='group-gnome')
        r.flAdd('libdv', groupName='group-gnome')
        r.flAdd('libraw1394', groupName='group-gnome')

        # needed at least by gst-plugins-good
        r.flAdd('speex', groupName='group-gnome')

        # needed at least by gnome-compiz-manager
        r.flAdd('gob2', groupName='group-gnome')

        #
        r.flAdd('freetype', groupName='group-gnome')

        # needed  by bug-buddy
        r.flAdd('libelf', groupName='group-gnome')

        # get group-gnome-devel usefull by default...
        #
        r.flAdd('gmime', groupName='group-gnome-devel')
        r.flAdd('gnome-common', groupName='group-gnome-devel')
        r.flAdd('gnome-doc-utils', groupName='group-gnome-devel')
        r.flAdd('gtk-doc', groupName='group-gnome-devel')
        r.flAdd('gtkspell', groupName='group-gnome-devel')

        # end of group-gnome
        #

        #
        # xfce block
        #

        # Create group-xfce, which all other xfce groups become children of
        r.flCreateGroup('group-xfce', parentGroup='group-desktop-platform', depCheck=False)
        r.flCreateGroup('group-xfce-core', parentGroup='group-xfce', depCheck=False)
        xfce = [
            'gtk-xfce-engine',
            'libexo',
            'libxfce4menu',
            'libxfce4util',
            'libxfcegui4',
            'mousepad',
            'orage',
            'xarchiver',
            'Thunar',
            'thunar-volman',
            'xfce4-appfinder',
            'xfce4-icon-theme',
            'xfce4-mixer',
            'xfce4-panel',
            'xfce4-places-plugin',
            'xfce4-session',
            'notify-osd',
            'xfconf',
            'xfce4-settings',
            'xfce-terminal',
            'xfce-utils',
            'xfdesktop',
            'xfwm4',
            'xfwm4-themes',
#            'xfce4-indicator-plugin',
            'xscreensaver' ]

        for p in xfce:
            r.flAdd(p, groupName='group-xfce-core')

        # these aren't xfce packages, but are needed
        gnomepackages = [
            'gamin',
            'gtk-engines',
            'gdm',
            'gnome-session',
            'libgnome-background',
            'gnome-settings-daemon', # needed by gdm
            'hicolor-icon-theme',
###            'gnome-packagekit',
            'polkit-gnome',
            'network-manager-applet',
            'shared-mime-info',
            'indicator-messages',
            'indicate-python',
        ]

        for p in gnomepackages:
            r.flAdd(p, groupName='group-xfce')

        # satisfy dependencies
        for p in [
            # seahorse deps
            'libgnomeui',
            'libgnome',
            # abiword deps
            'enchant',
            'gucharmap',
            'libgnomeprint', # hopefully removed with abiword 2.8
            'libgnomeprintui', # hopefully removed with abiword 2.8
            'psiconv',
            'libwmf',
            'wv',
            # misc
            'libcddb',
            'libcdio',
            'libsexy',
            'librsvg', # cheese, abiword, gdm, ...
            'glitz',
            'gst-plugins-base', # exaile, totem, parole
            'gst-plugins-good',
            # gdm 
            'iso-codes',
            'at-spi',
            'gnome-icon-theme',
            ]:
            r.flAdd(p, groupName='group-xfce')

        r.flCreateGroup('group-xfce-apps', parentGroup='group-xfce', depCheck=False)
        # some other applications we want, might go in different groups later.
        for p in [
            'bogofilter',
            'claws-mail',
            'claws-mail-extra-plugins', 'libarchive',
            'ekiga',
            'evince',
            'goffice',
            'gnumeric',
            'abiword',
            'abiword-plugins',
            'abiword-docs',
            'abiword-extras',
            'seahorse',
            'seahorse-plugins',
            'gigolo', 'gvfs', 'gnome-mount', # 'gnome-disk-utility',
            'xfce4-power-manager',
            ]:
            r.flAdd(p, groupName='group-xfce-apps')

        # multimedia applications for xfce edition.
        for p in [
            'pulseaudio-xfce',
            'exaile',
            'ristretto',
            'cheese',
            'parole',
            'xfburn',
            ]:
            r.flAdd(p, groupName='group-xfce-apps')
        # end of group-xfce-apps

        for p in [
            'geany',
            'geany-plugins',
            'glade',
            'xfce4-dev-tools',
            ]:
            r.flAdd(p, groupName='group-xfce-devel')

        r.flCreateGroup('group-xfce-extras', parentGroup='group-xfce', depCheck=False)
        # packages not installed by default
        for p in [
            # goodies
            'xfce4-cddrive-plugin',
            'xfce4-cellmodem-plugin',
            'xfce4-cpugraph-plugin',
            'xfce4-dict',
            'xfce4-fsguard-plugin',
            'xfce4-genmon-plugin',
            'xfce4-modemlights-plugin',
            'xfce4-notes-plugin',
            'xfce4-quicklauncher-plugin',
            'xfce4-radio-plugin',
            'xfce4-screenshooter-plugin',
            'xfce4-sensors-plugin',
            'xfce4-smartbookmark-plugin',
            'xfce4-taskmanager',
            'xfce4-systemload-plugin',
            'xfce4-volstatus-icon',
            'xfce4-wavelan-plugin',
            'xfce4-weather-plugin',
            'xfce4-xfapplet-plugin',
            'xfce4-xkb-plugin',
            'xfswitch-plugin',
            'xfprint',
            # 3rd party apps
            'tracker',
            ]:
            r.flAdd(p, groupName='group-xfce-extras')

        # end of xfce block

        #
        # kde block
        #

        def kdeAdd(r, troves, source=None, groupName=None, byDefault=True):
            if groupName is None:
                groupName = 'group-kde'
            r.flAddTroves(troves, groupName=groupName, byDefault=byDefault)


        # kde core libs and apps
        kdeAdd(r, [
            'kdelibs',
            'kdepimlibs',
            'kdebase-runtime',
            'kdebase-workspace',
            'kdeplasma-addons',
            ]
        )

        # kde extras
        kdeAdd(r, [
            'amarok',
            'gtk-qt-engine-kde',
            'kile',
            'kphotoalbum',
            'ktorrent',
            'quassel',
            ]
        )

        kdeAdd(r, [
            'karbon',
            'kplato',
            'krita',
            'kpresenter',
            'kspread',
            'kword',
            'koffice-common',
            ], source='koffice'
        )

        kdeAdd(r, [
            'dolphin',
            'kappfinder',
            'kdepasswd',
            'kdeplasma',
            'kdialog',
            'keditbookmarks',
            'kfind',
            'kinfocenter',
            'konqueror',
            'konsole',
            'kwrite',
            ], source='kdebase'
        )

        kdeAdd(r, [
            'smokegen',
            'kimono',
            'korundum',
            'kross-python',
            'kross-ruby',
            'pykde',
            'qtruby',
            'qyoto',
            'smoke-qt',
            'smoke-kde',
            ], source='kdebindings'
        )

        kdeAdd(r, [
            'kmag',
            'kmousetool',
            'kmouth',
            'kdeaccessibility-color-schemes',
            'kdeaccessibility-icon-themes',
            ], source='kdeaccessibility'
        )

        kdeAdd(r, [
            'kuser',
            'kcron',
            'knetworkconf',
            'ksystemlog',
            'system-config-printer-kde',
            ], source='kdeadmin'
        )

        kdeAdd(r, [
            'kdeartwork-emoticons',
            'kdeartwork-desktopthemes',
            'kdeartwork-icon-themes',
            'kdeartwork-color-schemes',
            'kscreensaver-extra',
            'kdeartwork-sounds',
            'kdeartwork-styles',
            'kdeartwork-wallpapers',
            ], source='kdeartwork'
        )

        kdeAdd(r, [
            'blinken',
            'cantor',
            'kalgebra',
            'kalzium',
            'kanagram',
            'kbruch',
            'kgeography',
            'khangman',
            'kig',
            'kiten',
            'klettres',
            'kmplot',
            'kstars',
            'ktouch',
            'kturtle',
            'kwordquiz',
            'libkdeedu',
            'marble',
            'parley',
            'rocs',
            'step',
            ], source='kdeedu'
        )

        kdeAdd(r, [
            'bomber',
            'bovo',
            'granatier',
            'kapman',
            'katomic',
            'kbattleship',
            'kblackbox',
            'kblocks',
            'kbounce',
            'kbreakout',
            'kdiamond',
            'kfourinline',
            'kgoldrunner',
            'kigo',
            'killbots',
            'kiriki',
            'kjumpingcube',
            'klines',
            'kmahjongg',
            'kmines',
            'knetwalk',
            'kolf',
            'kollision',
            'konquest',
            'kpat',
            'kreversi',
            'ksame',
            'kshisen',
            'ksirk',
            'kspaceduel',
            'ksquares',
            'ksudoku',
            'ktron',
            'ktuberling',
            'kubrick',
            'libkdegames',
            'libkmahjongg',
            'lskat',
            'palapeli',
            ], source='kdegames'
        )

        kdeAdd(r, [
            'gwenview',
            'kamera',
            'kcolorchooser',
            'kgamma',
            'kolourpaint',
            'kruler',
            'ksaneplugin',
            'ksnapshot',
            'okular',
            'kdegraphics-svgpart',
            'kdegraphics-thumbnailers',
            'libkdcraw',
            'libkexiv2',
            'libkipi',
            'libksane',
            'strigi-analyzer-graphics',
            ], source='kdegraphics'
        )

        kdeAdd(r, [
            'dragonplayer',
            'juk',
            'kio-plugins-multimedia',
            'kmix',
            'kscd',
            'libkcddb',
            'libkcompactdisc',
            'mplayerthumbs',
            ], source='kdemultimedia'
        )

        kdeAdd(r, [
            'kdnssd',
            'kget',
            'kopete',
            'kppp',
            'krdc',
            'krfb',
            'kdenetwork-filesharing',
            ], source='kdenetwork'
        )

        kdeAdd(r, [
            'akonadiconsole',
            'akregator',
            'blogilo',
            'kabcclient',
            'kaddressbook',
            'kalarm',
            'kdepim-runtime',
            'kjots',
            'kleopatra',
            'kmail',
            'kmail-plugins-pim',
            'knode',
            'knotes',
            'konsolekalendar',
            'kontact',
            'korganizer',
            'kresources',
            'ktimetracker',
            'libkdepim',
            'libkleo',
            'libkpgp',
            'libksieve',
            'strigi-analyzer-pim',
            ], source='kdepim'
        )

        kdeAdd(r, [
            'cervisia',
            'kaddressbook-plugin-kdeaccounts',
            'kapptemplate',
            'kate',
            'kbugbuster',
            'kcachegrind',
            'kdesdk-scripts',
            'kio-plugins-sdk',
            'kmtrace',
            'kompare',
            'kpartloader',
            'kprofilemethod',
            'kstartperf',
            'kuiviewer',
            'strigi-analyzer-sdk',
            'umbrello',
            ], source='kdesdk', groupName='group-kde-devel'
        )

        kdeAdd(r, [
            'amor',
            'kteatime',
            'ktux',
            'kweather',
            ], source='kdetoys'
        )

        kdeAdd(r, [
            'ark',
            'kcalc',
            'kcharselect',
            'kdelirc',
            'kdf',
            'kfloppy',
            'kgpg',
            'ktimer',
            'kwallet',
            'okteta',
            'printer-applet-kde',
            'superkaramba',
            'sweeper',
            ], source='kdeutils'
        )

        kdeAdd(r, [
            'kfilereplace',
            'kimagemapeditor',
            'klinkstatus',
            'kommander',
            ], source='kdewebdev'
        )

        # try to fix isos/migrate
        kdeAdd(r, [
            'akonadi',
            'chmlib',
            'dbus',
            'exiv2',
            'ffmpeg',
            'fontconfig',
            'glib',
            'gnokii',
            'libgpg-error',
            'libgphoto2',
            'libical',
            'libspectre',
            'libvncserver',
            'libxml2',
            'libxslt',
            'libzip',
            'poppler',
            ('poppler-glib', 'poppler'),
            ('poppler-qt4', 'poppler'),
            'PyQt4',
            'qca2',
            'qca2-ossl',
            'qimageblitz',
            'QScintilla2',
            'soprano',
            'strigi',
            'taglib',
            'x264',
            ],
        )

        # end of kde block

        r.flAdd('guile', groupName = 'group-devel')
        r.flAdd('asciidoc', groupName = 'group-devel')
        r.flAdd('quilt', groupName = 'group-devel')
        r.rplAdd('xorg-cf-files', groupName = 'group-devel')

        # docbook stuff. we want more recent stuff than rPL's
        r.flAdd('docbook-dtds', groupName = 'group-devel')
        r.flAdd('docbook-xsl', groupName = 'group-devel')

        # FIXME: should _not_ be needed (but otherwise breaks groups)
        # to be fixed properly later
        if Arch.x86_64:
            for p in [ 'openslp', 'lzo',
                       'perl', 'giflib',
                       'openssl',
                       ]:
                r.add( p + ':lib', groupName='group-compat32',
                       flavor = r.x86FlavorString,
                       searchPath = r.rplGroupUmbrellaCompat32)
            for p in [ 'Mesa', 'libXxf86vm', 'libexif', 'audit', 
                       'libgphoto2' ,'libXtst', 'postgresql', 'libogg',
                       'parted' , 'xcb-util',
                       ]:
                r.add( p + ':lib', groupName='group-compat32',
                       flavor = r.x86FlavorString,
                       searchPath = r.foresightLinuxLabel)


        # rPath core toolset
        r.flAdd('conary', versionStr=r.conaryVersion, groupName='group-desktop-common')
        r.flAdd('conary-repository', versionStr=r.conaryVersion, groupName='group-desktop-common-devel', source = 'conary')
        r.flAdd('conary-build', versionStr=r.conaryVersion, groupName='group-desktop-common-devel', source = 'conary')
        r.flAdd('conary-policy', groupName='group-desktop-common-devel')
        for rbuild in ['decorator','rpath-common','rpath-xmllib','rpath-product-definition', 'rbuild', 'rbuilder-client']:
            r.flAdd(rbuild, groupName='group-desktop-common-devel')
        r.flAdd('rmake', groupName='group-devel')
        r.flAdd('rmake-proxy', groupName='group-devel', byDefault=False, source = 'rmake')
        r.flAdd('rmake-repos', groupName='group-devel', byDefault=False, source = 'rmake')


        # the ones below should (had) be(en) in group-devel from rpl...
        # More group-devel stuff that we need for anaconda
        r.flAdd('elementtree', groupName='group-desktop-common-devel')
        r.flAdd('neon', groupName='group-desktop-common-devel')
        r.rplAdd('gd', groupName='group-desktop-common-devel')
        r.rplAdd('htmlview', groupName='group-desktop-common-devel')
        r.flAdd('kid', groupName='group-desktop-common-devel')

        # more group-devel stuff
        r.remove('python:test', groupName='group-world')
        
        r.flAdd('bzr', groupName='group-desktop-common-devel')
        r.flAdd('bzrtools', groupName='group-desktop-common-devel')
        r.flAdd('ConfigObj', groupName='group-desktop-common-devel')
        r.flAdd('scons', groupName='group-desktop-common-devel')
        # ermo: presumably, people who install a -devel system will want contexts by default?!
        r.flAdd('foresight-contexts', groupName='group-desktop-common-devel')

        #
        # our own xorg stack

        r.flCreateGroup('group-xorg', parentGroup='group-desktop-common', depCheck=False)

        r.flAdd('xorg-server', groupName='group-xorg')
        r.flAdd('system-config-keyboard', groupName='group-xorg')
        r.flAdd('font-util', groupName='group-xorg')

        ## packages built by xorg-utils

        utils = [ 'gccmakedep',
                  'imake',
                  'xorg-cf-files',
                  'lndir',
                  'makedepend',
                  ]

        for p in utils:
            r.flAdd(p, source='xorg-utils', groupName='group-desktop-common-devel')

        ## end of packages built by xorg-utils

        r.flAdd('xtrans', groupName='group-desktop-common-devel')

        ## packages built by xorg-proto
        proto  = [ 'util-macros',
                   # 'applewmproto',
                   'bigreqsproto',
                   'compositeproto',
                   'damageproto',
                   'dmxproto',
                   'dri2proto',
                   'evieext',
                   'fixesproto',
                   'fontcacheproto',
                   'fontsproto',
                   'glproto',
                   'inputproto',
                   'kbproto',
                   'libpthread-stubs',
                   'printproto',
                   'randrproto',
                   'recordproto',
                   'renderproto',
                   'resourceproto',
                   'scrnsaverproto',
                   'trapproto',
                   'videoproto',
                   'vncproto',
                   # 'windowswmproto',
                   'xcb-proto',
                   'xcliplistproto',
                   'xcmiscproto',
                   'xextproto',
                   'xf86bigfontproto',
                   'xf86dgaproto',
                   'xf86driproto',
                   'xf86miscproto',
                   'xf86rushproto',
                   'xf86vidmodeproto',
                   'xineramaproto',
                   'xproto',
                   ]
        for p in proto:
            r.flAdd(p, source='xorg-proto', groupName='group-desktop-common-devel')

        ## end of list of packages built by xorg-proto

        r.flAdd('xcursor-themes', groupName='group-xorg', source='xorg-apps')
        r.flAdd('xkeyboard-config', groupName='group-xorg')
        r.flAdd('xorg-sgml-doctools', groupName='group-desktop-common-devel')

        ## packages built by xorg-libs

        libs = [ 'libdmx',
            'libFS',
            'liblbxutil',
            'liboldX',
            'libpciaccess',
            'libvnc',
            # 'libWindowsWM',
            'libXaw',
            'libXcliplist',
            'libXcomposite',
            'libXcursor',
            'libXdamage',
            'libXevie',
            'libXfont',
            'libXfontcache',
            'libXft',
            'libXinerama',
            'libxkbui',
            'libXprintAppUtil',
            'libXrandr',
            'libXres',
            'libXScrnSaver',
            'libXTrap',
            'libXtst',
            'libXvMC',
            'libXxf86dga',
            'libXxf86misc',
            'libXxf86vm',
            'xbitmaps',
            'xcb-util', ]

        for p in libs:
            r.flAdd(p, source='xorg-libs', groupName='group-xorg')


        ## end of packages built by xorg-libs

        r.flAdd('pixman', groupName='group-xorg')
        r.flAdd('libfontenc', groupName='group-xorg')
        r.flAdd('libICE', groupName='group-xorg')
        r.flAdd('libSM', groupName='group-xorg')
        r.flAdd('libX11', groupName='group-xorg')
        r.flAdd('libXau', groupName='group-xorg')
        r.flAdd('libxcb', groupName='group-xorg')
        r.flAdd('libXdmcp', groupName='group-xorg')
        r.flAdd('libXext', groupName='group-xorg')
        r.flAdd('libXfixes', groupName='group-xorg')
        r.flAdd('libxkbfile', groupName='group-xorg')
        r.flAdd('libXmu', groupName='group-xorg')
        r.flAdd('libXp', groupName='group-xorg')
        r.flAdd('libXi', groupName='group-xorg')
        r.flAdd('libXpm', groupName='group-xorg')
        r.flAdd('libXprintUtil', groupName='group-xorg')
        r.flAdd('libXrender', groupName='group-xorg')
        r.flAdd('libXt', groupName='group-xorg')
        r.flAdd('libXv', groupName='group-xorg')
        r.flAdd('Mesa', groupName='group-xorg')
        r.flAdd('MesaGLw', groupName='group-xorg', byDefault = False)

        # tricky. we need to explicitly install Mesa:lib{x86}
        if Arch.x86_64:
                r.flAdd('Mesa:lib', flavor='is: x86', groupName='group-xorg')

        r.flAdd('glx-utils', source='Mesa', groupName='group-xorg')
        r.flAdd('libdrm', groupName='group-xorg')
        r.flAdd('pm-utils', groupName='group-xorg')
        r.flAdd('radeontool', groupName='group-xorg')
        r.flAdd('vbetool', groupName='group-xorg')
        r.flAdd('libx86', groupName='group-xorg')

        ## packages built by xorg-apps

        apps = [ 'appres',
                 'bdftopcf',
                 'beforelight',
                 'bitmap',
                 'editres',
                 'fonttosfnt',
                 'fslsfonts',
                 'fstobdf',
                 'iceauth',
                 'ico',
                 'lbxproxy',
                 'listres',
                 'luit',
                 'mkcomposecache',
                 'mkfontdir',
                 'mkfontscale',
                 'oclock',
                 'proxymngr',
                 'rendercheck',
                 'rgb',
                 'rstart',
                 'scripts',
                 'sessreg',
                 'setxkbmap',
                 'showfont',
                 'smproxy',
                 'twm',
                 'viewres',
                 'x11perf',
                 'xauth',
                 'xbacklight',
                 'xbiff',
                 'xcalc',
                 'xclipboard',
                 'xclock',
                 'xcmsdb',
                 'xcompmgr',
                 'xconsole',
                 'xcursorgen',
                 'xcursor-themes',
                 'xdbedizzy',
                 'xditview',
                 'xdm',
                 'xdpyinfo',
                 'xedit',
                 'xev',
                 'xeyes',
                 'xf86dga',
                 'xfd',
                 'xfindproxy',
                 'xfontsel',
                 'xfs',
                 'xfsinfo',
                 'xfwp',
                 'xgamma',
                 'xgc',
                 'xhost',
                 'xinit',
                 'xinput',
                 'xkbcomp',
                 'xkbevd',
                 'xkbprint',
                 'xkbutils',
                 'xkill',
                 'xload',
                 'xlogo',
                 'xlsatoms',
                 'xlsclients',
                 'xlsfonts',
                 'xmag',
                 'xman',
                 'xmessage',
                 'xmh',
                 'xmodmap',
                 'xmore',
                 'xplsprinters',
                 'xpr',
                 'xprehashprinterlist',
                 'xprop',
                 'xrandr',
                 'xrdb',
                 'xrefresh',
                 'xrestop',
                 'xrx',
                 'xset',
                 'xsetmode',
                 'xsetpointer',
                 'xsetroot',
                 'xsm',
                 'xstdcmap',
                 'xtrap',
                 'xvidtune',
                 'xvinfo',
                 'xwd',
                 'xwininfo',
                 'xwud',
                 ]

        for p in apps:
            r.flAdd(p, source='xorg-apps', groupName='group-xorg')

        ## end of packages built by xorg-apps

        r.flCreateGroup('group-xorg-fonts', parentGroup='group-xorg', depCheck=False)
        ## packages built by xorg fonts
        fonts = [  'encodings',
                   'font-adobe-100dpi',
                   'font-adobe-75dpi',
                   'font-adobe-utopia-100dpi',
                   'font-adobe-utopia-75dpi',
                   'font-adobe-utopia-type1',
                   'font-alias',
                   'font-arabic-misc',
                   'font-bh-100dpi',
                   'font-bh-75dpi',
                   'font-bh-lucidatypewriter-100dpi',
                   'font-bh-lucidatypewriter-75dpi',
                   'font-bh-ttf',
                   'font-bh-type1',
                   'font-bitstream-100dpi',
                   'font-bitstream-75dpi',
                   'font-bitstream-speedo',
                   'font-bitstream-type1',
                   'font-cronyx-cyrillic',
                   'font-cursor-misc',
                   'font-daewoo-misc',
                   'font-dec-misc',
                   'font-ibm-type1',
                   'font-isas-misc',
                   'font-jis-misc',
                   'font-micro-misc',
                   'font-misc-cyrillic',
                   'font-misc-ethiopic',
                   'font-misc-meltho',
                   'font-misc-misc',
                   'font-mutt-misc',
                   'font-schumacher-misc',
                   'font-screen-cyrillic',
                   'font-sony-misc',
                   'font-sun-misc',
                   'font-winitzki-cyrillic',
                   'font-xfree86-type1',
                   ]

        for p in fonts:
            r.flAdd(p, source='xorg-fonts', groupName='group-xorg-fonts')

        ## end of packages built by xorg-fonts

        # extra fonts we ship
        r.flAdd('urw-fonts', groupName='group-xorg-fonts')
        r.flAdd('liberation-fonts-ttf', groupName='group-xorg-fonts')
        r.flAdd('msttcorefonts', groupName='group-xorg-fonts')
        r.rplAdd('bitstream-vera-fonts', groupName='group-xorg-fonts')

        r.flAdd('charis-fonts', groupName='group-xorg-fonts')
        r.flAdd('gentium-fonts', groupName='group-xorg-fonts')

        r.flAdd('dejavu-fonts-ttf', groupName='group-xorg-fonts')

        r.flCreateGroup('group-xorg-fonts-extra', parentGroup='group-xorg', depCheck=False, byDefault=False)
        r.flAdd('sazanami-font', groupName='group-xorg-fonts-extra')
        r.flAdd('wqy-zenhei', groupName='group-xorg-fonts-extra') # Chinese font
        r.flAdd('jd')

        r.flCreateGroup('group-xorg-drivers', parentGroup='group-xorg', depCheck=False)

        ## packages built by xorg-drivers-input
        inputDrivers = [ 'xf86-input-acecad',
                         'xf86-input-aiptek',
                         'xf86-input-elographics',
                         'xf86-input-evdev',
                         'xf86-input-fpit',
                         'xf86-input-hyperpen',
                         'xf86-input-jamstudio',
                         'xf86-input-joystick',
                         'xf86-input-keyboard',
                         'xf86-input-mouse',
                         'xf86-input-mutouch',
                         'xf86-input-penmount',
                         'xf86-input-synaptics',
                         'xf86-input-vmmouse',
                         'xf86-input-void',
                         'xf86-input-wacom', 
            ]

        for p in inputDrivers:
            r.flAdd(p, source='xorg-driver-input', groupName='group-xorg-drivers')
        ## end of packages built by xorg-drivers-input

        ## packages built by xorg-drivers-video

        videoDrivers = [ 'xf86-video-apm',
                         'xf86-video-ark',
                         'xf86-video-ast',
                         'xf86-video-ati',
                         'xf86-video-chips',
                         'xf86-video-cirrus',
                         'xf86-video-dummy',
                         'xf86-video-fbdev',
                         'xf86-video-glint',
                         'xf86-video-i128',
                         'xf86-video-i740',
                         'xf86-video-intel',
                         'xf86-video-mach64',
                         'xf86-video-mga',
                         'xf86-video-neomagic',
                         'xf86-video-newport',
                         'xf86-video-nv',
                         'xf86-video-r128',
                         'xf86-video-rendition',
                         'xf86-video-s3',
                         'xf86-video-s3virge',
                         'xf86-video-savage',
                         'xf86-video-siliconmotion',
                         'xf86-video-sis',
                         'xf86-video-sisusb',
                         'xf86-video-tdfx',
                         'xf86-video-tga',
                         'xf86-video-trident',
                         'xf86-video-tseng',
                         'xf86-video-v4l',
                         'xf86-video-vesa',
                         'xf86-video-vmware',
                         'xf86-video-voodoo',
                         # 
                         'xf86-video-radeonhd',
                         'xf86-video-unichrome',
                         'xf86-video-nouveau',
                         'xf86-video-ivtv',
                         'xf86-video-intel-legacy',
                         ]

        for p in videoDrivers:
            r.flAdd(p, source='xorg-driver-video', groupName='group-xorg-drivers')

        #Cheap hack for now to get around CNY-3000
        r.flAdd('xf86-video-i810', source='xorg-driver-video', groupName='group-xorg-drivers')

        ## end of packages built by xorg-drivers-video

        #
        #   end of our xorg stack
        #

        r.flAdd('cmake', groupName='group-desktop-common-devel')
        # Deps for cmake
        r.flAdd('xmlrpc-c', groupName='group-desktop-common-devel')

        # remainings
        # FL-2551
        r.flCreateGroup('group-tryton', parentGroup='group-desktop-platform', dynamicGroup = False)
        for p in [ 'trytond_party_siret',
                   'trytond_product_cost_fifo',
                   'trytond_sale_price_list',
                   'trytond_analytic_account',
                   'trytond_account_invoice',
                   'tryton',
                   'trytond_analytic_sale',
                   'trytond_sale',
                   ('trytond', 'trytond'),
                   ('trytond-backend-mysql', 'trytond'),
                   ('trytond-backend-sqlite', 'trytond'),
                   ('trytond-backend-postgresql', 'trytond'),
                   'trytond_project_plan',
                   'trytond_account_statement',
                   'trytond_stock_forecast',
                   'trytond_account_invoice_line_standalone',
                   'trytond_company',
                   'trytond_timesheet',
                   'trytond_account_product',
                   'trytond_currency',
                   'trytond_purchase_invoice_line_standalone',
                   'trytond_project_revenue',
                   'trytond_purchase',
                   'trytond_product_cost_history',
                   'trytond_project',
                   'trytond_google_translate',
                   'trytond_dashboard',
                   'trytond_calendar_classification',
                   'trytond_product_price_list',
                   'trytond_party_vcarddav',
                   'trytond_stock_product_location',
                   'trytond_stock_location_sequence',
                   'trytond_calendar_scheduling',
                   'trytond_company_work_time',
                   'trytond_account',
                   'trytond_product',
                   'trytond_stock_inventory_location',
                   'trytond_stock_supply',
                   'trytond_stock_supply_day',
                   'trytond_calendar_todo',
                   'trytond_analytic_invoice',
                   'trytond_country',
                   'trytond_account_invoice_history',
                   'trytond_calendar',
                   'trytond_party',
                   'trytond_ldap_authentication',
                   'trytond_google_maps',
                   'trytond_stock',
                   'trytond_analytic_purchase',
                   'trytond_ldap_connection']:
             r.flAdd(p, groupName='group-tryton')

        r.flCreateGroup('group-supported-stuff-extra', parentGroup='group-desktop-platform', dynamicGroup = False)
        # here goes everything that isn't fit for any other group but _is_ in our labels

        # get around the CNY-3238 mess
        # ## Various deps that would be  byDefault=False
        commonDeps = [
            ('avahi-qt4', 'avahi'),
            ('avahi-tools', 'avahi'),
            'exiv2',
            'libgphoto2',
            'gsm',
            'x264',
            'imlib2',
            'ffmpeg',
            'transcode',
            'libdvdnav',
            'mplayer', #TODO: install by default?
            'gnome-mplayer',
            'mplayer-codecs',
            'qt4',
                ('qt4-core', 'qt4'),
                ('qt4-gui', 'qt4'),
                ('qt4-qt3support', 'qt4'),
                ('qt4-sql', 'qt4'),
            'qca2',
            'qca2-ossl',
            'qimageblitz',
            'poppler-data',
            'poppler',
                ('poppler-glib', 'poppler'),
                ('poppler-qt', 'poppler'),
                ('poppler-qt4', 'poppler'),
            'libpqxx',
            'wv2',
            'libzip',
            'libvncserver',
            'wxGTK',
            'wxPython',
            ('svncpp', 'rapidsvn'),
            'rapidsvn',
            'libical',
            'libopensync',
            'gnokii',
            'chmlib',
            'libetpan',
            'gst-python',
            'cddb-py',
            'mutagen', 'notify-python', 'python-ctypes',
            'PokerTH',
            'commoncpp',
            'libspectre',
            'taglib',
            'taglib-extras',
            'gmm',
            'gtk-chtheme',
            'giver',
            'reportlab',
            'gourmet',
            'gthumb',
            'mysql-embedded',
            'opencv',
            'synapse',
            'GraphicsMagick',
            'llvm',
            'libopenraw',
            ('libopenraw-gnome', 'libopenraw'),
            'gsl',
            'glew',
            'OpenGTL',
            # various libs used (not only) by kde4
            'akonadi',
            'automoc',
            'eigen2',
            'libassuan',
            'raptor',
            'rasqal',
            'redland',
            'soprano',
            'strigi',
            'xz',
            'oxygen-icon-theme',
            'polkit-qt',
        ]
        for p in commonDeps:
            # get around the CNY-3238 mess
            # r.flAdd(p, groupName='group-foresight-basics', byDefault=False)
            r.flAdd(p, groupName='group-supported-stuff-extra')

        for p in [
           'vnc',
            # java reqs
            'ant',
            'xalan-j',
            'xerces-j',
            'Sablot',
            'agg',
            'openmotif',
            # mono bindings...
            'evolution-sharp',
            'galago-sharp',
            'gecko-sharp',
            # 'gnome-desktop-sharp',
            'gnome-keyring-sharp',
            'gnome-sharp',
            'gsf-sharp',
            'gtk-sharp',
            'gtksourceview-sharp',
            'gtkspell-sharp',
            'hal-sharp',
            'ipod-sharp',
            'libgphoto2-sharp',
            'notify-sharp',
            'taglib-sharp',
            'libgpod',
            'eyeD3',
            'papi',
            #
            'iasl',
            'wv',
            'libmtp',
            'fontforge',
            'freeglut',
            'gtk-vnc',
            'vinagre',
            'lirc',
            'libirman',
            'goocanvas',
            'libgmail',
            'pygoocanvas',
            'python-dateutil',
            'vobject',
            'docutils',
            'perl-Locale-gettext',
            'vala',
            'openbox',
            'obconf',
            'obmenu',
            'gajim',
            'billreminder',
            'gtk-recordmydesktop',
            'Cheetah',
            'powertop',
            'libmad',
            'psiconv',
            'Pyrex',
            'pwcrypt',
            'gnome-specimen',
            'cabextract',
            'dynamite',
            'orange',
            'libsynce',
            'unshield',
            'avidemux',
            'ipython',
            'rhythmbox',
            'loudmouth',
            'opera',
            'audacity',
            'tasque',
            'thoggen',
            'wireshark',
            'tsclient',
            'gtkglext',
            'lyx',
            'glipper',
            'nautilus-actions',
            'twitux',
            'mzscheme',
            'eclipse-sdk',
            'rdesktop',
#            'tightvnc',
            'gnome-rdp',
            'tsclient',
            # sword + frontends
            'sword',
            'xiphos',
            #
            'firestarter',
            'id3lib',
            'likewise-open',
            'libgssglue',
            'easytag',
            'python-alsaaudio',
            'weechat',
            'bsddb3',
            'Miro',
            'net6',
            'obby',
            'gobby',
            'sobby',
            'sexy-python',
            'glabels',
            'irssi',
            'dvgrab',
            'kino',
            'libiec61883',
            'libquicktime',
            'alltray',
            'easytag',
            'foobillard',
            'dia',
            'planner',
            'ufraw',
            'mozilla-filesystem',
            'desktop-data-model',
            'hippo-canvas',
            'xulrunner-1.8-compat',
            'gtksourceview-1.0-compat',
            'babl',
            'sane-backends',
            'gegl',
            'gnome-scan',
            'monsoon',
            'monotorrent',
            'mono-nat',
            'cairo-dock',
            ('cairo-dock-plugins', 'cairo-dock-plugins'),
            ('cairo-dock-plug-ins-xfce', 'cairo-dock-plugins'),
            'gtk-vnc',
            'dvda-author',
            'dvdauthor',
            ('libvirt', 'libvirt'),
            ('libvirt-client', 'libvirt'),
            'virtinst',
            'virt-manager',
            'virt-viewer',
            'js',
            'amarok',
            'terminator',
            'clutter',
            'clutter-gtk',
            'clutter-gst',
            'pyclutter',
            'libmikmod',
            'dnsmasq',
            'latencytop',
            'pilot-link',
            'pypanel',
            'python-xlib',
            'vanilla-dmz-cursor-theme',
            'vanilla-dmz-aa-cursor-theme',
            'yasm',
            'libcddb',
            'libcdio',
            'parcellite',
            'wesnoth',
            'libtar',
            # commented out for now, need to get the deps right
            #'PyOpenGL',
            'SDL_Pango',
            'SDL_gfx',
            'SDL_ttf',
            #'compiz-check',
            #'conky',
            #'dvgrab',
            #'extremetuxracer',
            'freealut',
            #'gbrainy',
            #'ghex',
            'ghostscript',
            #'gnome-commander',
            #'griffith',
            #'hotwire-ssh',
            #'htop',
            #'kino',
            #'libiec61883',
            #'libmspack',
            #'libpaper',
            #'libquicktime',
            'openal',
            #'pdftk',
            #'perl-ExtUtils-CBuilder',
            #'perl-File-BaseDir',
            #'perl-File-DesktopEntry',
            #'perl-File-MimeInfo',
            #'perl-PathTools',
            #'plib',
            #'pygame',
            #'pyrenamer',
            #'reportlab',
            #'smpeg',
            #'tuxpaint',
            #'tuxpaint-stamps',
            #'tuxpaint-ttf',
            #'tuxtype2',
            #'tvtime',
            'foresight-wallpapers-zinden',
            'WebKit',
            'midori',
            'pywebkitgtk',
            'geoclue',
            'gwibber',
            'pycurl',
            'simplejson',
            'paramiko',
            'bzr-svn',
            'netbook-launcher', #netbook 
            #### 'ume-launcher', #netbook <<< FIXME needs to be bumped to a version that works with clutter 1.x1;5C
            'maximus', #netbook
            'go-home-applet', #netbook
            'window-picker-applet', #netbook
            'desktop-switcher', #netbook
            'liblauncher', #netbook
            'clutk', #netbook
            'wncksync', #netbook, not yet used
            'libfakekey',
            'supertux',
            'supertuxkart',
            'tuxmath',
            'pioneers',
            'cuyo',
            'recordmydesktop',
            'wavpack',
            'libcddb',
            'libcdio',
            'smplayer',
            'check',
#            'bitlbee',
            'nautilus-dropbox',
            'soundtouch',
            'unique',
            'gtkunique',
            'marlin',
            'pitivi',
            'gnonlin',
            'SILLY',
            'CEGUI',
            'smc',
            'espeak',
            'aspell-es',
            'aspell-sv',
            'libcanberra',
            'pangomm',
            'ptlib',
            'seahorse-plugins',
            'pastebinit',
            'guake',
            'sshfs',
            'gftp',
            'gnuplot',
            #'gnucash', #need little more love
            #'aqbanking', # dep for gnucash             #  busted atm (due to new gwenhywfar) (can't get to mook it ...)
            'guile', # dep for gnucash
            'gwenhywfar', # dep for gnucash
            'perl-Crypt-SSLeay', # dep for gnucash
            'perl-Finance-Quote', # dep for gnucash
            'perl-Finance-QuoteHist', # dep for gnucash
            'ktoblzcheck', # dep for gnucash
            'libgsf', # dep for gnucash
            'libofx', # dep for gnucash
            'slib', # dep for gnucash
            'libchipcard', # dep for gnucash
            #'libchipcard3', # dep for gnucash # FIXME << MISA - are libchipcard{2,3} still neeeded ? 
            #'libchipcard2', # dep for gnucash         >> both refuse to build against latest gwenhywfar
                             # Mihai, if both dead plz redirect them to nil and del these lines :) 
            'perl-HTML-TableExtract', # dep for gnucash
            'cryptsetup',
            'luks-tools',
            'lensfun',
            'preload',
            'gmpc-last.fm',
            'gmpc',
            'libmpd',
            'scribus',
            'tangerine',
            'daap-sharp',
            'pidgin-microblog',
            'matplotlib',
            'pondus',
            'ruby-gnome2',
            'adns',
            'adns-python',
            'smpeg',
            'lua',
            'gnuchess',
            'gnucap',
            'gcompris',
            'trash-cli',
            'Cheetah',
            'xfce4-notifyd',

            # bellow stuff rebuilt due to py26 jump
            # FIXME... source = needs to be filled ...
            'ConfigObj',
            'python-markdown',
            'cmemcache',
            'libmemcache',
            'Editra',
            'Elixir',
            'Miro',
            'MySQL-python',
            'PIL',
###            'PackageKit',
            'PyGreSQL',
            'PyOpenGL',
            'PyPAM',
            'PyQt',
            'PyXML',
            'PyYAML',
            'Pyrex',
            'SQLAlchemy',
            'WebKit',
            'adns-python',
            'alacarte',
            'amarok',
            'amiconfig',
            'ant',
            'argparse-python',
            'ark',
            'asciidoc',
            'at-spi',
            'audit',
            'avahi',
            'avahi-glib',
            'avahi-qt3',
            'avahi-qt4',
            'avahi-sharp',
            'avahi-tools',
            'avant-window-navigator',
            'awn-extras',
            'libdesktop-agnostic',
            'beagle',
            'billreminder',
            'boost',
            'bsddb3',
            'bzr',
            'bzr-svn',
            'cElementTree',
            'cervisia',
            'cherokee',
            'christine',
            'coherence',
            'compizconfig',
            'compizconfig-python',
            'conduit',
            'cracklib',
            'd-feet',
            'dbus-python',
            'decorator',
            'deluge',
            'deskbar-applet',
            'devhelp',
            'dia',
            'displayconfig-gtk',
            'dnspython',
            'docutils',
            'doxygen',
            'dpaster',
            'eclipse-sdk',
            'elementtree',
            'moovida',
            'moovida-plugins-bad',
            'moovida-plugins-good',
            'moovida-plugins-ugly',
            'emacs',
            'emesene',
            'emesene-unsupported-plugins',
            'empathy',
            'eog',
            'epdb',
            'epiphany',
            'epiphany-extensions',
            'eyeD3',
            'firefox-adblock-plus',
            'firefox-cookiesafe',
            'firefox-downthemall',
            'firefox-firebug',
            'firefox-greasemonkey',
            'firefox-itsalltext',
            'firefox-linkification',
            'firefox-noscript',
            'firefox-treestyletab',
            'fusion-icon',
            'gajim',
            'gamin',
            'gaphor',
            'gcompris',
            'gdata-python',
            'gedit',
            'gedit-plugins',
            'gettext',
            'glib',
            'gnome-applets',
            'gnome-commander',
            'gnome-desktop',
            'gnome-doc-utils',
            'gnome-games',
            'gnome-menus',
###            'gnome-packagekit',
            'gnome-python',
            'gnome-python-desktop',
            'gnome-python-extras',
            'gnome-shutdown',
            'gnome-specimen',
            'gnumeric',
            'gourmet',
            'griffith',
            'grubtobootman',
            'gst-python',
            'gstreamer',
            'gtk',
            'gtk-doc',
            'gtk-recordmydesktop',
            'gtk-vnc',
            'gtkpod',
            'gtksourceview',
            'guake',
            'gvim',
            'hal',
            'hamster-applet',
            'hotwire-ssh',
            'hplip',
            'inkscape',
            'ipython',
            'iso-codes',
            'kvm',
            'lcms',
            'libata-migrate',
            'libevent',
            'libexo',
            'libgmail',
            'libgpod',
            'libgsf',
            'libieee1284',
            'libpurple',
            'librsvg',
            'libuser',
            'libxml2',
            'libxslt',
            'lifetunes',
            'listen',
            'lxml',
            'lxml-html-soupparser',
            'lyx',
            'm2crypto',
            'mailman',
            'matplotlib',
            'medit',
            'meld',
            ('mercurial','mercurial'),
            ('mercurial-hgk','mercurial'),
#            'mkinitrd',
            'mod_python',
            'mod_wsgi',
            # 'mugshot', # dead upstream
            'mutagen',
            'mx',
            'newt',
            'notify-python',
            'numpy',
            'obexftp',
            'obmenu',
            'openbox',
            'orca',
            'paramiko',
            'pastebinit',
            'pessulus',
            'pidgin',
##            'pigment',
##            'pigment-python',
            'pilot-link',
            'pitivi',
            'planner',
            'pondus',
            ('postgresql', 'postgresql'),
            ('postgresql-contrib', 'postgresql'),
            ('postgresql-server', 'postgresql'),
            'postr',
            'pyOpenSSL',
            'pyblock',
            'pycairo',
            'pyclutter',
            'pycrypto',
            'pygame',
            'pygobject',
            'pygoocanvas',
            'pygtk',
            'pygtksourceview',
            'pymsn',
            'pyorbit',
            'pypanel',
            'pyparted',
            'pyrenamer',
            'python-alsaaudio',
            'python-cssutils',
            'python-ctypes',
            'python-daap',
            'python-dateutil',
            'python-distutils-extra',
            'python-feedparser',
            'python-hashlib',
            'python-inotify',
            'python-numeric',
            'python-pgsql',
            'python-setuptools',
            'python-sqlite',
            'python-twisted',
            'python-twitter',
            'python-virtualenv',
            'python-xlib',
            'python-zopeinterface',
            'pytube',
            'pyxdg',
            'pyxf86config',
            'reportlab',
            'revelation',
            'rhythmbox',
            'rope',
            'ropeide',
            'rpath-common',
            'rpath-product-definition',
            'rpath-xmllib',
            'sabayon',
            'scgi',
            'scons',
            'screenlets',
            'scribus',
            'sexy-python',
            'sgmlop',
            'simple-ccsm',
            'simplejson',
            'sip',
            'soundconverter',
            'spe',
            ('subversion', 'subversion'),
            ('subversion-gnome', 'subversion'),
            ('subversion-kde', 'subversion'),
            ('mod_dav_svn', 'subversion'),
            'superkaramba',
            'swig',
            ('switchdesk','switchdesk'),
            ('switchdesk-gui','switchdesk'),
            'terminator',
            ('tetex', 'tetex'),
            ('tetex-afm', 'tetex'),
            ('tetex-dvips', 'tetex'),
            ('tetex-fonts', 'tetex'),
            ('tetex-latex', 'tetex'),
            ('tetex-xdvi', 'tetex'),
            'textflow',
            'totem',
            'translate-toolkit',
            'tshark',
            'twill',
            'umbrello',
            'urlgrabber',
            ('vim', 'vim'),
            ('vim-minimal',  'vim'),
            'virt-manager',
            'virtinst',
            'vobject',
            'vsdviewer',
            'vte',
            'wbarconf',
            'weechat',
            'wesnoth',
            'whaawmp',
            'wine-doors',
            'wireshark',
####            'xchat-gnome',
            'xulrunner',
            'gnome-bluetooth',
            'keyjnote',
            'libbtctl',
            'spe',
            'wxGlade',
            'wxPython',
            'authconfig',
            'authconfig-gtk',
            'authconfig-tui',
            'booty',
            'e2fsprogs',
            'firstboot',
            'kudzu',
            'libx86',
            'pciutils',
            'pm-utils',
            'pykickstart',
            'radeontool',
            'rhpl',
            'rhpxl',
            'system-config-date',
            'system-config-display',
            'system-config-users',
            'system-config-keyboard',
            'system-config-printer',
            'pycups',
            'vbetool',
            'quodlibet',
            'gimp-lqr-plugin',
            'liblqr-1',
            'ufraw',
            'griffith',
            'polib',
            'gtkparasite',
            'gnome-keyring-manager', # deprecated
            'boto',
            'BeautifulSoup',
            'amsn',
            'boo',
            ('django', 'django'),
            ('django-db-mysql', 'django'),
            ('django-db-postgres', 'django'),
            ('django-db-sqlite3', 'django'),
            'django-contact-form',
            'django-evolution',
            'django-notification',
            'django-authopenid',
            'django-pagination',
            'Genshi',
            'simdock',
            'devilspie',
            'libtorrent-rasterbar',
            #####  'virtualbox', # until bumped
            'info-vboxusers',
            'moonlight',
            'moonshine',
            'editmoin',
            'cython',
            # enlightment pack
            'ecore',
            'edbus',
            'edje',
            'eet',
            'efreet',
            'eina',
            'embryo',
            'enlightenment',
            'etk',
            'evas',
            'python-evas',
            'python-ecore',
            'python-edje',
            'python-etk',
            'libast',
            'eterm',
            'nautilus-image-converter',
            'libConfuse',
            'tilda',
            'bluefish',

            'gobject-introspection',
            'gir-repository',
            'libffi',
            'community-themes',
            'human-theme',
            'human-icon-theme',
            'tangerine-icon-theme',
            # pulled in for calibre
            'python-ClientForm',
            'python-mechanize',
            'help2man',
            'calibre',
            'vagalume',
            'imagination',
            'pidgin-facebookchat',
            'ogmrip',
            'bluefish',
            'freeciv',
            # fbreader
            'fbreader',
            'liblinebreak',
            'cssc',
            'gnash',
            'xchat',
            # gpa - the Gnu Privacy Assistant, a GnuPG frontend
            'gpa',
            'gpgme',
            'perl-ExtUtils-Depends',
            'perl-ExtUtils-PkgConfig',
            'wicd',
            'perl-Glib',
            'perl-Cairo',
            'perl-Gtk2',
            'perl-Gtk2-TrayIcon',
            'boa-constructor',
            'easygui',
            'jsonrpclib',
            'pep8',
            'pyssh',
            'poster',
            'twill',
            'kodos',
            'stardict',
            'gnome-colors-brave',
            'gnome-colors-human',
            'gnome-colors-noble',
            'gnome-colors-wine',
            'gnome-colors-wise',
            'gtranslator',
            'mtpaint',
            'markdown',
            'perl-Gtk2-Spell',
            'Zim',
            'iftop',
            'scrot',
            # 'eel', # DEPRECATED in gnome-2.26 (keeping it here until we bump all recipes that still dep in it) 
            'mtd-utils', # needed for jffs2 support
            'truecrypt',
            'cdrdao',
            'python-mako',
            'ImageMagick',
            'resynthesizer',
            'picasa',
            ('sun-jre', 'sun-jdk'),
            ('sun-jdk', 'sun-jdk'),
            ('sun-java-webplugin', 'sun-jdk'),

            ('icedtea-jdk', 'icedtea'),
            ('icedtea-jre', 'icedtea'),
            ('icedtea-gcjwebplugin', 'icedtea'),

            ('gtk-qt-engine-kde', 'gtk-qt-engine'),
            ('gtk-qt-engine', 'gtk-qt-engine'),
            'biopython',
            'matchbox-keyboard',
            'uriparser',
            'pdfshuffler',
            'pyPdf',
            'lxc',
            'gphoto2',
            'pygooglechart',
            'sox',
            'pylint',
            'logilab-common',
            'logilab-astng',
            'sqlalchemy-migrate',
            'pysvn',
            'libv4l',
            'screen',
            'libharu',
            'prozilla',
            'hotwire',
            'blastbits',
            'ccrtp',
            'commoncpp',
            'libzrtpcpp',
            'twinkle',
            'moserial',
            'portaudio',
            'libftdi',
            'deja-dup',
            'duplicity',
            'pidgin-tlen',
            'chromium-bsu', 
            'glpng', 
            'ftgl',
            'linuxvideoconverter',
            'gnac',
            # 3D, Games and Physics
            'ode',
            'cal3d',
            'mingus',
            'soya3d',
            'tabu-audio-player',
            'rdiff-backup',
            'backintime',
            'pidgin-musictracker',
            'vlc',
            'rapid-photo-downloader',
            'pyexiv2',
            'bareftp',
            'sqlite',
            'autoconf213',
            'gpodder',
            'gtkdatabox',
            'klavaro',
            'sphinxbase',
            'pocketsphinx',
            'gnome-voice-control',
            'nexuiz',
            'opentumblr-client',
            'xz',
            'log4net',
            'nini',
            'smartirc4net',
            'smuxi',
            'SDL_sound',
            'physfs',
            'libsigc++-1',
            'pyusb',
            'kupfer',
            'cinelerra',
            'synergy',
            'libgee',
            'gssdp',
            'gupnp',
            'gupnp-av',
            'gupnp-ui',
            'gupnp-vala',
            'gupnp-tools',
            'rygel',
            'gst-rtsp-server',
            'radare',
            'gcstar',
            'flock',
            'chromium',
            'depot_tools', 
            'homebank',
            'allegro',
            'nitrogen',
            'libnice',
            'tunctl',
            'arista',
            'vcdimager',
            'libytnef',
            'ytnef',
            'papyon',
            'openjpeg',
            'pdfmod',
            'libchamplain',
            'libspectre',
            'jasper',
            'ffmpegthumbnailer', 
            'mediatomb',
            'xfig',
            'transfig',
            'json-glib',
            'gnome-shell',
            'gnome-shell-theme-forest',
            'gjs',
            'mutter',
            'curl',
            'txt2man',
            't1utils',
            'tor',
            'info-tor',
            'solfege',
            'TiMidity',
            'eawpats',
            'vidalia',
            'nfoview',
            'unetbootin',
            'mtools',
            'zmugfs',
            'zmugjson',
            'python-cpio',
            'eject',
            'python-kiwi',
            'acetoneiso',
            'bake',
            'nted',
            'fluidsynth',
            'denemo',
            'nethack',
            'nautilus-cd-burner', #DEPRECATED  in 2.26 # we just care about its headers
            'devede', 
            'asunder',
            'chardet',
            'python-iniparse',
            'gavl',
            'libdvbpsi',
            'gmerlin-avdecoder',
            'wxsvg',
            'mpgtx',
            'libgdata', #new buildreq for totem to make youtube plugin to work
            'libepc', #totem buildreq
            'gmyth',
            'db',
            ('db4-java', 'db'),
            'pragha',
            'libmodplug',
            'jgoodies-forms',
            'jgoodies-looks',
            'scala',
            'fuse-python',
            'info-davfs2',
            'davfs2',
            'font-opentype-inconsolata',
            ('font-fixed-terminus', 'font-fixed-terminus'),
            ('font-fixed-terminus-console', 'font-fixed-terminus'),
            'webkit-sharp',
            'rssowl',
            'theme-bamboo-zen',
            'launchy',
            'blueman',
            'jam',
            'isomaster',
            'gecko-mediaplayer',
            'whaawmp',
            'gparted',
            'TaskCoach',
            'bauble',
            'mpd',
            'gmpc-plugins',
            'libnxml',
            'gimmix',
            'libmicrohttpd',
            'gqview',
            'hyena',
            'libcue',
            'seamonkey',
            'mp4v2',
            'zziplib',
            'wildmidi',
            'gpac',
            'info-mpd',
            'dstat',
            'libmcs',
            'libmowgli',
            'audacious',
            'audacious-plugins',
            'hsqldb',
            'blogbridge',
            'python-musicbrainz2',
            'picard',
            'libpar2',
            'gpar2',
            'pam_usb',
            'pmount',
            'pdfedit',
            'python-tunepimp',
            'guayadeque',
            'cscope',
            'pycscope',
            'perl-Mail-IMAPClient',
            'perl-Authen-SASL',
            'perl-Authen-NTLM',
            'perl-IO-Socket-SSL',
            'perl-Digest-MD5',
            'perl-Digest-HMAC',
            'perl-Net-SSLeay',
            'perl-Term-ReadKey',
            'perl-HTML-Tree',
            'perl-File-Slurp',
            'perl-HTTP-Cache-Transparent',
            'perl-PerlIO-gzip',
            'perl-SOAP-Lite',
            'perl-HTML-Parser',
            'perl-Mail-SpamAssassin',
            'perl-XML-Parser',
            'perl-XML-SAX',
            'perl-libxml-enno',
            'perl-HTTP-Cookies',
            # 'perl-HTML-Entities',
            'perl-Term-ProgressBar',
            'perl-WWW-Mechanize',
            'perl-Term-ReadKey',
            'perl-XML-Writer',
            'perl-version',
            'xmltv',
            'gnome-paint',
            'imapsync',
            'tree',
            'djbfft', # buildreq for a52dec
            ('git', 'git'),
            ('gitweb', 'git'),
            'radiotray',
            'flaw',
            ('pcre', 'pcre'),
            ('pcre-c++', 'pcre'),
            'netpbm',
            ('mysql', 'mysql'),
            ('mysql-server', 'mysql'),
            ('mysql-bench', 'mysql'),
            'perl-Time-HiRes',
            'perl-Digest-SHA',
            'perl-Net-DNS-Resolver-Programmable',
            'perl-Encode-Detect',
            'perl-ExtUtils-CBuilder',
            'perl-IO-Socket-INET6',
            'perl-Mail-SPF',
            'perl-NetAddr-IP',
            'icecast',
            'camorama',
            'emacs',
            'eclipse-sdk',
            'scim', 'scim-anthy', 'scim-pinyin', 'scim-tables',
            'anthy', 'ibus', 'ibus-pinyin',
            'bogofilter',
            'balsa',
            'libesmtp',
            'giggle',
            'subtitleeditor',
            'gstreamermm',
            'volti',
            'pyalsaaudio',
            'theme-showtime',
            'c-ares',
            'znc',
            'ladspa_sdk', # buildreq for sox
            'lives',
            'lm_sensors',
            'banshee-community-extensions',
            'cppunit', # Buildreq for filezilla
            'ardour',
            'lv2core', #buildreqs for ardour
            'slv2',
            'frei0r-plugins', #buildreqs for openshot
            'mlt',
            'openshot',
            'imageshack-uploader',
            'blender',
            ('blenderplayer', 'blender'),
            'gngeo', # neogeo emulator
            'xgngeo',
            'pidgin-embeddedvideo',
            'gdata-sharp',
            'parano',
            'abgx360',
            'abgx360-gui',
            'smv-encode',
            'pino',
            'pdo-mysql',
            'grisbi',
            'rpm',
            'hg-forest',
            'plib',
            'openscenegraph',
            'SimGear',
            'flightgear',
            'DevIL',
            # bellow need massaging for newer boost
            # 'PokerTH',
            # 'spring',
            # 'pekwm_menu_tools',
            'gnome-js-common',
            'seed',
            'empathy-theme-foresight',
            'Cg',
            'pycg',
            'Beaker',
            'podofo',
            'pike',
            'nettle',
            'libtelepathy', # deprecated
            'telepathy-haze', # -butterfly preferred
            'swfdec',
            'swfdec-gnome',
            'gtg',
            'pybugz',
            'rrdtool',
            'GeoIP',
            'ethos',
           # php
            ('php', 'php'),
            ('php-cgi', 'php'),
            ('php-imap', 'php'),
            ('php-mcrypt', 'php'),
            ('php-mysql', 'php'),
            ('php-mysqli', 'php'),
            ('php-pgsql', 'php'),
            ('php-soap', 'php'),
            ('php-xsl', 'php'),
            # /php
            'libdbi',
            'libdc1394',
            'monodevelop-boo',
            'rubrica',
            'griffith',
            'w3m',
            'libupnp',
            # 'eiskaltdcpp',
            'freedcpp',
            'linuxdcpp',
            'libxdg-basedir',
            'libggz',
            'ggz-server',
            'ggz-client-libs',
            'ggz-gtk-client',
            'corkscrew',
            'amaya',
            'asio', #dep for vdrift
            'libpano13', #dep for hugin
            'hugin',
            'sofia-sip', #dep for telepathy-sofiasip
            'telepathy-sofiasip',
            'fox',
            'gmusicbrowser',
            'sonata',
            'python-mpd',
            'google-gadgets',
            ('google-gadgets-gnome','google-gadgets'),
            ('google-gadgets-kde', 'google-gadgets'),
            'virtaal',
            'translate-toolkit',
            'libvoikko',
            'malaga',
            'mozvoikko',
            'suomi-malaga',
            'tmispell-voikko',
            'liblastfm',
            'cinepaint',
            'gossip',
            'gphpedit',
            'image-exiftool',
            'fotoxx',
            'lapack',
            'atlas',
            'libusb1',
            'libimobiledevice',
            'usbmuxd',
            'info-usbmuxd',
            'libplist',
            'ifuse',
            ('PackageKit','PackageKit'),
            ('PackageKit-command-not-found','PackageKit'),
            ('PackageKit-gtk-module','PackageKit'),
            'gnome-packagekit',
            'yawn',
            'me-tv',
            ('virtualbox-ose',  'virtualbox-ose'),
            ('virtualbox-guest', 'virtualbox-ose'),
            'libvisual',
            'libass',
            'libmimic',
            'twolame',
            'keyutils',
            'perl-libintl-perl',
            'perl-Event',
            'lsdvd',
            'xnoise',
            'xnoise-plugins-core',
            'noip',
            'info-noip',
            'googlecl',
            'MyPasswordSafe',
            'impressive',
            'zsh',
            ]:
            r.flAdd(p, groupName='group-supported-stuff-extra')

        # single arch troves
        r.flAdd('wine', groupName='group-supported-stuff-extra', flavor='is: x86', singleArch=True)

        # pkgSpec pkgs
        r.flAdd('tshark', groupName='group-supported-stuff-extra', source = 'wireshark')

        r.flAdd('emacs', groupName='group-supported-stuff-extra', source = 'emacs')
        # r.flAdd('emacs-leim', groupName='group-supported-stuff-extra', source = 'emacs')

        # until RPL-2554 is solved...
        r.flAdd('libmspack', groupName='group-supported-stuff-extra')

        # OpenOffice.org iceberg
        # we want all to appear in searchPath...
        OOObase = [ 
                    # XXX we shouldn't have to reference hsqldb here, but if we do not 
                    # some java deps it provides are found by OOO from an older, badly
                    # packaged version of blogbridge
                    'hsqldb',
                    'openoffice.org',
                    'openoffice.org-base',
                    'openoffice.org-calc',
                    'openoffice.org-draw',
                    'openoffice.org-impress',
                    'openoffice.org-math',
#                    'openoffice.org-mono',
                    'openoffice.org-writer'
                    ]

        # pre-made packs for gnome/kde users pleasure...
        r.flCreateGroup('group-ooo-gnome', parentGroup='group-supported-stuff-extra', dynamicGroup = False)
        r.flCreateGroup('group-ooo-kde', parentGroup='group-supported-stuff-extra', dynamicGroup = False)

        for p in OOObase:
            r.flAdd(p, groupName='group-ooo-gnome', source='openoffice.org')
            r.flAdd(p, groupName='group-ooo-kde', source='openoffice.org')

        r.flAdd('openoffice.org-kde', groupName='group-ooo-kde', source='openoffice.org')
        r.flAdd('openoffice.org-gnome', groupName='group-ooo-gnome', source='openoffice.org')

        # i18n

        OOOi18nDocLangs = [
        'br',
        'cs',
        'cy',
        'da',
        'de',
        'es',
        'et',
        'fr',
        'he',
        'hu',
        'it',
        'ja',
        'km',
        'ko',
        'nl',
        'pa-IN',
        'pl',
        'pt-BR',
        'ru',
        'rw',
        'sv',
        'vi',
        'zh-CN',
        'zh-TW',
        ]

        OOOi18nLangs = [
            'af',
            'ar',
            'as-IN',
            'be-BY',
            'bg',
            'bn',
            'br',
            'bs',
            'ca',
            'cs',
            'cy',
            'da',
            'de',
            'dz',
            'el',
            'en-ZA',
            'eo',
            'es',
            'et',
            'fa',
            'fi',
            'fr',
            'ga',
            'gl',
            'gu',
            'gu-IN',
            'he',
            'hi-IN',
            'hr',
            'hu',
            'it',
            'ja',
            'ka',
            'km',
            'ko',
            'ku',
            'lt',
            'mk',
            'ml-IN',
            'mn',
            'mr-IN',
            'my',
            'nb',
            'ne',
            'nl',
            'nn',
            'nr',
            'ns',
            'or-IN',
            'pa-IN',
            'pl',
            'pt',
            'pt-BR',
            'ru',
            'rw',
            'sh',
            'sk',
            'sl',
            'sr',
            'ss',
            'st',
            'sv',
            'sw-TZ',
            'ta-IN',
            'te-IN',
            'tg',
            'th',
            'ti-ER',
            'tn',
            'tr',
            'ts',
            'uk',
            'ur-IN',
            'uz',
            've',
            'vi',
            'xh',
            'zh-CN',
            'zh-TW',
            'zu'
            ]

        r.flCreateGroup('group-ooo-locales', parentGroup='group-supported-stuff-extra', dynamicGroup = False)

        for l in OOOi18nLangs:
            r.flAdd('openoffice.org-locale-' + l, groupName='group-ooo-locales', source='openoffice.org')

#        for l in OOOi18nDocLangs:
#            r.flAdd('openoffice.org-doc-' + l, groupName='group-ooo-locales', source='openoffice.org')

        # final housekeeping

        # we  need this as we use now copyComponents
        # for develComponents.
        groupList = r.getChildGroups('group-desktop-platform')
        for g in groupList:
            if g[0].name not in r.bucketDevelGroups:
                r.removeComponents(r.develComponents, g[0].name)

        # FIXME: this is freak. r.add(..., component=['lib'], flavor = is: x86) installs
        # remaining components with byDefault=False
        # obviously this messes everything, as conary still tries to resolve them...
        # and checkPathConflicts complains loudly
        if Arch.x86_64:
            legacyArchGroups = ['group-compat32',] #  'group-desktop-platform-compat32']
            for g in legacyArchGroups:
                r.removeComponents( [ 'devel', 'python', 'doc', 'data', 'runtime', 'test', 'perl',
                                      'supdoc', 'locale', 'config', 'devellib'],
                                    groupName=g)


        # add our python (2.6)
        # FIXME 2.6.5 seems to be be BREAKING a few stuff (starting by rMake)  
        #r.flAdd('python', versionStr = '2.6.4-1-1', groupName='group-desktop-common')
        #r.flAdd('idle', versionStr = '2.6.4-1-1', groupName='group-desktop-common', source = 'python')

        r.flAdd('python', groupName='group-desktop-common')
        r.flAdd('idle', groupName='group-desktop-common', source = 'python')

        # FALLback python-2.4
        # this way we don't need to worry about iLP... as 2.4 will be allways available, as fallback
        r.add('python:runtime', versionStr = r.compatLabel, groupName='group-desktop-common', flavor = '~!bootstrap,ipv6,readline,ssl,tcl,tk')
        r.add('python:lib', versionStr = r.compatLabel, groupName='group-desktop-common', flavor = '~!bootstrap,ipv6,readline,ssl,tcl,tk')
        if Arch.x86_64:
            r.add( 'python:lib', versionStr = r.compatLabel, groupName='group-compat32',
                   flavor = '~!bootstrap,ipv6,readline,ssl,tcl,tk is: x86')

        #  FIXME: understand why we need this, as python:bin[x86] shouldn't get pulled in first place...
        if Arch.x86_64:
            r.remove('python:bin', groupName = 'group-desktop-common', flavor = '~!bootstrap,ipv6,readline,ssl,tcl,tk is: x86')
            r.remove('python:runtime', groupName = 'group-desktop-common', flavor = '~!bootstrap,ipv6,readline,ssl,tcl,tk is: x86')


        #
        # Everything below here define 'official' foresight editions (gnome,kde,xfce,etc)

        # Define GNOME Edition
        r.flCreateGroup('group-gnome-dist', parentGroup='group-desktop-platform',
                        checkOnlyByDefaultDeps=False,
                        # checkOnlyByDefaultDeps=True,
                        depCheck=True, autoResolve=True, checkPathConflicts=True,
                        dynamicGroup = True)

        r.addNewGroup('group-desktop-common', groupName='group-gnome-dist')
        r.addNewGroup('group-gnome', groupName='group-gnome-dist')
        r.addNewGroup('group-mozilla', groupName='group-gnome-dist')
        r.addNewGroup('group-pidgin', groupName='group-gnome-dist')
        r.addNewGroup('group-ooo-gnome', groupName='group-gnome-dist')
        r.remove('hplip', groupName='group-gnome-dist')
        r.remove('httpd', groupName='group-gnome-dist')
        r.remove('php', groupName='group-gnome-dist')

        # Define KDE Edition
        r.flCreateGroup('group-kde-dist', parentGroup='group-desktop-platform',
                        checkOnlyByDefaultDeps=False,
                        # checkOnlyByDefaultDeps=True,
                        depCheck=True, autoResolve=True, checkPathConflicts=True,
                        dynamicGroup = True)
        r.addNewGroup('group-desktop-common', groupName='group-kde-dist')
        r.addNewGroup('group-kde', groupName='group-kde-dist')

        r.addNewGroup('group-ooo-kde', groupName='group-kde-dist')
        r.addNewGroup('group-mozilla', groupName='group-kde-dist')
        r.addNewGroup('group-desktop-common-extras', groupName='group-kde-dist')

        # Define XFCE Edition
        r.flCreateGroup('group-xfce-dist', parentGroup='group-desktop-platform',
                        checkOnlyByDefaultDeps=False,
                        # checkOnlyByDefaultDeps=True,
                        depCheck=True, autoResolve=True, checkPathConflicts=True,
                        dynamicGroup = True)
        r.addNewGroup('group-desktop-common', groupName='group-xfce-dist')
        r.addNewGroup('group-xfce', groupName='group-xfce-dist')
        r.addNewGroup('group-mozilla', groupName='group-xfce-dist')
        r.addNewGroup('group-pidgin', groupName='group-xfce-dist')
        r.addNewGroup('group-desktop-common-extras', groupName='group-xfce-dist')
        # gdm stuff
        r.flAdd('xfce-default-session', groupName='group-xfce-dist')
        r.flAdd('gdm', groupName='group-xfce-dist')

        # Define GNOME Lite Edition
        r.flCreateGroup('group-gnome-lite-dist', parentGroup='group-desktop-platform',
                        depCheck=True, autoResolve=True, checkPathConflicts=True,

                        dynamicGroup = True)
        r.addNewGroup('group-desktop-common', groupName='group-gnome-lite-dist')

        # overrides for services and dbus service activation files
        r.add('foresight-services', groupName='group-gnome-lite-dist')
        r.flAdd('atk', groupName='group-gnome-lite-dist')
        r.flAdd('at-spi', groupName='group-gnome-lite-dist')
        r.flAdd('banshee', groupName='group-gnome-lite-dist')
        r.flAdd('brasero', groupName='group-gnome-lite-dist')
        r.flAdd('cairo', groupName='group-gnome-lite-dist')
        r.flAdd('compiz-gnome', groupName='group-gnome-lite-dist')
        r.flAdd('evince', groupName='group-gnome-lite-dist')
        r.flAdd('evolution', groupName='group-gnome-lite-dist')
        r.flAdd('file-roller', groupName='group-gnome-lite-dist')
        r.flAdd('firefox', groupName='group-gnome-lite-dist')
        r.flAdd('foresight-user-guide', groupName='group-gnome-lite-dist')
        r.flAdd('f-spot', groupName='group-gnome-lite-dist')
        r.flAdd('gcalctool', groupName='group-gnome-lite-dist')
        r.flAdd('gdm', groupName='group-gnome-lite-dist')
        r.flAdd('gedit', groupName='group-gnome-lite-dist')
        r.flAdd('gksu', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-applets', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-audio', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-control-center', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-desktop', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-doc-utils', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-do', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-icon-theme', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-keyring', groupName='group-gnome-lite-dist')
#        r.flAdd('gnome-main-menu', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-media', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-menus', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-mime-data', groupName='group-gnome-lite-dist')
###        r.flAdd('gnome-packagekit', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-panel', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-panel-layout', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-power-manager', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-screensaver', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-session', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-settings-daemon', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-sharp', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-spell', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-terminal', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-themes', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-utils', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-volume-manager', groupName='group-gnome-lite-dist')
        r.flAdd('gst-plugins-base', groupName='group-gnome-lite-dist')
        r.flAdd('gst-plugins-good', groupName='group-gnome-lite-dist')
        r.flAdd('gtkmm', groupName='group-gnome-lite-dist')
        r.flAdd('gtk-sharp', groupName='group-gnome-lite-dist')
        r.flAdd('gvfs', groupName='group-gnome-lite-dist')
#        r.flAdd('gnome-disk-utility', groupName='group-gnome-lite-dist')
        r.flAdd('gnome-mount', groupName='group-gnome-lite-dist')
        r.flAdd('hal-sharp', groupName='group-gnome-lite-dist')
        r.flAdd('hicolor-icon-theme', groupName='group-gnome-lite-dist')
        r.flAdd('icon-naming-utils', groupName='group-gnome-lite-dist')
        r.flAdd('ipod-sharp', groupName='group-gnome-lite-dist')
        r.flAdd('iso-codes', groupName='group-gnome-lite-dist')
        r.flAdd('libbonobo', groupName='group-gnome-lite-dist')
        r.flAdd('libbonoboui', groupName='group-gnome-lite-dist')
        r.flAdd('libical', groupName='group-gnome-lite-dist')
        r.flAdd('libgksu', groupName='group-gnome-lite-dist')
        r.flAdd('libgnome-background', groupName='group-gnome-lite-dist')
        r.flAdd('libgnome', groupName='group-gnome-lite-dist')
        r.flAdd('libgnomeui', groupName='group-gnome-lite-dist')
        r.flAdd('libgphoto2-sharp', groupName='group-gnome-lite-dist')
        r.flAdd('libgphoto2', groupName='group-gnome-lite-dist')
        r.flAdd('metacity', groupName='group-gnome-lite-dist')
        r.flAdd('mousetweaks', groupName='group-gnome-lite-dist')
        r.flAdd('nautilus', groupName='group-gnome-lite-dist')
        r.flAdd('nautilus-open-terminal', groupName='group-gnome-lite-dist')
        r.flAdd('network-manager-applet', groupName='group-gnome-lite-dist')
        r.flAdd('pidgin', groupName='group-gnome-lite-dist')
        r.flAdd('podsleuth', groupName='group-gnome-lite-dist')
        r.flAdd('seahorse', groupName='group-gnome-lite-dist')
        r.flAdd('shared-mime-info', groupName='group-gnome-lite-dist')
        r.flAdd('tomboy', groupName='group-gnome-lite-dist')
        r.flAdd('totem', groupName='group-gnome-lite-dist')
        r.flAdd('yelp', groupName='group-gnome-lite-dist')
        r.flAdd('notify-osd', groupName='group-gnome-lite-dist')
        r.flAdd('indicator-applet', groupName='group-gnome-lite-dist')
        for liteRemove in 'gimp', 'gutenprint', 'ghostscript', 'hplip', \
            'kerneloops', 'kernel:build-tree', 'icedtea-jdk', 'icedtea-jre', \
            'icedtea-gcjwebplugin', 'moonlight', 'synapse', 'transmission', \
            'postgresql', 'qt', 'unixODBC', 'qt4', 'qt4-sql', 'qt4-gui', \
            'qt4-qt3support', 'gtk-qt-engine', 'qt4-core', 'mysql', \
            'pavumeter', 'pavucontrol', 'simple-ccsm', \
            'compiz-fusion-plugins-extra', 'compiz-fusion-plugins-unsupported':
            r.remove(liteRemove, groupName='group-gnome-lite-dist')

        r.removeComponents(r.docComponents, 'group-gnome-lite-dist')
        r.removeComponents(r.develComponents, 'group-gnome-lite-dist')
        r.flCreateGroup('group-gnome-lite-locales', parentGroup='group-desktop-platform', dynamicGroup = True)
        r.moveComponents(r.localeComponents, 'group-gnome-lite-dist', 'group-gnome-lite-locales')


        # dist-devel groups
        # simplifies life to devs, as it makes  sync/update group-`edition`-{devel,dist} unnecessary
        for edition in [ 'gnome', 'kde', 'xfce']:
            r.flCreateGroup('group-' + edition + '-dist-devel', parentGroup='group-desktop-platform',
                            depCheck=True, autoResolve=True, checkPathConflicts=True,
                            dynamicGroup = True)
            r.addNewGroup('group-'+ edition + '-dist', groupName='group-' + edition + '-dist-devel')
            r.addNewGroup('group-'+ edition + '-devel', groupName='group-' + edition + '-dist-devel')
            # we do not have a simple way to get each 'group-'+ edition + '-devel' closed as those 
            # are created too soon. (and ence tried to get closed before all stuff getting referenced) 
            # so we keep things consistent by having each of them to require the matching 
            # 'group-' + edition + '-dist-devel'
            r.Requires('group-' + edition + '-dist-devel', groupName= 'group-'+ edition + '-devel')

# vi: set ts=4 sts=4 sw=4 expandtab:

