loadSuperClass('gnomepackage')
class NetworkManager(GnomePackageRecipe):
   buildRequires = [ 'hal:devel','dbus:devel', 'gtk:devel','libgnomeui:devel',
        'wireless-tools:devel','glib:devel', 'openssl:devel','libglade:devel',
        'gnome-panel:devel','gnome-keyring:devel', 'gettext:devel',
        'GConf:devel', 'ORBit2:devel', 'atk:devel', 'cairo:devel',
        'fontconfig:devel', 'freetype:devel', 'gnome-vfs:devel',
        'libart_lgpl:devel', 'libbonobo:devel', 'libbonoboui:devel',
        'libgnome:devel', 'libgnomecanvas:devel', 'dhcdbd:runtime',
        'libpng:devel', 'libxml2:devel', 'pango:devel', 'popt:devel',
        'dbus-glib:devellib', 'libgcrypt:devel', 'libgpg-error:devel',
        'libpng:devel', 'libxml2:devel', 'pango:devel', 'popt:devel',
        'wpa_supplicant:runtime', 'libnl:devel', 'libgpg-error:devel',
        'libgcrypt:devel', 'dbus-glib:devellib', 'libnotify:devel',
        'chkconfig:runtime', 'gettext:runtime', 'gtk:runtime', 'perl:runtime',
        'iproute:runtime', 'expat:devel' ]
        
   name = "NetworkManager"
   version = "0.7.0.cvs20061030"

   extraConfig = ' --with-distro=redhat --enable-notification-icon --with-named=/usr/sbin/named --with-named-user=named --with-named-dir=%(localstatedir)s/named --with-wpa_supplicant=/usr/sbin/wpa_supplicant localstatedir=%(localstatedir)s'

   def unpack(r):
      r.addArchive('%(name)s-%(version)s.tar.gz')
      r.addPatch('NetworkManager-0.7.0-dont-choose-inactive-wired-device.patch')
      r.macros.foodir='initscript/RedHat'
      r.Replace('chkconfig: - 98 02','chkconfig: 5 98 02','%(foodir)s/NetworkManager', '%(foodir)s/NetworkManager.in','%(foodir)s/NetworkManagerDispatcher.in','%(foodir)s/NetworkManagerDispatcher')
      r.Replace(' -p \$pidfile','','%(foodir)s/NetworkManager','%(foodir)s/NetworkManager.in')
      r.Replace('NM_SUPPLICANT_TIMEOUT\t20','NM_SUPPLICANT_TIMEOUT      40','src/nm-device-802-11-wireless.c')
      r.addSource('ntpd.dispatch')

   def install(r):
      GnomePackageRecipe.install(r)
      r.MakeDirs('%(localstatedir)s/run/%(name)s')
      r.ExcludeDirectories(exceptions='%(localstatedir)s/run/%(name)s')
      r.Install('ntpd.dispatch', '%(sysconfdir)s/NetworkManager/dispatcher.d/ntpd')

   def policy(r):
      r.Requires('libnl:lib','%(sbindir)s/NetworkManager')
      r.Requires('wpa_supplicant:runtime','%(sbindir)s/NetworkManager')
