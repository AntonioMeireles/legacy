#
# Copyright (c) 2006-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Ruby(CPackageRecipe):
    name = 'ruby'
    version = '1.9.1_p0'

    buildRequires = [ 'db:devel', 'ncurses:devel', 'openssl:devel',
                      'readline:devel', 'zlib:devel', 'gdbm:devel',
                      'groff:runtime', 'libX11:devel',
                      'libtermcap:devel', 'tcl:devel', 'tk:devel'
                      ]

    def setup(r):
        r.macros.myver = r.version.replace('_', '-')
        r.macros.ruby_version = r.version.split('_')[0]
        r.addArchive('ftp://ftp.ruby-lang.org/pub/ruby/%(major_version)s/%(name)s-%(myver)s.tar.bz2')

        # Fix mkconfig.rb to set TOPDIR correctly on x86_64
        r.addPatch('ruby-mkconfig-topdir.patch')

        configOpts = '--enable-shared --enable-install-doc'
        r.macros.cppflags += ' -I%(krbprefix)s/include'
        r.macros.ldflags  += ' -L%(krbprefix)s/lib'

        # If we are on a x86-64 machine, make sure to include the
        # default 'non-flavored' directories to ruby's LOAD_PATH.
        # Note: we don't actually create these directories, we just want
        # to search them if they exist.
        if Arch.x86_64:
            extraLoadPath = ':'.join([ '/usr/lib/ruby/site_ruby/%(ruby_version)s', '/usr/lib/ruby/site_ruby'])
            configOpts += ' --with-search-path="%s"' % extraLoadPath

        r.Configure(configOpts)

        r.Make()
        r.Make('test')
        r.MakeInstall()

        # Don't whack the site_ruby directories
        r.ExcludeDirectories(exceptions=['site_ruby/', 
                                         '%(libdir)s/%(name)s/vendor_ruby/%(ruby_version)s/x86_64-linux',
                                         '%(libdir)s/%(name)s/%(ruby_version)s/rdoc/markup/simple_markup',
                                         '%(libdir)s/%(name)s/%(ruby_version)s/rdoc/generator/template'])

        r.ComponentSpec('runtime', 'site_ruby/')

        # Make sure all docs are put in the right component
        r.ComponentSpec('doc', '%(datadir)s/ri/')

        # Attempting to calculate ruby dependencies on some files is
        # problematic
        r.Requires(exceptions='.*/(debug|rdoc2latex|cgi_runner).rb')

        # we need this to avoid classhe swith the stuff in rPL
        for i in [ '%(libdir)s/%(name)s/%(ruby_version)s/rake.rb',
                   '%(libdir)s/%(name)s/%(ruby_version)s/rake/.*',
                   '%(bindir)s/rake',
                   '%(mandir)s/man1/rake.*']:
            r.PackageSpec('rake', i)

        for i in [ '%(libdir)s/%(name)s/%(ruby_version)s/*bygems.rb',
                   '%(libdir)s/%(name)s/%(ruby_version)s/rubygems/.*',
                   '%(bindir)s/gem',
                   '%(libdir)s/%(name)s/%(ruby_version)s/rake/gempackagetask.rb']:
            r.PackageSpec('rubygems', i)
