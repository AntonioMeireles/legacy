#
# Copyright (c) 2004-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class PulseAudio(RPMPackageRecipe,AutoPackageRecipe):
    name = 'pulseaudio'
    version  = '0.9.21'
    rpmRelease = '1.fc12'

    rpmPatches = [  ]
    rpmSources = [ 'default.pa-for-gdm']

    buildRequires = [ 'GConf:devel', 'ORBit2:devel', 'alsa-lib:devel', 'avahi:devel', 'hal:devel', 'libcap:devel', 'liboil:devel', 'libsamplerate:devel', 'libsndfile:devel', 'libtool:devel', 'm4:runtime', 'tcp_wrappers:devel', 'libatomic_ops:devel', 'libtool:runtime', 'autoconf:runtime','automake:runtime', 'gettext:devel', 'polkit:devel', 'bluez:devel', 'gcc-fortran:runtime', 'jack:devel', 'libICE:devel', 'libSM:devel', 'pkgconfig:devel', 'lirc:devel', 'gcc-c++:runtime', 'gdbm:devel', 'speex:devel', 'perl-XML-Parser:perl' ,'intltool:runtime', 'intltool:devel', 'gettext:runtime',  'libXext:devel', 'libXtst:devel', 'openssl:devel', 'udev:devel', 'inputproto:devel' ]

    def configure(r):
        # from pulse git 
        # core-util: introduce FD_CLOEXEC wrappers for open/socket/pipe/accept
        # Lennart Poettering [Fri, 30 Oct 2009 02:30:42 +0000 (03:30 +0100)]
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=9c1a98953f25aff7f11af80a073c9c46dee2438c')

        # use cloexec wrappers wherever applicable
        # Lennart Poettering [Fri, 30 Oct 2009 02:32:38 +0000 (03:32 +0100)]
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=65e7bc18a9a7b89e55b87a74ae47d45269b51847')
        # core-util: make sure to enable FD_CLOEXEC unconditionally to cope with kernels that...
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=a698ee3f52e9d61b378cb0dad2cfb1bcc31c708a')
        # core-util: introduce pa_fopen_cloexec()
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=752727a13d2d55439aefe618677f7e932acc9862')
        # tdb: use O_CLOEXEC if available
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=88b72958bebd1770e45a4af2dc9fec75aaf1f2de')
        # use pa_fopen_cloexec() where applicable
        r.addPatch('http://git.0pointer.de/?p=pulseaudio.git;a=patch;h=168be3830ae291dd819abebec813f76151487bb3')

        # doesn't work, but allows things to build ...
        # ... we disable udeev bellow anyway 
        r.addPatch('buildHack.patch')



        extraConfig = (' --disable-static --disable-rpath '
                       ' --with-system-user=pulse '
                       ' --with-system-group=pulse '
                       ' --with-access-group=pulse-access '
                       # our glibc has no inotify_init1() so we can't go thru
                       # udev / rtkit ...
                       # compat hal hooks are behaving for us
                       # ' --disable-hal ')
                       ' --disable-udev --enable-hal --enable-hal-compat ' )
        r.Configure(extraConfig)

    def make(r):
        r.Make('LIBTOOL=%(bindir)s/libtool')

        for x in [ 'liboss-util',
                   'module-oss',
                   'module-detect',
                   'module-pipe-sink',
                   'module-pipe-source',
                   'module-device-manager',]:
            r.Remove('%(libdir)s/pulse-%(version)s/modules/' + x + '.so')

        r.Remove('%(bindir)s/start-pulseaudio-kde')
        r.Remove('%(sysconfdir)s/xdg/autostart/pulseaudio-kde.desktop')

    def policy(r):
        r.Symlink('%(bindir)s/esdcompat','%(bindir)s/esd')
        r.UtilizeGroup('pulse', '%(bindir)s/pulseaudio')
        r.UtilizeGroup('pulse-access', '%(bindir)s/pulseaudio')
        r.UtilizeGroup('pulse-rt', '%(bindir)s/pulseaudio')

        r.Requires('esound:runtime', '%(bindir)s/esd')
        r.Requires('flac:lib', '%(bindir)s/pulseaudio')
        r.Requires('pavucontrol:runtime', '%(bindir)s/pulseaudio')
        r.Requires('rtkit:runtime', '%(bindir)s/pulseaudio')

        r.MakeDirs('%(localstatedir)s/lib/pulse')
        r.SetModes('%(localstatedir)s/lib/pulse', 0700)
        r.Ownership('pulse', 'pulse', '%(localstatedir)s/lib/pulse')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/lib/pulse')

        r.MakeDirs('%(localstatedir)s/lib/gdm/.pulse/')
        r.Install('default.pa-for-gdm', '%(localstatedir)s/lib/gdm/.pulse/default.pa')
        r.SetModes('%(localstatedir)s/lib/gdm/.pulse', 0700)
        r.Ownership('gdm', 'gdm', '%(localstatedir)s/lib/gdm/.pulse')

        r.SetModes('%(localstatedir)s/lib/gdm/.pulse', 0600)
        r.Ownership('gdm', 'gdm', '%(localstatedir)s/lib/gdm/.pulse/default.pa')


        r.SetModes('%(libexecdir)s/pulse/proximity-helper', 04755)
