Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=a99acc832de1104afaba02d7c2576fd9b9fd6422
Commit:     a99acc832de1104afaba02d7c2576fd9b9fd6422
Parent:     5ac7ec85bcc70ef605657fb2d1106d27ab3bd131
Author:     Jean Delvare <khali@linux-fr.org>
AuthorDate: Fri Mar 28 14:16:04 2008 -0700
Committer:  Linus Torvalds <torvalds@linux-foundation.org>
CommitDate: Fri Mar 28 14:45:22 2008 -0700

    pci: revert SMBus unhide on HP Compaq nx6110
    
    This reverts commit 3c0a654e390d00fef9d8faed758f5e1e8078adb5 and
    fixes kernel bug #10245:
    
    	http://bugzilla.kernel.org/show_bug.cgi?id=10245
    
    The HP Compaq nc6120 has the same PCI sub-device ID as the nx6110, and the
    SMBus is used by ACPI for thermal management on the nc6120, so Linux should
    not attach a native driver to it.  This means that this quirk is unsafe and
    has to be removed.
    
    I also added a comment to help developers realize that adding new IDs to this
    SMBus unhiding quirk table should be done only with great care, and in
    particular only after checking that ACPI is not making use of the SMBus.
    
    Signed-off-by: Jean Delvare <khali@linux-fr.org>
    Cc: Tomasz Koprowski <tomek@koprowski.org>
    Acked-by: Greg Kroah-Hartman <gregkh@suse.de>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 drivers/pci/quirks.c |   11 ++++++-----
 1 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index e9a333d..e887aa4 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -951,6 +951,12 @@ DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL,	PCI_DEVICE_ID_INTEL_82375,	quirk_e
  * accesses to the SMBus registers, with potentially bad effects. Thus you
  * should be very careful when adding new entries: if SMM is accessing the
  * Intel SMBus, this is a very good reason to leave it hidden.
+ *
+ * Likewise, many recent laptops use ACPI for thermal management. If the
+ * ACPI DSDT code accesses the SMBus, then Linux should not access it
+ * natively, and keeping the SMBus hidden is the right thing to do. If you
+ * are about to add an entry in the table below, please first disassemble
+ * the DSDT and double-check that there is no code accessing the SMBus.
  */
 static int asus_hides_smbus;
 
@@ -1028,11 +1034,6 @@ static void __init asus_hides_smbus_hostbridge(struct pci_dev *dev)
 			case 0x12bf: /* HP xw4100 */
 				asus_hides_smbus = 1;
 			}
-		else if (dev->device == PCI_DEVICE_ID_INTEL_82915GM_HB)
-			switch (dev->subsystem_device) {
-			case 0x099c: /* HP Compaq nx6110 */
-				asus_hides_smbus = 1;
-			}
        } else if (unlikely(dev->subsystem_vendor == PCI_VENDOR_ID_SAMSUNG)) {
                if (dev->device ==  PCI_DEVICE_ID_INTEL_82855PM_HB)
                        switch(dev->subsystem_device) {
