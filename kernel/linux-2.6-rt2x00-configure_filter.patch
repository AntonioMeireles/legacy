commit 133adf08266740cd886d544aa9fe80b9873cf699
Author: Ivo van Doorn <ivdoorn@gmail.com>
Date:   Fri Apr 4 00:01:43 2008 +0200

    rt2x00: Use lib->config_filter() during scheduled packet filter config
    
    Now rt2x00lib handles the initial configure_filter() command, we can
    directly call lib->config_filter() in scheduled context since the
    called function will no longer check if anything has changed (which is
    now handled in rt2x00lib as well).
    
    This fixes a endless loop with USB drivers where the config_filter
    command was scheduled time and time again without sending any command
    to the device.
    
    Signed-off-by: Ivo van Doorn <IvDoorn@gmail.com>
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/drivers/net/wireless/rt2x00/rt2x00dev.c b/drivers/net/wireless/rt2x00/rt2x00dev.c
index 50ea7bd..0361524 100644
--- a/drivers/net/wireless/rt2x00/rt2x00dev.c
+++ b/drivers/net/wireless/rt2x00/rt2x00dev.c
@@ -404,18 +404,8 @@ static void rt2x00lib_packetfilter_scheduled(struct work_struct *work)
 {
 	struct rt2x00_dev *rt2x00dev =
 	    container_of(work, struct rt2x00_dev, filter_work);
-	unsigned int filter = rt2x00dev->packet_filter;
 
-	/*
-	 * Since we had stored the filter inside rt2x00dev->packet_filter,
-	 * we should now clear that field. Otherwise the driver will
-	 * assume nothing has changed (*total_flags will be compared
-	 * to rt2x00dev->packet_filter to determine if any action is required).
-	 */
-	rt2x00dev->packet_filter = 0;
-
-	rt2x00dev->ops->hw->configure_filter(rt2x00dev->hw,
-					     filter, &filter, 0, NULL);
+	rt2x00dev->ops->lib->config_filter(rt2x00dev, rt2x00dev->packet_filter);
 }
 
 static void rt2x00lib_intf_scheduled_iter(void *data, u8 *mac,
