#
# Copyright (c) 2005-2009 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('kernelpackage')
class Kernel(KernelPackageRecipe):

    name = 'kernel'
    version = '2.6.27.18'

    def unpack(r):
        # VMware support
        r.addPatch('vmware_mptbase_workaround.patch')
        r.macros.ovmtoolsver = '2009.01.21-142982'
        r.buildvmmodules = not Use.xen
        r.addArchive('mirror://sourceforge/open-vm-tools/'
                     'open-vm-tools-%(ovmtoolsver)s.tar.gz',
                     dir='linux-%(version)s',
                     use=r.buildvmmodules)


    def build(r):
        # find libata modules
        r.Run('for i in $(find %(destdir)s | grep drivers\/ata); '
              'do if [ $(nm $i |grep --count ata_pci_remove_one) -ne 0 ]; '
              'then basename `echo $i` ;fi ; done | grep -v sata | '
              'grep -v pdc_adma | sort >> modules.libata')
        r.Install('modules.libata', '/lib/modules/%(kver)s/modules.libata')

        # Build VMware kernel modules
        if r.buildvmmodules:
            r.macros.kmoddir = '/lib/modules/%(kver)s/kernel/'
            for m in ('drivers/misc/vmci',
                      'drivers/misc/vmmemctl',
                      'drivers/misc/vmsync',
                      'drivers/net/vmxnet',
                      'drivers/net/vmxnet3',
                      'drivers/scsi/pvscsi',
                      'fs/vmblock',
                      'fs/vmhgfs'):
                module = os.path.basename(m)
                modsrc = 'open-vm-tools-%(ovmtoolsver)s/modules/linux/' + module + '/'
                r.Make('HEADER_DIR=%(builddir)s/include', dir=modsrc)
                kmod = module + '.ko'
                r.Install(modsrc + kmod, '%(kmoddir)s' + m + '/' + kmod)
