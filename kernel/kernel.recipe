#
# Copyright (c) 2005-2009 rPath, Inc.
#               2008-2012 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadInstalled('open-vm-tools')
loadSuperClass('kernelpackage')
class Kernel(KernelPackageRecipe):
    name = 'kernel'
    version = '3.2.2'
    realVersion = version
    fakedVersion = '2.6.42.2'
    longterm = False

    def unpackBase(r):
                r.addArchive(
                    'http://ftp.kernel.org/pub/linux/kernel'
                    '/v3.x/linux-%s.tar.bz2' % r.realVersion,
                    keyid='517D0F0E'
                    )

    def setMacros(r):
        r.version = r.fakedVersion
        r.macros.version = r.version
        KernelPackageRecipe.setMacros(r)

    def unpack(r):        
        # r.addPatch('stable-queue.patch')
        r.addPatch('force-version-2.6.patch')
        r.addPatch('linux-2.6-makefile-after_link.patch') 
        # r.addPatch('linux-2.6-compile-fixes.patch')
        # r.addPatch('linux-2.6-upstream-reverts.patch', extraArgs='-R')

        r.addPatch('arm-omap-dt-compat.patch')
        r.addPatch('arm-smsc-support-reading-mac-address-from-device-tree.patch')
        r.addPatch('arm-build-bug-on.patch')
        r.addPatch('arm-stmmac-mmc-core.patch')
        r.addPatch('arm-tegra-nvec-kconfig.patch')
        r.addPatch('taint-vbox.patch')
        r.addPatch('linux-2.6-32bit-mmap-exec-randomization.patch')
        r.addPatch('linux-2.6-i386-nx-emulation.patch')
        r.addPatch('jbd-jbd2-validate-sb-s_first-in-journal_get_superblo.patch')
        r.addPatch('linux-2.6-defaults-acpi-video.patch')
        r.addPatch('linux-2.6-acpi-video-dos.patch')
        r.addPatch('linux-2.6-acpi-debug-infinite-loop.patch')
        r.addPatch('acpi-ensure-thermal-limits-match-cpu-freq.patch')
        r.addPatch('acpi-sony-nonvs-blacklist.patch')
        r.addPatch('linux-2.6-defaults-aspm.patch')
        r.addPatch('linux-2.6-input-kill-stupid-messages.patch')
        r.addPatch('die-floppy-die.patch')
        r.addPatch('floppy-drop-disable_hlt-warning.patch')
        r.addPatch('linux-2.6.30-no-pcspkr-modalias.patch')
        r.addPatch('linux-2.6-serial-460800.patch')
        r.addPatch('linux-2.6-silence-noise.patch')
        r.addPatch('linux-2.6-silence-fbcon-logo.patch')
        r.addPatch('linux-2.6-crash-driver.patch')
        r.addPatch('linux-2.6-e1000-ich9-montevina.patch')
        r.addPatch('fix_xen_guest_on_old_EC2.patch')
        r.addPatch('drm-nouveau-updates.patch')
        # r.addPatch('drm-intel-next.patch')
        r.addPatch('drm-i915-fbc-stfu.patch')
        r.addPatch('linux-2.6-intel-iommu-igfx.patch')
        r.addPatch('linux-2.6-silence-acpi-blacklist.patch')
        r.addPatch('quite-apm.patch')
        r.addPatch('linux-2.6-v4l-dvb-fixes.patch')
        r.addPatch('linux-2.6-v4l-dvb-update.patch')
        r.addPatch('linux-2.6-v4l-dvb-experimental.patch')
        r.addPatch('disable-i8042-check-on-apple-mac.patch')
        r.addPatch('epoll-limit-paths.patch')
        r.addPatch('block-stray-block-put-after-teardown.patch')
        r.addPatch('dmar-disable-when-ricoh-multifunction.patch')
        r.addPatch('revert-efi-rtclock.patch')
        r.addPatch('efi-dont-map-boot-services-on-32bit.patch')
        r.addPatch('utrace.patch')
        r.addPatch('sysfs-msi-irq-per-device.patch')
        r.addPatch('hpsa-add-irqf-shared.patch')
        r.addPatch('pci-Rework-ASPM-disable-code.patch')
        r.addPatch('mac80211-fix-work-removal-on-deauth-request.patch')
        r.addPatch('nfs-client-freezer.patch')
        r.addPatch('alps.patch')
        r.addPatch('tpm_tis-delay-after-aborting-cmd.patch')
        r.addPatch('msi-irq-sysfs-warning.patch')
        r.addPatch('ext4-Support-check-none-nocheck-mount-options.patch')
        r.addPatch('ext4-Fix-error-handling-on-inode-bitmap-corruption.patch')
        r.addPatch('ext3-Fix-error-handling-on-inode-bitmap-corruption.patch')
        r.addPatch('KVM-x86-extend-struct-x86_emulate_ops-with-get_cpuid.patch')
        r.addPatch('KVM-x86-fix-missing-checks-in-syscall-emulation.patch')
        r.addPatch('rtl8192cu-Fix-WARNING-on-suspend-resume.patch')
        r.addPatch('procfs-parse-mount-options.patch')
        r.addPatch('procfs-add-hidepid-and-gid-mount-options.patch')
        r.addPatch('proc-fix-null-pointer-deref-in-proc_pid_permission.patch')
        r.addPatch('rcu-reintroduce-missing-calls.patch')
        r.addPatch('rds-Make-rds_sock_lock-BH-rather-than-IRQ-safe.patch')
        r.addPatch('fs-Inval-cache-for-parent-block-device-if-fsync-called-on-part.patch')
        r.addPatch('bcma-brcmsmac-compat.patch')
        r.addPatch('realtek_async_autopm.patch')

        # VMware support
        r.macros.ovmtoolsver = OpenVmTools.version.replace('_', '-')
        r.addArchive('http://downloads.sourceforge.net/open-vm-tools/'
                     'open-vm-tools-%(ovmtoolsver)s.tar.gz',
                     dir='linux-%s' % r.realVersion)

        # Add the cp437 version of the terminus font to the kernel and 
        # keep a backup of the original font for comparison purposes. 
        # -- /ermo
        r.addSource('terminus_font_8x16.c', dest = 'drivers/video/console/')
        r.Copy('drivers/video/console/font_8x16.c', 'drivers/video/console/font_8x16.c.org')
        # Comment out the line below to keep original VGA font.
        r.Copy('drivers/video/console/terminus_font_8x16.c', 'drivers/video/console/font_8x16.c')

    def addConfiguration(r):
        r.addSource('kernel-foresight-i686.config',
                    dest = 'configs/',
                    use=Arch.x86)
        r.addSource('kernel-foresight-x86_64.config',
                    dest = 'configs/',
                    use=Arch.x86_64)

        r.macros.cfgver = '%(targetarch)s'
        r.Copy('configs/*.config', '.config')

    def buildAtaModuleMap(r):
        pass

    def build(r):
        # Build VMware kernel modules
        r.macros.kmoddir = '/lib/modules/%(kver)s/kernel/'

        for m in ('drivers/misc/vmci',
                  'drivers/misc/vmsync',
                  'drivers/net/vmxnet',
                  'drivers/net/vsock',
                  'fs/vmblock',
                  'fs/vmhgfs'):
            module = os.path.basename(m)
            modsrc = 'open-vm-tools-%(ovmtoolsver)s/modules/linux/' + module + '/'
            r.Run('make -C %(builddir)s SUBDIRS=$PWD SRCROOT=$PWD/.'
                  ' MODULEBUILDDIR=%(builddir)s/open-vm-tools-%(ovmtoolsver)s/modules/linux'
                  ' OVT_SOURCE_DIR=%(builddir)s/open-vm-tools-%(ovmtoolsver)s',
                  ' VM_KBUILD=26 '
                  ' CC_OPTS=-DVMW_HAVE_EPOLL'
                  ' modules',
                  dir=modsrc)

            kmod = module + '.ko'
            r.Install(modsrc + kmod, '%(kmoddir)s' + m + '/' + kmod)

    def policy(r):
        # rm cruft
        r.Remove('/lib/modules/%(kver)s/source/open-vm-tools-%(ovmtoolsver)s/', recursive = True)
