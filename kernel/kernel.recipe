#
# Copyright (c) 2005-2009 rPath, Inc.
#               2008-2013 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.foresightlinux.org/licenses/mit-license/
#

loadSuperClass('kernelpackage')
class Kernel(KernelPackageRecipe):
    name = 'kernel'
    version = '3.10.17'
    kS = version.split('.')
    vMajor = kS[0]
    vMinor = kS[1]
    try:
        patchLevel = kS[2]
    except IndexError:
        patchLevel = '0'

    realVersion = version
    fakedVersion = '2.6.%d.%s' %(40+int(vMinor), patchLevel)
    longterm = True

    def unpackBase(r):
                r.addArchive(
                    'http://ftp.kernel.org/pub/linux/kernel'
                    '/v3.x/linux-%s.tar.bz2' % r.realVersion,
                    keyid='517D0F0E'
                    )

    def setMacros(r):
        print 'kver =', r.macros.kver
        r.version = r.fakedVersion
        r.macros.version = r.version
        KernelPackageRecipe.setMacros(r)
        print 'kver =', r.macros.kver
    def unpack(r):        
        r.addPatch('force-version-2.6.patch')

        r.addPatch('makefile-after_link.patch')
        # r.addPatch('compile-fixes.patch')
        # r.addPatch('upstream-reverts.patch')

        r.addPatch('taint-vbox.patch')
        r.addPatch('vmbugon-warnon.patch')
        r.addPatch('arm-export-read_current_timer.patch')
        r.addPatch('arm-lpae-ax88796.patch')
        r.addPatch('arm-omap-load-tfp410.patch')
        r.addPatch('arm-tegra-usb-no-reset-linux33.patch')
        r.addPatch('defaults-acpi-video.patch')
        r.addPatch('acpi-video-dos.patch')
        r.addPatch('acpi-debug-infinite-loop.patch')
        r.addPatch('acpi-sony-nonvs-blacklist.patch')
        r.addPatch('input-kill-stupid-messages.patch')
        r.addPatch('die-floppy-die.patch')
        r.addPatch('no-pcspkr-modalias.patch')
        r.addPatch('serial-460800.patch')
        r.addPatch('silence-noise.patch')
        r.addPatch('silence-fbcon-logo.patch')
        r.addPatch('crash-driver.patch')
        r.addPatch('devel-pekey-secure-boot-20130502.patch')
        # r.addPatch('drm-intel-next.patch')
        r.addPatch('drm-i915-dp-stfu.patch')
        r.addPatch('drm-i915-tv-detect-hush.patch')
        r.addPatch('silence-acpi-blacklist.patch')
        r.addPatch('v4l-dvb-fixes.patch')
        r.addPatch('v4l-dvb-update.patch')
        r.addPatch('v4l-dvb-experimental.patch')
        r.addPatch('fs-proc-devtree-remove_proc_entry.patch')
        r.addPatch('disable-i8042-check-on-apple-mac.patch')
        r.addPatch('lis3-improve-handling-of-null-rate.patch')
        r.addPatch('scsi-sd_revalidate_disk-prevent-NULL-ptr-deref.patch')
        r.addPatch('weird-root-dentry-name-debug.patch')
        r.addPatch('selinux-apply-different-permission-to-ptrace-child.patch')
        r.addPatch('ath9k_rx_dma_stop_check.patch')
        r.addPatch('fix-child-thread-introspection.patch')
        r.addPatch('intel_iommu-Downgrade-the-warning-if-enabling-irq-remapping-fails.patch')
        r.addPatch('KVM-x86-handle-idiv-overflow-at-kvm_write_tsc.patch')
        r.addPatch('HID-input-return-ENODATA-if-reading-battery-attrs-fails.patch')
        r.addPatch('bridge-only-expire-the-mdb-entry-when-query-is-received.patch')
        r.addPatch('bridge-send-query-as-soon-as-leave-is-received.patch')
        r.addPatch('bridge-timer-fix.patch')
        r.addPatch('bridge-do-not-call-setup_timer-multiple-times.patch')
        r.addPatch('iwl3945-better-skb-management-in-rx-path.patch')
        r.addPatch('iwl4965-better-skb-management-in-rx-path.patch')
        r.addPatch('HID-kye-Add-report-fixup-for-Genius-Gila-Gaming-mouse.patch')
        r.addPatch('Input-elantech-fix-for-newer-hardware-versions-v7.patch')
        r.addPatch('media-cx23885-Fix-TeVii-S471-regression-since-introduction-of-ts2020.patch')
        r.addPatch('ansi_cprng-Fix-off-by-one-error-in-non-block-size-request.patch')
        r.addPatch('0001-HID-kye-Add-report-fixup-for-Genius-Gx-Imperator-Key.patch')
        r.addPatch('bonding-driver-alb-learning.patch')
        r.addPatch('elevator-Fix-a-race-in-elevator-switching-and-md.patch')
        r.addPatch('elevator-acquire-q-sysfs_lock-in-elevator_change.patch')
        r.addPatch('HID-Revert-Revert-HID-Fix-logitech-dj-missing-Unifying-device-issue.patch')

        # to build with older headers
        r.addPatch('turbostat-makefile.diff')
 
        # https://lkml.org/lkml/2012/7/6/198
        r.addPatch('upstreamable-tools_power-buildfixes.patch')

        # Add the cp437 version of the terminus font to the kernel and 
        # keep a backup of the original font for comparison purposes. 
        # -- /ermo
        r.addSource('terminus_font_8x16.c', dest = 'drivers/video/console/')
        r.Copy('drivers/video/console/font_8x16.c', 'drivers/video/console/font_8x16.c.org')
        # Comment out the line below to keep original VGA font.
        r.Copy('drivers/video/console/terminus_font_8x16.c', 'drivers/video/console/font_8x16.c')

    def addConfiguration(r):
        r.addSource('kernel-foresight-i686.config',
                    dest = 'configs/',
                    use=Arch.x86)
        r.addSource('kernel-foresight-x86_64.config',
                    dest = 'configs/',
                    use=Arch.x86_64)

        r.Copy('configs/*.config', '.config')

        for st in [ 'CONFIG_SECURITY_SELINUX',
                    'CONFIG_SECURITY_SELINUX_BOOTPARAM',
                    'CONFIG_SECURITY_SELINUX_DISABLE',
                    'CONFIG_SECURITY_SELINUX_DEVELOP',
                    'CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE',
                    'CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE',
                    'CONFIG_SECURITY_SELINUX_AVC_STATS', ]: 
            r.Replace('%s=.*' % st,
                      '# %s is not set' % st,
                      '.config') 
        # bellow _may_ needed so that broadcom wl
        # fully behaves with WPA auth...
        # or st in [ 'CONFIG_HOSTAP', ]:
        # r.Replace('.*%s.*' % st,
        #           '%s=y' % st, '.config')
        #
        for st in [ 'CONFIG_ACPI_PROCFS_POWER',
                    'CONFIG_ACPI_PROC_EVENT', ]:
            r.Replace('.*%s.*' % st,
                      '%s=y' % st, '.config')
        # 
        for st in [ 'CONFIG_MODULE_SIG',
                    # above disables modules signing
        ]: 
            r.Replace('%s=.*' % st,
                      '# %s is not set' % st,
                      '.config') 
        # enable intel's PSTATE tricks.
        # this is an edgy kernel after all
        for st in [ 'CONFIG_X86_INTEL_PSTATE', ]:
            r.Replace('.*%s.*' % st,
                      '%s=y' % st, '.config')
        
    def buildAtaModuleMap(r):
        pass

    def build(r):
        pass

    def vmwareComponent(r):
        r.macros.ovmtoolsver = 'foo'
