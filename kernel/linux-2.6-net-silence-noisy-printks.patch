These messages are trivial to trigger when running stress tests
like isic, and add no real value afaict.  Make them go away
instead of filling up logs pointlessly.

Signed-off-by: Dave Jones <davej@redhat.com>

--- linux-2.6.21.noarch/net/ipv6/netfilter/ip6table_filter.c~	2007-05-27 19:09:07.000000000 -0400
+++ linux-2.6.21.noarch/net/ipv6/netfilter/ip6table_filter.c	2007-05-27 19:09:30.000000000 -0400
@@ -79,8 +79,6 @@ ip6t_local_out_hook(unsigned int hook,
 	/* root is playing with raw sockets. */
 	if ((*pskb)->len < sizeof(struct iphdr)
 	    || ip_hdrlen(*pskb) < sizeof(struct iphdr)) {
-		if (net_ratelimit())
-			printk("ip6t_hook: happy cracking.\n");
 		return NF_ACCEPT;
 	}
 #endif
--- linux-2.6.21.noarch/net/ipv6/netfilter/ip6table_mangle.c~	2007-05-27 19:09:35.000000000 -0400
+++ linux-2.6.21.noarch/net/ipv6/netfilter/ip6table_mangle.c	2007-05-27 19:09:41.000000000 -0400
@@ -99,8 +99,6 @@ ip6t_local_hook(unsigned int hook,
 	/* root is playing with raw sockets. */
 	if ((*pskb)->len < sizeof(struct iphdr)
 	    || ip_hdrlen(*pskb) < sizeof(struct iphdr)) {
-		if (net_ratelimit())
-			printk("ip6t_hook: happy cracking.\n");
 		return NF_ACCEPT;
 	}
 #endif
--- linux-2.6.21.noarch/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c~	2007-05-27 19:09:45.000000000 -0400
+++ linux-2.6.21.noarch/net/ipv4/netfilter/nf_conntrack_l3proto_ipv4.c	2007-05-27 19:09:49.000000000 -0400
@@ -189,8 +189,6 @@ static unsigned int ipv4_conntrack_local
 	/* root is playing with raw sockets. */
 	if ((*pskb)->len < sizeof(struct iphdr)
 	    || ip_hdrlen(*pskb) < sizeof(struct iphdr)) {
-		if (net_ratelimit())
-			printk("ipt_hook: happy cracking.\n");
 		return NF_ACCEPT;
 	}
 	return nf_conntrack_in(PF_INET, hooknum, pskb);


Remove noisy, easy to trigger (as user even, with sfuzz) printk.

Signed-off-by: Dave Jones <davej@redhat.com>

--- linux-2.6.20.noarch/net/irda/af_irda.c~	2007-04-19 19:07:21.000000000 -0400
+++ linux-2.6.20.noarch/net/irda/af_irda.c	2007-04-19 19:07:28.000000000 -0400
@@ -1143,8 +1143,6 @@ static int irda_create(struct socket *so
 			self->max_sdu_size_rx = TTP_SAR_UNBOUND;
 			break;
 		default:
-			IRDA_ERROR("%s: protocol not supported!\n",
-				   __FUNCTION__);
 			return -ESOCKTNOSUPPORT;
 		}
 		break;
