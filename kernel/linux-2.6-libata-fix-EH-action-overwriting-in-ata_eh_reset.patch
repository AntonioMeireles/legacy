Gitweb:     http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=a674050e068a2919908730279f0b731ae6d2e005
Commit:     a674050e068a2919908730279f0b731ae6d2e005
Parent:     eb3a55a9f43f0f8e770c2abf70e65bdda2d5ff1e
Author:     Tejun Heo <tj@kernel.org>
AuthorDate: Thu Jul 31 16:07:04 2008 +0900
Committer:  Jeff Garzik <jgarzik@redhat.com>
CommitDate: Fri Aug 22 02:19:39 2008 -0400

    libata: fix EH action overwriting in ata_eh_reset()
    
    ehc->i.action got accidentally overwritten to ATA_EH_HARD/SOFTRESET in
    ata_eh_reset().  The original intention was to clear reset action
    which wasn't selected.  This can cause unexpected behavior when other
    EH actions are scheduled together with reset.  Fix it.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Jeff Garzik <jgarzik@redhat.com>
---
 drivers/ata/libata-eh.c |    4 ++--
 1 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/ata/libata-eh.c b/drivers/ata/libata-eh.c
index a570ca4..c98909b 100644
--- a/drivers/ata/libata-eh.c
+++ b/drivers/ata/libata-eh.c
@@ -2251,10 +2251,10 @@ int ata_eh_reset(struct ata_link *link, int classify,
 	ehc->i.action &= ~ATA_EH_RESET;
 	if (hardreset) {
 		reset = hardreset;
-		ehc->i.action = ATA_EH_HARDRESET;
+		ehc->i.action |= ATA_EH_HARDRESET;
 	} else if (softreset) {
 		reset = softreset;
-		ehc->i.action = ATA_EH_SOFTRESET;
+		ehc->i.action |= ATA_EH_SOFTRESET;
 	}
 
 	if (prereset) {
