class Dracut(PackageRecipe):
    name = 'dracut'
    version = '008'

    buildRequires = [ 'docbook-xsl', 'docbook-dtds', 'libxslt', 'make:runtime' ]

    def setup(r):
        r.addGitSnapshot('git://git.kernel.org/pub/scm/boot/dracut/dracut.git', tag='008')
        r.Make('sysconfdir=/etc sbindir=%(essentialsbindir)s')
        r.MakeInstall('sysconfdir=/etc sbindir=%(essentialsbindir)s')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/dracut.conf.d')
        r.Create('%(localstatedir)s/log/dracut.log', contents='')
        r.InitialContents('%(localstatedir)s/log/dracut.log')

        r.PackageSpec('dracut-fips', '%(datadir)s/dracut/modules.d/01fips/.*')
        for module in [ '40network', '95fcoe', '95iscsi', 
                        '95nbd', '45ifcfg', '95znet' ]:
            r.PackageSpec('dracut-network', '%(datadir)s/dracut/modules.d/' + module + '/.*' )

        r.PackageSpec('dracut-tools', '%(mandir)s/man8/dracut-gencmdline.8.*',
                      '%(mandir)s/man8/dracut-catimages.8.*',
                      '%(essentialsbindir)s/dracut-gencmdline'
                      '%(essentialsbindir)s/dracut-catimages')
        r.MakeDirs('%(localstatedir)s/lib/dracut/overlay')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/lib/dracut/overlay')
        r.PackageSpec('dracut-tools', '%(localstatedir)s/lib/dracut/overlay')
        r.MakeDirs('/boot/dracut')
        r.ExcludeDirectories(exceptions='/boot/dracut')
        r.PackageSpec('dracut-tools', '/boot/dracut') 
