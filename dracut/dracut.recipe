class Dracut(PackageRecipe):
    name = 'dracut'
    version = '008'

    buildRequires = [ 'docbook-xsl', 'docbook-dtds', 'libxslt', 'make:runtime' ]

    def setup(r):
        r.addGitSnapshot('git://git.kernel.org/pub/scm/boot/dracut/dracut.git', tag='008')
        r.addSource('kernel.tagdescription', macros=True, dest='%(tagdescriptiondir)s/kernel')
        r.addSource('kernel.taghandler', macros=True, dest='%(taghandlerdir)s/kernel', mode=0755)
        if Use.xen and Use.domU:
            r.Replace('run_bommy add \$version \$pre \$initrd \$xenmultiboot',
                      'run_bommy add $version $pre $initrd',
                      '%(taghandlerdir)s/kernel')
 
        r.Make('sysconfdir=/etc sbindir=%(essentialsbindir)s')
        r.MakeInstall('sysconfdir=/etc sbindir=%(essentialsbindir)s')
        r.ExcludeDirectories(exceptions='%(sysconfdir)s/dracut.conf.d')
        r.Create('%(localstatedir)s/log/dracut.log', contents='')
        r.InitialContents('%(localstatedir)s/log/dracut.log')

        for req in ('%(essentialbindir)s/awk', '%(essentialsbindir)s/dmsetup',
                    '%(essentialsbindir)s/ip', '%(essentialsbindir)s/modprobe',
                    '%(essentialsbindir)s/lvm',
                    '%(essentialsbindir)s/ldconfig', '/dev/null',
                    '%(bindir)s/head', '%(bindir)s/tail',
                    '%(essentialbindir)s/cat',
                    '%(essentialbindir)s/chmod',
                    '%(bindir)s/cmp',
                    #'%(bindir)s/strip', # RPL-2413
                    '%(bindir)s/wc',
                    '%(bindir)s/bzgrep',
                    '%(bindir)s/bzip2',
                    '%(bindir)s/tr',
                    '%(bindir)s/find',
                    '%(essentialbindir)s/cp',
                    '%(essentialbindir)s/cpio',
                    '%(essentialbindir)s/df',
                    '%(essentialbindir)s/egrep',
                    '%(essentialbindir)s/grep',
                    '%(essentialbindir)s/zgrep',
                    '%(essentialbindir)s/gzip',
                    '%(essentialbindir)s/ln',
                    '%(essentialbindir)s/mkdir',
                    '%(essentialbindir)s/mknod',
                    '%(essentialbindir)s/mktemp',
                    '%(essentialbindir)s/rm',
                    '%(essentialbindir)s/mv',
                    '%(essentialbindir)s/sed',
                    '%(essentialbindir)s/cut',
                    '%(essentialbindir)s/basename',
                    '%(essentialbindir)s/sort',
                    '%(essentialbindir)s/loadkeys',
                    '%(essentialbindir)s/ash.static',
                    '%(essentialbindir)s/ls',
                    '%(essentialsbindir)s/ext3flush',
                    '%(essentialsbindir)s/lvm',
                    '%(essentialsbindir)s/modprobe',
                    '%(essentialsbindir)s/bootman',
                    '%(essentialsbindir)s/bommy',
                    '%(essentialsbindir)s/modinfo',
                    '%(essentialsbindir)s/depmod',
                    'initscripts:runtime',
                    'plymouth:runtime'
                    ):

            r.Requires(req, '%(essentialsbindir)s/dracut')

        for req in ('%(essentialsbindir)s/bootman',
                    '%(essentialsbindir)s/bommy',
                    '%(bindir)s/grubtobootman',
                    '%(bindir)s/wc',
                    '%(essentialsbindir)s/ext3flush',
                    '%(essentialbindir)s/awk',
                    'bootman:runtime(bommy-get)',):
            r.Requires(req, '%(taghandlerdir)s/kernel')
        for rm in ['98selinux', '10rpmversion']:
            r.Remove('%(datadir)s/dracut/modules.d/' + rm, recursive=True)

        r.PackageSpec('dracut-fips', '%(datadir)s/dracut/modules.d/01fips/.*')
        for module in [ '40network', '95fcoe', '95iscsi', 
                        '95nbd', '45ifcfg', '95znet' ]:
            r.PackageSpec('dracut-network', '%(datadir)s/dracut/modules.d/' + module + '/.*' )

        r.PackageSpec('dracut-tools', '%(mandir)s/man8/dracut-gencmdline.8.*',
                      '%(mandir)s/man8/dracut-catimages.8.*',
                      '%(essentialsbindir)s/dracut-gencmdline'
                      '%(essentialsbindir)s/dracut-catimages')
        r.MakeDirs('%(localstatedir)s/lib/dracut/overlay')
        r.ExcludeDirectories(exceptions='%(localstatedir)s/lib/dracut/overlay')
        r.PackageSpec('dracut-tools', '%(localstatedir)s/lib/dracut/overlay')
        r.MakeDirs('/boot/dracut')
        r.ExcludeDirectories(exceptions='/boot/dracut')
        r.PackageSpec('dracut-tools', '/boot/dracut') 
