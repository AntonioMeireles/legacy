#
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('jvmpackage')
class IcedTea(JVMPackageRecipe, CPackageRecipe):

    name = 'icedtea'
    version = '1.6.0.0_b16_1.4+r1567'

    vendor = 'icedtea'
    release = '1.6.0'

    buildRequires = [
        'alsa-lib:devel', 'atk:devel', 'autoconf:runtime', 'automake:runtime',
        'cairo:devel', 'cups:devel', 'dbus-glib:devel', 'dbus-glib:devellib',
        'dbus:devel', 'docbook-dtds:data', 'expat:devel', 'file:runtime',
        'findutils:runtime', 'fontconfig:devel', 'freetype:devel',
        'gcc-c++:runtime', 'gcc:runtime', 'gettext:runtime', 'giflib:devel',
        'glib:devel', 'glib:runtime', 'glibc:devel', 'glitz:devel',
        'gnome-common:devel', 'gnome-common:runtime', 'gtk:devel', 'gtk:devel',
        'intltool:devel', 'intltool:runtime', 'libdmx:devel', 'libgcc:devellib',
        'libICE:devel', 'libjpeg:devel', 'libpng:devel', 'libSM:devel',
        'libstdc++:devel', 'libtool:devel', 'libtool:runtime', 'libX11:devel',
        'libX11:devel', 'libXau:devel', 'libxcb:devel', 'libXdmcp:devel',
        'libXext:devel', 'libXi:devel', 'libXinerama:devellib', 'libXp:devel',
        'libXrender:devel', 'libxslt:runtime', 'libXt:devel', 'libXtst:devel',
        'nspr:devel', 'nspr:devel', 'openmotif:devel', 'pango:devel',
        'pkgconfig:devel', 'procps:runtime', 'unzip:runtime',
        'util-linux:runtime', 'wget:runtime', 'which:runtime', 'xcb-util:devel',
        'xulrunner:devel', 'xulrunner:lib', 'zip:runtime', 'zlib:devel',
        'zlib:devel'
    ]

    def setup(r):

        r.JVMInit()
        r.JVMProfile()

        # For bootstrap
        fedora_version = '1.6.0.0-9.b14.fc10'
        fedora_site = 'http://download.fedora.redhat.com/pub/fedora/linux/updates/10'

        ant = 'apache-ant-1.7.1'
        ant_site = 'http://www.apache.org/dist/ant/binaries/'

        xalan = 'xalan-j_2_7_1'
        xalan_site = 'http://www.apache.org/dist/xml/xalan-j/binaries/'

        # For cooking
        openjdk_snapshot = r.version.split('_')[1]
        openjdk_date = '24_apr_2009'
        openjdk_dist = (
            'http://download.java.net/openjdk'
            '/jdk6/promoted/'+openjdk_snapshot+'/openjdk-6-src-'+openjdk_snapshot+'-'+openjdk_date+'.tar.gz'
        )

        # To make local cook with installed jre possible
        r.Environment('JAVA_HOME', '')

        icedtea_version=r.version.split('+')[1][1:]
        r.addMercurialSnapshot('http://icedtea.classpath.org/hg/icedtea6', tag=icedtea_version)

        r.Replace('wget', 'false', 'configure.ac')

        # hotspot.map
        r.macros.hotspot_changeset = '25a020f13592'
        r.addSource(
            'http://hg.openjdk.java.net/hsx/hsx14/master/archive/%(hotspot_changeset)s.tar.gz',
            dest='hotspot.tar.gz'
        )

        r.addSource(openjdk_dist)

        r.addArchive(ant_site+ant+'-bin.tar.gz', dir='%(maindir)s')
        r.addArchive(xalan_site+xalan+'-bin.zip', dir='%(maindir)s')

        r.Run('autoreconf -fi')

        jarch = ('x86_64','i386')[Arch.x86==True]
        for arch in ('i386', 'x86_64'):
            for p in ('openjdk', 'openjdk-devel'):

                archive_name = 'java-'+r.release+'-'+p
                archive_version = fedora_version

                archive_full_name = \
                    archive_name+'-'+archive_version+'.'+arch+'.rpm'

                rpm = fedora_site+'/'+arch+'/'+archive_full_name

                r.addArchive(rpm, dir='%(maindir)s/openjdk-prebuilt', use=(arch == jarch))

        openjdk_home = '%(builddir)s/openjdk-prebuilt/usr/lib/jvm/java-1.6.0-openjdk'
        if Arch.x86_64:
            openjdk_home += '.x86_64'

        bootstrap_path='PATH=$PATH:'+openjdk_home+'/bin:'+openjdk_home+'/jre/bin:%(builddir)s/'+ant+'/bin'

        conf = (
            '--with-openjdk '
            '--without-rhino '
            '--with-ant-home=%(builddir)s/'+ant+' '
            '--with-xalan2-jar=%(builddir)s/'+xalan+'/xalan.jar '
            '--with-xalan2-serializer-jar=%(builddir)s/'+xalan+'/serializer.jar '
            '--with-xerces2-jar=%(builddir)s/'+xalan+'/xercesImpl.jar '
            '--with-openjdk-home='+openjdk_home
        )

        # prevent random breakage, at least in x86_64
        r.Environment('JAVA_OPTS', '-XX:-UseGCOverheadLimit')

        # corrects very subtle breakage as our sed in not in chroot's PATH
        # this breaks silently %(builddir)s/openjdk/jdk/make/java/nio/addNotices.sh
        # which b0rks everything generated by genExceptions.sh in same dir
        r.Environment('SED', '/bin/sed')

        # addNotices.sh  genBuffer.sh  genCharsetProvider.sh  genCoder.sh and
        # genExceptions.sh in the same location as above expect a SHELL env
        # var that is  not present nor passedby the Makefile ...
        r.Environment('SHELL', '/bin/sh')

        r.Configure(conf, preConfigure=bootstrap_path)

        # We don't want to use system ant
        r.Replace('patches/icedtea-ant.patch', '','Makefile')
        r.Replace('patches/icedtea-javac-debuginfo.patch', '','Makefile')

        r.Make(preMake=bootstrap_path)

        build_root = 'openjdk/build/linux-%s' \
                % ('i586', 'amd64')[Arch.x86_64==True]

        r.Install(build_root+'/j2sdk-image/*', '%(jdkhome)s/')

        r.Symlink(
            '%(jrelibdir)s/IcedTeaPlugin.so',
            '%(libdir)s/mozilla/plugins/libjavaplugin.so',
        )

        r.JVMPolicy()

        # icedteaplugin
        # FIXME: keep old naming scheme for now. getting new one once we're sure
        # of no side effects
        r.ComponentSpec('%(name)s-gcjwebplugin:runtime', '%(libdir)s/mozilla/')
        # r.ComponentSpec('%(name)s-icedteaplugin:runtime', '%(libdir)s/mozilla/')
        r.DanglingSymlinks(exceptions='%(libdir)s/mozilla/plugins/libjavaplugin.so')

