#!/bin/sh
#
# Startup script for the DNS caching server
#
# chkconfig: 2345 79 01
# description: This script starts your DNS caching server
# processname: dnsmasq
# pidfile: /var/run/dnsmasq.pid

# Source function library.
. /etc/init.d/functions

function setup_dhclient_enter_hooks() {
    if [ -f /etc/dhclient-enter-hooks ]; then
        . /etc/dhclient-enter-hooks
        cp /etc/resolv.conf /etc/resolv.conf.dnsmasq
        cp /etc/dhclient-enter-hooks /etc/dhclient-enter-hooks.dnsmasq
        sed -e 's/resolv\.conf$/resolv.conf.dnsmasq/' /etc/dhclient-enter-hooks.dnsmasq > /etc/dhclient-enter-hooks
        sed -e 's/\(nameserver[ tab]\+\)[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$/\1127.0.0.1/' /etc/resolv.conf.dnsmasq > /etc/resolv.conf
    fi
}

function teardown_dhclient_enter_hooks() {
    if [ -f /etc/dhclient-enter-hooks -a -f /etc/dhclient-enter-hooks.dnsmasq ]; then
        if [ -f /etc/resolv.conf.dnsmasq ]; then
            mv /etc/resolv.conf.dnsmasq /etc/resolv.conf
        fi
	if [ -f /etc/dhclient-enter-hooks.dnsmasq ]; then
            #Do the sed command to ensure we have a good dhclient-enter-hooks
            sed -e 's/resolv\.conf\.dnsmasq$/resolv.conf/' /etc/dhclient-enter-hooks.dnsmasq > /etc/dhclient-enter-hooks
	    rm /etc/dhclient-enter-hooks.dnsmasq
	fi
    fi
}

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

dnsmasq=/usr/sbin/dnsmasq
[ -f $dnsmasq ] || exit 0

# change this line if you want dnsmasq to serve an MX record for 
# the host it is running on. 
MAILHOSTNAME=""
# change this line if you want dns to get its upstream servers from
# somewhere other that /etc/resolv.conf 
RESOLV_CONF="/etc/resolv.conf.dnsmasq"
# change this if you want dnsmasq to cache any "hostname" or "client-hostname" from
# a dhcpd's lease file
DHCP_LEASE="/var/lib/dhcp/dhcpd.leases"
DOMAIN_SUFFIX=`dnsdomainname`

OPTIONS=""

if [ ! -z "${MAILHOSTNAME}" ]; then
  OPTIONS="$OPTIONS -m $MAILHOSTNAME"
fi

if [ ! -z "${RESOLV_CONF}" ]; then
  OPTIONS="$OPTIONS -r $RESOLV_CONF"
fi

if [ ! -z "${DHCP_LEASE}" ]; then
  OPTIONS="$OPTIONS -l $DHCP_LEASE"
fi

if [ ! -z "${DOMAIN_SUFFIX}" ]; then
  OPTIONS="$OPTIONS -s $DOMAIN_SUFFIX"
fi

RETVAL=0

# See how we were called.
case "$1" in
  start)
        echo -n "Starting dnsmasq: "
        #Teardown in case of unclean shutdown
        teardown_dhclient_enter_hooks
        setup_dhclient_enter_hooks
        daemon $dnsmasq $OPTIONS
	RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/dnsmasq
        ;;
  stop)
        if test "x`pidof dnsmasq`" != x; then
            echo -n "Shutting down dnsmasq: "
            teardown_dhclient_enter_hooks
            killproc dnsmasq
        fi
	RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/dnsmasq /var/run/dnsmasq.pid
        ;;
  status)
	status dnsmasq
	RETVAL=$?
	;;
  restart|reload)
	$0 stop
	$0 start
	RETVAL=$?
	;;
  condrestart)
	    if test "x`/sbin/pidof dnsmasq`" != x; then
		$0 stop
		$0 start
		RETVAL=$?
	    fi
	    ;;
  *)
        echo "Usage: $0 {start|stop|restart|reload|condrestart|status}"
        exit 1
esac

exit $RETVAL

