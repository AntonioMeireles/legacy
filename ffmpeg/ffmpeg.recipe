#
# Copyright (c) 2007-2010 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class FFMpeg(AutoPackageRecipe):
    name = 'ffmpeg'
    version = '0.6.1'

    buildRequires = [
        'a52dec:devel', 'faac:devel', 'faad2:devel', 'freetype:devel',
        'gsm:devel', 'imlib2:devel', 'lame:devel', 'libogg:devel',
        'libtheora:devel', 'libva:devel', 'libvdpau:devel', 'libvorbis:devel', 'SDL:devel', 'x264:devel',
        'xvidcore:devel', 'zlib:devel', 'pkgconfig:devel', 'alsa-lib:devel', 'bzip2:devel', 'jack:devel',
        'libX11:devel', 'libXext:devel', 'libXfixes:devel', 'libdc1394:devel', 'liboil:devel', 
        'libraw1394:devel', 'schroedinger:devel', 'speex:devel', 'openjpeg:devel', 'libvpx:devel',
        'git:runtime',
    ]

    def unpack(r):
        if '+' in r.version:
            rev = r.version.split('+')[1][1:]
            r.addSvnSnapshot('svn://svn.mplayerhq.hu/ffmpeg/trunk', revision=rev)
        else:
            r.addArchive('http://www.ffmpeg.org/releases/')

    def configure(r):
        config = ( ' --prefix=%(prefix)s'
                   ' --disable-stripping'
                   ' --disable-debug'
                   
                   ' --enable-gpl'
                   # ' --enable-version3'
                   ' --enable-avfilter'

                   ' --enable-swscale'
                   ' --enable-shared'
                   ' --enable-postproc'
                   ' --enable-pthreads'
                   ' --enable-libdc1394'
                   ' --enable-libvorbis'
                   ' --enable-libgsm'
                   ' --enable-libfaac'
                   ' --enable-libfaad'
                   #' --enable-libamr-nb'
                   #' --enable-libamr-wb'
                   ' --enable-libtheora'
                   ' --enable-libmp3lame'
                   ' --enable-libopenjpeg'
                   ' --enable-libspeex'
                   ' --enable-libschroedinger'
                   ' --enable-libx264'
                   ' --enable-libxvid'
                   ' --enable-nonfree'
                   ' --enable-x11grab'
                   ' --enable-libvpx'
                   ' --enable-vdpau'
                   ' --enable-vaapi'
                   ' --extra-cflags=\"%(cflags)s\"' )
        if Arch.x86:
            config += ' --cpu=%(target)s'
        if Arch.x86 or Arch .x86_64:
            config += ' --enable-runtime-cpudetect'


        r.ManualConfigure(config)
        
