#
# Copyright (c) 2010 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('gnomepackage')
class Shotwell(GnomePackageRecipe,CPackageRecipe):
    name = 'shotwell'
    version = '0.6.1'
 
    buildRequires = [
            'GConf:devel', 
            'WebKit:devel', 
            'atk:devel', 
            'cairo:devel', 
            'dbus-glib:devel', 
            'dbus:devel', 
            'desktop-file-utils:runtime', 
            'fontconfig:devel', 
            'freetype:devel', 
            'glib:devel', 
            'gtk:devel', 
            'gtk:runtime', 
            'libexif:devel', 
            'libgee:devel', 
            'libgphoto2:devel', 
            'libsoup:devel', 
            'libusb:devel', 
            'libxml2:devel', 
            'pango:devel', 
            'sqlite:devel', 
            'udev:devel', 
            'unique:devel', 
            'vala:runtime', 
            'pkgconfig:devel', 
            'gettext:runtime', 
            'GConf:runtime', 
            'exiv2:devel', 
            'gexiv2:devel', 
            'libstdc++:devel',
            'libraw:devel',
                 ]
 
    def setup(r):
        r.addArchive('http://www.yorba.org/download/shotwell/0.6/shotwell-%(version)s.tar.bz2')
        #r.addSvnSnapsehot('svn://svn.yorba.org/shotwell/trunk', revision = r.revision)
        # FIXME - commit fix upstream
        # we are now in the 2nd decade of the 21th century. 64 bit standard
        # should be supported out of the box...
        r.Replace('LIB_DIRS=/usr/lib:', 'LIB_DIRS=%(lib)s:', 'libraw-config')
        r.Configure('--prefix=%(prefix)s --with-gconf-schema-file-dir=%(datadir)s/gconf/schemas '
                    ' --disable-schemas-install '
                    ' --disable-desktop-update '
                    ' --disable-icon-update '
                    # script to detect existing libs brain-damaged
                    # skipping it makes things to behave
                    ' --assume-pkgs '
                    )

        r.Replace('^CFLAGS\ =.*$', 'CFLAGS=%(optflags)s', 'Makefile')
        r.Make()
        r.MakeInstall()

