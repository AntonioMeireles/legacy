===================================================================
RCS file: /spx/cvs/anaconda/iw/partition_gui.py,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -r1.1.1.3 -r1.2
--- anaconda/iw/partition_gui.py	2004/09/01 19:41:25	1.1.1.3
+++ anaconda/iw/partition_gui.py	2005/03/18 18:00:22	1.2
@@ -16,7 +16,7 @@
 
 import gobject
 import gtk
-import gnome.canvas
+import gnomecanvas
 import pango
 import autopart
 import gui
@@ -180,10 +180,10 @@
         self.editCb = editCb
         pgroup = parent.getGroup()
 
-        self.group = pgroup.add(gnome.canvas.CanvasGroup)
-        self.box = self.group.add(gnome.canvas.CanvasRect)
+        self.group = pgroup.add(gnomecanvas.CanvasGroup)
+        self.box = self.group.add(gnomecanvas.CanvasRect)
         self.group.connect("event", self.eventHandler)
-        self.text = self.group.add(gnome.canvas.CanvasText,
+        self.text = self.group.add(gnomecanvas.CanvasText,
                                     font="helvetica", size_points=8)
         self.update()
 
@@ -204,7 +204,7 @@
         else:
             width = CANVAS_WIDTH_640
         
-        group.add(gnome.canvas.CanvasRect, x1=0.0, y1=10.0, x2=width,
+        group.add(gnomecanvas.CanvasRect, x1=0.0, y1=10.0, x2=width,
                   y2=STRIPE_HEIGHT, fill_color='green',
                   outline_color='grey71', width_units=1.0)
         group.lower_to_bottom()
@@ -255,7 +255,7 @@
 
 class DiskStripeGraph:
     def __init__(self, tree, editCb):
-        self.canvas = gnome.canvas.Canvas()
+        self.canvas = gnomecanvas.Canvas()
         self.diskStripes = []
         self.textlabels = []
         self.tree = tree
@@ -299,7 +299,7 @@
     def add(self, drive, disk):
 #        yoff = len(self.diskStripes) * (STRIPE_HEIGHT + 5)
         yoff = self.next_ypos
-        text = self.canvas.root().add(gnome.canvas.CanvasText,
+        text = self.canvas.root().add(gnomecanvas.CanvasText,
                                       x=0.0, y=yoff,
                                       font="sans",
                                       size_points=9)
@@ -323,7 +323,7 @@
         (xxx1, yyy1, xxx2, yyy2) =  text.get_bounds()
         textheight = yyy2 - yyy1
         self.textlabels.append(text)
-        group = self.canvas.root().add(gnome.canvas.CanvasGroup,
+        group = self.canvas.root().add(gnomecanvas.CanvasGroup,
                                        x=0, y=yoff+textheight)
         stripe = DiskStripe(drive, disk, group, self.tree, self.editCb)
         self.diskStripes.append(stripe)
===================================================================
RCS file: /spx/cvs/anaconda/iw/timezone_map_gui.py,v
retrieving revision 1.1.1.3
retrieving revision 1.2
diff -u -r1.1.1.3 -r1.2
--- anaconda/iw/timezone_map_gui.py	2004/09/01 19:41:25	1.1.1.3
+++ anaconda/iw/timezone_map_gui.py	2005/03/18 18:00:22	1.2
@@ -14,7 +14,7 @@
 import gobject
 import pango
 import gtk
-import gnome.canvas
+import gnomecanvas
 import string
 import re
 import math
@@ -44,7 +44,7 @@
         self.highlightedEntry = None
 
         # set up the map canvas
-        self.canvas = gnome.canvas.Canvas()
+        self.canvas = gnomecanvas.Canvas()
         root = self.canvas.root()
         tpixbuf = gtk.gdk.pixbuf_new_from_file(map)
 
@@ -61,20 +61,20 @@
         self.mapWidth = pixbuf.get_width()
         self.mapHeight = pixbuf.get_height()
 
-        root.add(gnome.canvas.CanvasPixbuf, x=0, y=0, pixbuf=pixbuf)
+        root.add(gnomecanvas.CanvasPixbuf, x=0, y=0, pixbuf=pixbuf)
         x1, y1, x2, y2 = root.get_bounds()
         self.canvas.set_scroll_region(x1, y1, x2, y2)
         self.canvas.set_size_request(int(x2), int(y2))
         self.pack_start(self.canvas, gtk.FALSE, gtk.FALSE)
 
-        self.current = root.add(gnome.canvas.CanvasText, text='x',
+        self.current = root.add(gnomecanvas.CanvasText, text='x',
                                 fill_color='red', anchor=gtk.ANCHOR_CENTER,
                                 weight=pango.WEIGHT_BOLD)
         
         root.connect("event", self.mapEvent)
         self.canvas.connect("event", self.canvasEvent)
 
-        self.arrow = root.add(gnome.canvas.CanvasLine,
+        self.arrow = root.add(gnomecanvas.CanvasLine,
                               fill_color='limegreen',
                               width_pixels=2,
                               first_arrowhead=gtk.FALSE,
@@ -109,7 +109,7 @@
             self.listStore.set_value(iter, self.columns.ENTRY, entry)
             
             x, y = self.map2canvas(entry.lat, entry.long)
-            marker = root.add(gnome.canvas.CanvasText, x=x, y=y,
+            marker = root.add(gnomecanvas.CanvasText, x=x, y=y,
                               text=u'\u00B7', fill_color='yellow',
                               anchor=gtk.ANCHOR_CENTER,
                               weight=pango.WEIGHT_BOLD)
