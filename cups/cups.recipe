#
# Copyright (c) 2004-2009 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Cups(RPMPackageRecipe, CPackageRecipe):
    name = 'cups'
    version = '1.3.9'
    rpmUpVer = '1.3.6'
    rpmRelease = '5.fc9'

    buildRequires = [ 'pam:devel', 'openssl:devel', 'pkgconfig:devel',
        'libjpeg:devel', 'libpng:devel', 'libtiff:devel',
        'zlib:devel', 'groff:runtime', 'perl:runtime', 'php:runtime',
        'libstdc++:devellib',  'acl:devel', 'libstdc++:devel',
        'openldap:devel', 'desktop-file-utils:runtime', 'php:devel',
        'openslp:devel', 'info-lp', ]

    rpmPatches = [ 'cups-no-gzip-man.patch',
        'cups-1.1.16-system-auth.patch', 'cups-ext.patch',
        'cups-locale.patch', 'cups-pid.patch', ]
    externalArchive = 'ftp://ftp.easysw.com/pub/cups/%(version)s/cups-%(version)s-source.tar.bz2'

    def setup(r):
        r.unpack()
        r.addSource('cups.init' , rpm=r.srpm)
        r.addSource('cupsprinter.png' , rpm=r.srpm)
        r.addSource('cups-lpd' , rpm=r.srpm)
        r.addSource('postscript.ppd.gz' , rpm=r.srpm)
        r.addSource('ncp.backend' , rpm=r.srpm)
        r.addSource('cups.cron' , rpm=r.srpm)
        r.addPatch('cups-CVE-2008-5183.patch')
        r.addPatch('cups-CVE-2008-5286.patch')

        # RPL-Â·
        # CVE-2009-0166
        # CVE-2009-0146
        # CVE-2009-0147
        r.addPatch('cups-j2big.patch')

        # RPL-
        r.addPatch('CVE-2009-0163.patch')

        # RPL-
        r.addPatch('CVE-2009-0164.patch')

        r.Copy('cups-lpd', 'cups-lpd.real')
        r.Replace('^.SILENT:', '', 'Makedefs.in')
        r.Replace(re.escape(r'CUPS_SERVERBIN="$exec_prefix/lib/cups"'), 'CUPS_SERVERBIN="$libdir/cups"', 'configure')

        r.macros.cflags += ' -fPIC'

        # ssl
        r.macros.cflags += ' `pkg-config --cflags openssl`  '
        r.macros.ldflags += ' `pkg-config --libs-only-L openssl` '

        r.Configure('--with-docdir=%(thisdocdir)s')

        r.Make('OPTIM="%(cflags)s"')

        r.MakeInstall(rootVar='BUILDROOT')
        r.Install('cups.init', '%(initdir)s/cups', mode=0755)
        r.Run('find %(destdir)s%(datadir)s/cups/model -name "*.ppd" '
              ' |xargs gzip -9f')

        r.Install('cupsprinter.png', '%(datadir)s/pixmaps/')
        r.Install('cups-lpd.real', '%(sysconfdir)s/xinetd.d/cups-lpd',
                  mode=0755)
        r.Install('ncp.backend', '%(libdir)s/cups/backend/ncp')
        r.Symlink('%(bindir)s/smbspool', '%(libdir)s/cups/backend/smb')
        r.Symlink('%(thisdocdir)s', '%(datadir)s/%(name)s/doc')

        r.Remove('%(datadir)s/applications/cups.desktop') # RPL-2129

        for dir in 'admin classes jobs printers'.split(' '):
            r.MakeDirs('%(thisdocdir)s/' + dir)
            r.Create('%(thisdocdir)s/' + dir + '/index.html',
            contents = '''<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/transitional.dtd">
<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="refresh" content="2; URL=http://localhost:631/%s" />
<title>CUPS $i</title>
</head>
<body bgcolor="#cccc99" text="#000000" link="#0000ff" vlink="#ff00ff">
<p>You are trying to access the CUPS admin frontend through reading the files.
The correct way to access the CUPS admin frontend is pointing your browser at
<a href="http://localhost:631/">http://localhost:631/</a>.</p>
<p>You should be automatically redirected to the correct URL in 2 seconds.
If your browser does not support redirection, please use
<a href="http://localhost:631/%s">this link</a>.</p>
</body>
</html>''' % (dir, dir))

        # Ship a generic postscript PPD file (RH BZ#73061)
        r.Install('postscript.ppd.gz', '%(datadir)s/cups/model/')

        r.DanglingSymlinks(exceptions=['%(mandir)s/man1/.*',
                                       '%(libdir)s/cups/backend/smb'])
        r.MakeDirs('%(localstatedir)s/spool/cups')
        r.MakeDirs('%(sysconfdir)s/cups/certs/', mode=0711)
        r.MakeDirs('%(sysconfdir)s/cups/ppd/', mode=0755)
        r.MakeDirs('%(localstatedir)s/log/cups')

        r.SetModes('%(bindir)s/lppasswd', 04755)
        r.SetModes('%(localstatedir)s/spool/cups/tmp/', 01770)
        r.SetModes('%(localstatedir)s/spool/cups/', 0710)
        r.SetModes('%(sysconfdir)s/cups/cupsd.conf', 0640)
        r.Ownership('root', 'sys',
            '%(sysconfdir)s/cups',
            '%(sysconfdir)s/cups/certs',
            '%(sysconfdir)s/cups/(classes|printers).conf')
        r.Ownership('root', 'lp',
            '%(sysconfdir)s/cups/ppd',
            '%(localstatedir)s/spool/cups',
            '%(localstatedir)s/spool/cups/tmp',
            '%(sysconfdir)s/cups/cupsd.conf')
        r.Ownership('lp', 'sys', '%(localstatedir)s/log/cups')

        r.ExcludeDirectories(exceptions=['%(localstatedir)s/spool/cups',
                                         '%(sysconfdir)s/cups/certs',
                                         '%(sysconfdir)s/cups/ppd',
                                         '%(localstatedir)s/log/cups'])
        r.TagSpec('initscript', '%(initdir)s/')
        r.TagSpec('gtk-update-icon-cache', '/usr/share/pixmaps/cupsprinter.png')
        # put filters/backend progs in :runtime
        r.ComponentSpec('cups:runtime', '%(libdir)s/cups/')
        # FIXME: cups uses its docdir as a location to store web page info such
        # as css and images. we should probably hack it not to do that, but for
        # now we can just include all that in :runtime
        r.ComponentSpec('runtime', '%(thisdocdir)s/')
