--- cups-1.1.23/backend/ipp.c.dbus	2005-03-10 09:15:08.000000000 +0000
+++ cups-1.1.23/backend/ipp.c	2005-03-10 09:26:03.000000000 +0000
@@ -51,6 +51,68 @@
 #include <signal.h>
 #include <sys/wait.h>
 
+#include <dbus/dbus.h>
+
+static DBusConnection *dbus_connection = NULL;
+
+static int
+init_dbus (void)
+{
+  DBusConnection *connection;
+  DBusError error;
+
+  if (dbus_connection &&
+      !dbus_connection_get_is_connected (dbus_connection)) {
+    dbus_connection_unref (dbus_connection);
+    dbus_connection = NULL;
+  }
+  
+  dbus_error_init (&error);
+  connection = dbus_bus_get (getuid () ? DBUS_BUS_SESSION : DBUS_BUS_SYSTEM, &error);
+  if (connection == NULL) {
+    dbus_error_free (&error);
+    return -1;
+  }
+
+  dbus_connection = connection;
+  return 0;
+}
+
+int
+dbus_broadcast_queued_remote (const char *printer_uri,
+			      ipp_status_t status,
+			      unsigned int local_job_id,
+			      unsigned int remote_job_id,
+			      const char *username,
+			      const char *printer_name)
+{
+  DBusMessage *message;
+  DBusMessageIter iter;
+  char *errstr;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  errstr = ippErrorString (status);
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "JobQueuedRemote");
+  dbus_message_iter_init_append (message, &iter);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_uri);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &errstr);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_UINT32, &local_job_id);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_UINT32, &remote_job_id);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &username);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_name);
+
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
 
 /*
  * Globals...
@@ -840,6 +902,13 @@
       fprintf(stderr, "NOTICE: Print file accepted - job ID %d.\n", job_id);
     }
 
+    dbus_broadcast_queued_remote (argv[0],
+				  ipp_status,
+				  atoi (argv[1]),
+				  job_id,
+				  argv[2],
+				  getenv ("PRINTER"));
+
     if (response)
       ippDelete(response);
 
--- cups-1.1.21rc2/backend/Makefile.dbus	2004-07-01 17:26:41.000000000 -0400
+++ cups-1.1.21rc2/backend/Makefile	2004-09-08 11:47:31.462348024 -0400
@@ -26,6 +26,9 @@
 
 include ../Makedefs
 
+CFLAGS += `pkg-config --cflags dbus-1` -DDBUS_API_SUBJECT_TO_CHANGE
+DBUS_LDFLAGS += `pkg-config --libs dbus-1`
+
 BACKENDS =	ipp lpd parallel scsi serial socket usb
 TARGETS	=	betest $(BACKENDS)
 OBJS	=	betest.o ipp.o lpd.o parallel.o scsi.o serial.o socket.o usb.o
@@ -82,7 +85,7 @@
 
 ipp:	ipp.o ../cups/$(LIBCUPS)
 	echo Linking $@...
-	$(CC) $(LDFLAGS) -o ipp ipp.o $(LIBS)
+	$(CC) $(LDFLAGS) -o ipp ipp.o $(LIBS) $(DBUS_LDFLAGS)
 	$(RM) http
 	$(LN) ipp http
 
--- cups-1.1.21rc2/scheduler/main.c.dbus	2004-09-08 11:47:31.253379792 -0400
+++ cups-1.1.21rc2/scheduler/main.c	2004-09-08 11:56:31.017323200 -0400
@@ -49,6 +49,8 @@
 #include <syslog.h>
 #include <grp.h>
 
+#include <dbus/dbus.h>
+
 #if defined(HAVE_MALLOC_H) && defined(HAVE_MALLINFO)
 #  include <malloc.h>
 #endif /* HAVE_MALLOC_H && HAVE_MALLINFO */
@@ -80,6 +82,150 @@
 static int	stop_scheduler = 0;	/* Should the scheduler stop? */
 
 
+static DBusConnection *dbus_connection = NULL;
+
+static int
+init_dbus (void)
+{
+  DBusConnection *connection;
+  DBusError error;
+
+  if (dbus_connection &&
+      !dbus_connection_get_is_connected (dbus_connection)) {
+    dbus_connection_unref (dbus_connection);
+    dbus_connection = NULL;
+  }
+  
+  dbus_error_init (&error);
+  connection = dbus_bus_get (getuid () ? DBUS_BUS_SESSION : DBUS_BUS_SYSTEM, &error);
+  if (connection == NULL) {
+    dbus_error_free (&error);
+    return -1;
+  }
+
+  dbus_connection = connection;
+  return 0;
+}
+
+int dbus_broadcast_local_queue_change (void)
+{
+  DBusMessage *message;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "QueueChanged");
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
+
+int dbus_broadcast_queued_local (const char *printer_name,
+				 unsigned int job_id,
+				 const char *username)
+{
+  DBusMessage *message;
+  DBusMessageIter iter;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "JobQueuedLocal");
+  dbus_message_iter_init_append (message, &iter);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_name);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_UINT32, &job_id);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &username);
+
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
+
+int dbus_broadcast_started_local (const char *printer_name,
+				  unsigned int job_id,
+				  const char *username)
+{
+  DBusMessage *message;
+  DBusMessageIter iter;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "JobStartedLocal");
+  dbus_message_iter_init_append (message, &iter);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_name);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_UINT32, &job_id);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &username);
+
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
+
+int
+dbus_broadcast_printer_added (const char *printer_name)
+{
+  DBusMessage *message;
+  DBusMessageIter iter;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "PrinterAdded");
+  dbus_message_iter_init_append (message, &iter);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_name);
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
+
+int
+dbus_broadcast_printer_removed (const char *printer_name)
+{
+  DBusMessage *message;
+  DBusMessageIter iter;
+
+  if (!dbus_connection || !dbus_connection_get_is_connected (dbus_connection)) {
+    if (init_dbus () || !dbus_connection)
+      return -1;
+  }
+
+  message = dbus_message_new_signal ("/org/freedesktop/PrinterSpooler",
+				     "org.freedesktop.PrinterSpooler",
+				     "PrinterRemoved");
+  dbus_message_iter_init_append (message, &iter);
+  dbus_message_iter_append_basic (&iter, DBUS_TYPE_STRING, &printer_name);
+  dbus_connection_send (dbus_connection, message, NULL);
+  dbus_connection_flush (dbus_connection);
+  dbus_message_unref (message);
+  
+  return 0;
+}
+
 /*
  * 'main()' - Main entry for the CUPS scheduler.
  */
@@ -393,6 +539,8 @@
   if (only_ppds)
     return 0;
 
+  init_dbus ();
+
 #ifdef __sgi
  /*
   * Try to create a fake lpsched lock file if one is not already there.
--- cups-1.1.21rc2/scheduler/ipp.c.dbus	2004-08-23 14:36:50.000000000 -0400
+++ cups-1.1.21rc2/scheduler/ipp.c	2004-09-08 11:47:31.472346504 -0400
@@ -5056,6 +5056,8 @@
   rename(con->filename, filename);
   ClearString(&con->filename);
 
+  dbus_broadcast_queued_local (printer->name, job->id, job->username);
+
  /*
   * See if we need to add the ending sheet...
   */
--- cups-1.1.21rc2/scheduler/job.c.dbus	2004-08-11 23:23:34.000000000 -0400
+++ cups-1.1.21rc2/scheduler/job.c	2004-09-08 11:47:31.476345896 -0400
@@ -122,6 +122,7 @@
   else
     Jobs = job;
 
+  dbus_broadcast_local_queue_change ();
   return (job);
 }
 
@@ -222,8 +223,11 @@
 	NumJobs --;
       }
 
+      dbus_broadcast_local_queue_change ();
       return;
     }
+
+  dbus_broadcast_local_queue_change ();
 }
 
 
@@ -1211,6 +1215,7 @@
 		dyld_library_path[1024],/* DYLD_LIBRARY_PATH environment variable */
 		shlib_path[1024],	/* SHLIB_PATH environment variable */
 		nlspath[1024],		/* NLSPATH environment variable */
+		dbus_address[1024],     /* DBUS_SESSION_BUS_ADDRESS environment variable */
 		datadir[1024],		/* CUPS_DATADIR environment variable */
 		fontpath[1050],		/* CUPS_FONTPATH environment variable */
 		vg_args[1024],		/* VG_ARGS environment variable */
@@ -1769,6 +1774,12 @@
     envp[envc ++] = nlspath;
   }
 
+  if (getenv("DBUS_SESSION_BUS_ADDRESS") != NULL)
+  {
+    snprintf(dbus_address, sizeof(dbus_address), "DBUS_SESSION_BUS_ADDRESS=%s", getenv("DBUS_SESSION_BUS_ADDRESS"));
+    envp[envc ++] = dbus_address;
+  }
+
   if (Classification && !banner_page)
   {
     if ((attr = ippFindAttribute(current->attrs, "job-sheets",
@@ -1924,10 +1935,16 @@
  /*
   * Finally, pipe the final output into a backend process if needed...
   */
+  sscanf(printer->device_uri, "%254[^:]", method);
+  if (strcmp(method, "ipp") != 0)
+    {
+      dbus_broadcast_started_local (printer->name,
+				    current->id,
+				    current->username);
+    }
 
-  if (strncmp(printer->device_uri, "file:", 5) != 0)
+  if (strcmp(method, "file") != 0)
   {
-    sscanf(printer->device_uri, "%254[^:]", method);
     snprintf(command, sizeof(command), "%s/backend/%s", ServerBin, method);
 
 #ifdef __APPLE__
--- cups-1.1.21rc2/scheduler/Makefile.dbus	2004-09-08 11:47:31.328368392 -0400
+++ cups-1.1.21rc2/scheduler/Makefile	2004-09-08 11:47:31.477345744 -0400
@@ -27,6 +27,9 @@
 CFLAGS += -fpie
 LDFLAGS += -pie
 
+CFLAGS += `pkg-config --cflags dbus-1` -DDBUS_API_SUBJECT_TO_CHANGE
+DBUS_LDFLAGS += `pkg-config --libs dbus-1`
+
 CUPSDOBJS =	auth.o banners.o cert.o classes.o client.o conf.o devices.o \
 		dirsvc.o main.o ipp.o listen.o job.o log.o network.o \
 		ppds.o printers.o quotas.o server.o
@@ -85,7 +88,7 @@
 	echo Linking $@...
 	$(CC) $(LDFLAGS) -o cupsd $(CUPSDOBJS) libmime.a \
 		$(LIBZ) $(SSLLIBS) $(LIBSLP) $(PAMLIBS) $(LIBS) \
-		$(LIBPAPER) $(LIBMALLOC)
+		$(LIBPAPER) $(LIBMALLOC) $(DBUS_LDFLAGS)
 
 
 #
--- cups-1.1.21rc2/scheduler/cupsd.h.dbus	2004-08-23 14:00:59.000000000 -0400
+++ cups-1.1.21rc2/scheduler/cupsd.h	2004-09-08 11:55:32.426230400 -0400
@@ -207,7 +207,15 @@
 extern void	StartServer(void);
 extern void	StopServer(void);
 
-
+extern int dbus_broadcast_local_queue_change (void);
+extern int dbus_broadcast_queued_local (const char *printer_name,
+					unsigned int job_id,
+					const char *username);
+extern int dbus_broadcast_started_local (const char *printer_name,
+					 unsigned int job_id,
+					 const char *username);
+extern int dbus_broadcast_printer_added (const char *printer_name);
+extern int dbus_broadcast_printer_removed (const char *printer_name);
 /*
  * End of "$Id: cups-dbus.patch,v 1.7 2005/06/23 03:57:05 walters Exp $".
  */
--- cups-1.1.21rc2/scheduler/printers.c~	2004-06-28 23:27:35.000000000 -0400
+++ cups-1.1.21rc2/scheduler/printers.c	2004-09-08 11:59:36.105185568 -0400
@@ -143,6 +143,8 @@
 
   WritePrintcap();
 
+  dbus_broadcast_printer_added (name);
+
  /*
   * Bump the printer count and return...
   */
@@ -653,6 +655,8 @@
   FreePrinterUsers(p);
   FreeQuotas(p);
 
+  dbus_broadcast_printer_removed (p->name);
+
   ClearString(&p->uri);
   ClearString(&p->hostname);
   ClearString(&p->name);
