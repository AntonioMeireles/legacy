#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Binutils(RPMPackageRecipe, CPackageRecipe):
    name = 'binutils'
    version = '2.17.50.0.6'
    rpmRelease = '2.el5'
    distroVersion = '5Server'
    isRHEL = True

    buildRequires = [ 'flex:runtime', 'byacc:runtime', 'gettext:runtime',
                      'install-info:runtime', 'perl:runtime',
                      'texinfo:runtime', 'automake:runtime', 'autoconf:runtime' ]
    # perl:runtime is required for pod2man, used to generate man pages.
    # texinfo needed to build info pages
    if Use.cross:
        # When building the cross-compiler toolchain, we don't need
        # anything installed in the sysroot.
        buildRequires += [ 'gcc[!cross]', 'binutils[!cross]']
        clearBuildReqs(
        'binutils:runtime',
        'binutils:lib',
        'binutils:devellib',
        'gcc:runtime',
        'gcc:lib',
        'gcc:devel',
        'gcc:devellib',
        'libgcc:lib',
        'libgcc:devellib')
        keepBuildReqs = True
    elif Use.bootstrap:
        keepBuildReqs = ['glibc:devel']
        buildRequires += [ 'gcc[!cross]', 'binutils[!cross]',
                           'binutils[cross]' ]
        crossRequires = [ 'glibc:devel' ]

    # True if should create <target>-ar -> ar link in usr/bin
    if Use.cross:
        createLinks = False
    else:
        createLinks = True

    rpmPatches = [ 'binutils-2.17.50.0.6-ltconfig-multilib.patch',
                   'binutils-2.17.50.0.6-ppc64-pie.patch',
                   'binutils-2.17.50.0.6-place-orphan.patch',
                   'binutils-2.17.50.0.6-elfvsb-test.patch',
                   'binutils-2.17.50.0.6-standards.patch',
                   'binutils-2.17.50.0.6-build-fixes.patch',
                   'binutils-2.17.50.0.6-kept-section.patch',
                   'binutils-2.17.50.0.6-power6-insns.patch',
                   'binutils-2.17.50.0.6-fixsyms.patch',
                   'binutils-2.17.50.0.6-popcnt.patch', ]

    def setup(r):
        r.unpack()
        r.addPatch('binutils-2.17.50.0.6-gas-debug-ranges-revert.patch', extraArgs='-R', rpm=r.srpm )
        r.addPatch('binutils-2.17.50.0.6-build.patch' )
        r.configure()
        r.install()

    def configure(r):
        if Use.cross:
            r.ManualConfigure('--target=%(target)s '
                              '--build=%(build)s '
                              '--host=%(host)s '
                              '--prefix=%(crossprefix)s '
                              '--with-sysroot=%(sysroot)s '
                              '--program-prefix=%(target)s- '
                              '--disable-werror ')
        else:
            conf = ' --disable-werror'
            if not Use.bootstrap:
                conf += ' --enable-shared'
            r.Run('touch */configure')
            r.Configure(conf)

    def install(r):
        r.Make()
        r.MakeInstall()

        if Arch.x86 and r.createLinks:
            r.Symlink('%(bindir)s/i386-unknown-linux-ar', '%(bindir)s/i686-unknown-linux-ar')

        # Rebuild libiberty.a with -fPIC
        r.Make( '-C libiberty clean')
        r.Make( 'CFLAGS="-g -fPIC $CFLAGS" -C libiberty')
        r.Install('libiberty/libiberty.a', '%(libdir)s/', mode=0644)
        r.Install('include/libiberty.h', '%(includedir)s/', mode=0644)

        # Prevent programs to link against libbfd and libopcodes dynamically,
        # they are changing far too often
        r.Remove('%(libdir)s/lib{bfd,opcodes}.so')

        if r.createLinks:
            for prog in ('addr2line ar as c++filt gprof ld nm objcopy objdump'
                         ' ranlib readelf size strings strip').split():
                r.Link(('%(target)s-' + prog) % r.macros,
                       ('%(bindir)s/' + prog) % r.macros)

        r.TestSuite('binutils/', 'make check-DEJAGNU')
        r.TestSuite('gas/', 'make check-DEJAGNU')
        r.TestSuite('ld/', 'make check-DEJAGNU')
        r.TestSuite('libiberty/testsuite', 'make check-cplus-dem')

        # this package likes its hardlinks...
        if Use.cross:
            r.LinkCount(exceptions='%(crossprefix)s/')
        else:
            r.LinkCount(exceptions='%(prefix)s/')
