#
# Copyright (c) 2004-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class MonoDevelop(RPMPackageRecipe,AutoPackageRecipe):
    name = 'monodevelop'
    version = '2.0'
    rpmRelease = '1.fc11'
    buildRequires = [ 'desktop-file-utils:runtime', 'gecko-sharp:devellib', 'gecko-sharp:cil', 'gettext:runtime', 'gnome-sharp:devellib', 'gnome-sharp:lib', 'gtk-sharp:devellib', 'gtk-sharp:lib', 'gtksourceview-sharp:devellib', 'gtksourceview-sharp:cil', 'intltool:runtime', 'mono:devel', 'mono:lib', 'mono:runtime', 'perl:runtime', 'pkgconfig:devel', 'shared-mime-info:runtime', 'libgdiplus:lib', 'gnome-sharp:cil', 'gtk-sharp:cil', 'gtksourceview-sharp:cil', 'mono-addins:devellib', 'mono-addins:cil', 'mono:cil', 'automake:runtime', 'autoconf:runtime', 'libtool:runtime', ]

    rpmPatches = [ # 'monodevelop-1.9.1-use-mono-cecil.patch',
                   'monodevelop-1.9.2-removed-contrib.patch',
                   # 'monodevelop-192-nunit.patch',
                   # 'monodevelop-191-usemonocecil.patch',
                   # 'md-192-desktop.patch',
                   ]
    def unpack(r):
        RPMPackageRecipe.unpack(r)
        r.Environment('MONO_SHARED_DIR', '/tmp')
        r.Run("""
sed -i -e 's!${exec_prefix}/lib!%(libdir)s!' configure
sed -i -e 's!$PREFIX/lib/!%(libdir)s/!' monodevelop.in

find . -name Makefile.in -or -name Makefile.am -or -name \*.pc.in \
       -or -name \*.in -or -name \*.xml \
       | while read f ;
         do
           sed -i -e 's!$(prefix)/lib/!%(libdir)s/!' "$f" 
           sed -i -e 's!@prefix@/lib/!%(libdir)s/!' "$f"
           sed -i -e 's!/usr/lib/!%(libdir)s/!' "$f"
           sed -i -e 's!${exec_prefix}/lib/!%(libdir)s/!' "$f" ;
         done

sed -i src/addins/NUnit/MonoDevelopNUnit.addin.xml -e 's|LIBDIR|%(libdir)s|'
""")


        r.Run('autoreconf -f -i -s')


    def configure(r):
        r.disableParallelMake()
        r.Configure(' --disable-update-mimedb '
                    ' --disable-update-desktopdb '
                    ' --enable-gtksourceview2 --enable-tests ')

    def makeinstall(r):
        r.MakeInstall("""GACUTIL_FLAGS="/package monodevelop /root %(destdir)s%(libdir)s" """)

    def policy(r):
        r.Requires('libgdiplus:lib','%(bindir)s/%(name)s')


