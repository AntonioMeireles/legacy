#
# Copyright (c) 2008-2012 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('kernelmodulepackage')
class BroadcomWlKmod(KernelModulePackageRecipe):
    name = 'broadcom-wl-kmod'
    version =  '6.30.223.141'

    def unpack(r):
        r.macros.version = r.version.replace('.', '_')
        r.addArchive('http://www.broadcom.com/docs/linux_sta/'
                      'hybrid-v35-nodebug-pcoem-%(version)s.tar.gz',
                      use=Arch.x86, dir = '%(name)s-%(version)s')
        r.addArchive('http://www.broadcom.com/docs/linux_sta/'
                     'hybrid-v35_64-nodebug-pcoem-%(version)s.tar.gz',
                     use=Arch.x86_64, dir = '%(name)s-%(version)s')
        r.addSource('LICENSE')

        if Arch.x86_64:
            r.macros.binarch = 'x86_64'
        else:
            r.macros.binarch = 'i386'

        for p in [ 'wl-kmod-001_license.patch',
                   'wl-kmod-003_kernel_3.8.patch',
                   'wl-kmod-002_wext_workaround.patch',
                   'wl-kmod-004_kernel_3.10.patch',
               ]:
            r.addPatch(p)

    def build(r):
        r.macros.ksrcdir = '/lib/modules/%(kver)s/build'

        r.Environment('KBASE', '/lib/modules/%(kver)s/')

        r.Make("-C '/lib/modules/%(kver)s/build' M=`pwd`")

    def install(r):
        r.macros.moduledir = r.moduleDir
        r.Install('*.ko', '/lib/modules/%(kver)s/%(moduledir)s/')

    def policy(r):
        r.Doc('LICENSE')
        # We want to make sure that the userspace code can require the
        # matching kernel-space code
        r.ComponentProvides('%(version)s')
        r.ComponentSpec('runtime', '/lib/modules/')

        r.Requires('broadcom-wl:runtime',
                   '/lib/modules/%(kver)s/misc/wl.ko')
