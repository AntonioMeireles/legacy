diff -ru PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_iw.c PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_iw.c
--- PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_iw.c	2009-04-20 16:53:02.000000000 -0700
+++ PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_iw.c	2009-06-18 16:04:18.000000000 -0700
@@ -9,7 +9,7 @@
  * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
  * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
  *
- * $Id: wl_iw.c,v 1.63.2.25.4.4 2009/04/20 19:22:00 Exp $
+ * $Id: wl_iw.c,v 1.63.2.25.4.5 2009/06/18 22:40:12 Exp $
  */
 
 #define LINUX_PORT
@@ -54,6 +54,12 @@
 #define IW_EVENT_IDX(cmd)	((cmd) - IWEVFIRST)
 #endif 
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#define IW_DEV_IF(dev)        ((wl_iw_t *)netdev_priv(dev))
+#else
+#define IW_DEV_IF(dev)        ((wl_iw_t *)dev->priv)
+#endif
+
 static void swap_key_from_BE(
 	        wl_wsec_key_t *key
 )
@@ -597,7 +603,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = IW_DEV_IF(dev);
 	struct sockaddr *addr = (struct sockaddr *) extra;
 	int i;
 
@@ -622,7 +628,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = IW_DEV_IF(dev);
 	struct sockaddr *addr = (struct sockaddr *) extra;
 	struct iw_quality *qual = (struct iw_quality *) &addr[iw->spy_num];
 	int i;
@@ -1097,8 +1103,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
-
+	wl_iw_t *iw = IW_DEV_IF(dev);
 	WL_TRACE(("%s: SIOCSIWNICKN\n", dev->name));
 
 	if (!extra)
@@ -1121,8 +1126,7 @@
 	char *extra
 )
 {
-	wl_iw_t *iw = dev->priv;
-
+	wl_iw_t *iw = IW_DEV_IF(dev);
 	WL_TRACE(("%s: SIOCGIWNICKN\n", dev->name));
 
 	if (!extra)
@@ -1777,7 +1781,7 @@
 	int paramid;
 	int paramval;
 	int val = 0;
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = IW_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCSIWAUTH\n", dev->name));
 
@@ -1908,7 +1912,7 @@
 	int paramid;
 	int paramval = 0;
 	int val;
-	wl_iw_t *iw = dev->priv;
+	wl_iw_t *iw = IW_DEV_IF(dev);
 
 	WL_TRACE(("%s: SIOCGIWAUTH\n", dev->name));
 
diff -ru PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_linux.c PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_linux.c
--- PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_linux.c	2009-04-20 16:53:02.000000000 -0700
+++ PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_linux.c	2009-06-18 16:04:18.000000000 -0700
@@ -10,7 +10,7 @@
  * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
  * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
  *
- * $Id: wl_linux.c,v 1.388.2.78.4.2 2009/04/03 02:06:22 Exp $
+ * $Id: wl_linux.c,v 1.388.2.78.4.3 2009/06/18 22:40:13 Exp $
  */
 
 #define LINUX_PORT
@@ -41,8 +41,12 @@
 #define WLC_MAXBSSCFG		1	
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#include <net/lib80211.h>
+#else
 #include <net/ieee80211.h>
 #endif
+#endif	
 
 #include <asm/system.h>
 #include <asm/io.h>
@@ -117,7 +121,11 @@
 	u8 rx_hdr[16], tx_hdr[16];
 };
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+#define WL_DEV_IF(dev)		((wl_if_t*)netdev_priv(dev))
+#else
 #define	WL_DEV_IF(dev)		((wl_if_t*)(dev)->priv)			
+#endif
 #define	WL_INFO(dev)		((wl_info_t*)(WL_DEV_IF(dev)->wl))	
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 20)
@@ -270,6 +278,10 @@
 	wl->dev = dev;
 	wl_if_setup(dev);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	wlif = netdev_priv(dev);
+#endif
+
 	dev->base_addr = regs;
 
 	WL_TRACE(("wl%d: Bus: ", unit));
@@ -346,12 +358,20 @@
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	wl->tkipmodops = lib80211_get_crypto_ops("TKIP");
+	if (wl->tkipmodops == NULL) {
+		request_module("lib80211_crypt_tkip");
+		wl->tkipmodops = lib80211_get_crypto_ops("TKIP");
+	}
+#else
 	wl->tkipmodops = ieee80211_get_crypto_ops("TKIP");
 	if (wl->tkipmodops == NULL) {
 		request_module("ieee80211_crypt_tkip");
 		wl->tkipmodops = ieee80211_get_crypto_ops("TKIP");
 	}
 #endif 
+#endif 
 #ifdef CONFIG_WIRELESS_EXT
 	wlif->iw.wlinfo = (void *)wl;
 #endif
@@ -653,7 +673,11 @@
 	}
 
 	if (wl->monitor) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+		wl_free_if(wl, (wl_if_t *)netdev_priv(wl->monitor));
+#else
 		wl_free_if(wl, (wl_if_t *)(wl->monitor->priv));
+#endif
 		wl->monitor = NULL;
 	}
 
@@ -821,6 +845,9 @@
 #else
 
 	dev = alloc_netdev(0, name, ether_setup);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	wlif = netdev_priv(dev);
+#endif
 	if (!dev) {
 		MFREE(wl->osh, wlif, sizeof(wl_if_t));
 		WL_ERROR(("wl%d: wl_alloc_if: out of memory, alloc_netdev\n",
@@ -834,7 +861,9 @@
 	wlif->wl = wl;
 	wlif->wlcif = wlcif;
 	wlif->subunit = subunit;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 29)
 	dev->priv = wlif;
+#endif
 
 	if (iftype != WL_IFTYPE_MON && wl->dev && netif_queue_stopped(wl->dev))
 		netif_stop_queue(dev);
diff -ru PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_linux.h PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_linux.h
--- PBR_REL_5_10_91_9_hybrid/src/wl/sys/wl_linux.h	2009-04-20 16:53:02.000000000 -0700
+++ PBR_REL_5_10_91_top_hybrid/src/wl/sys/wl_linux.h	2009-06-18 16:04:18.000000000 -0700
@@ -9,7 +9,7 @@
  * SPECIFICALLY DISCLAIMS ANY IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS
  * FOR A SPECIFIC PURPOSE OR NONINFRINGEMENT CONCERNING THIS SOFTWARE.
  *
- * $Id: wl_linux.h,v 1.22.2.3 2009/02/27 02:04:03 Exp $
+ * $Id: wl_linux.h,v 1.22.2.3.4.1 2009/06/18 22:40:13 Exp $
  */
 
 #ifndef _wl_linux_h_
@@ -72,10 +72,14 @@
 	bool		resched;	
 	uint32		pci_psstate[16];	
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 14)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 29)
+	struct lib80211_crypto_ops *tkipmodops;
+#else
 	struct ieee80211_crypto_ops *tkipmodops;	
+#endif
 	struct ieee80211_tkip_data  *tkip_ucast_data;
 	struct ieee80211_tkip_data  *tkip_bcast_data;
-#endif
+#endif 
 
 	uint	stats_id;		
 
