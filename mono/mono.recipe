#
#1;1613;0c Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Mono(RPMPackageRecipe,AutoPackageRecipe):
    name = 'mono'
    version = '1.9.1'
    rpmRelease = '2.fc9'
    rpmPatches = [ 'mono-libdir-126.patch',
                   'mono-1.2.3-use-monodir.patch',
                   'mono-1.2.4-metadata.patch',
                   'mono-1251-metadata.patch',
                   'mono-big-integer-CVE-2007-5197.patch',
                   'mono-mcs-config.patch'
                   ]
    rpmSources = ['monodir.c']
    buildRequires = [ 'zlib:devel', 'glib:devel', 'bison:runtime',
                      'pkgconfig:devel', 'openssl:devel', 'autoconf:runtime',
                      'automake:runtime', 'expat:devel', 'libtool:devel',
                      'libtool:runtime', 'm4:runtime', 'pkgconfig:devel',
                      'attr:devel', 'ncurses:devel', 'wget:runtime', 'curl:runtime',
                      'libgdiplus:devellib', 'libgdiplus:lib']


    def unpack(r):
        RPMPackageRecipe.unpack(r)
        r.addSource('http://mono.ximian.com/daily/monolite-20080122.tar.gz')
        r.addAction(""" sed -i -e 's!@@LIBDIR@@!%(libdir)s!' configure.in  """)


        r.Run(' autoreconf -f -i -s ')
        # Add undeclared Arg
        r.Run(""" sed -i "61a #define ARG_MAX_POSIX_ARG_MAX" mono/io-layer/wapi_glob.h """)
        # Remove prebuilt binaries
        r.Remove('mcs/class/lib/monolite/*', recursive = True)


    def configure(r):
        r.Environment('MONO_SHARED_DIR', '/tmp')
        r.Run('gcc -o monodir  monodir.c -DMONODIR=\\"%(libdir)s/mono\\"')
        r.Install('monodir', '%(bindir)s/')

        extraConfig = ' --with-ikvm=yes --with-jit=yes --with-xen_opt=no '

        # Enable the 2.0 FX and 2.1 moonlight
        extraConfig += ' --with-preview=yes '
        extraConfig += ' --with-moonlight=yes '
        # we need this, otherwise won't cook
        extraConfig += ' --with-tls=pthread '


        r.Configure(extraConfig)

        # do not add spurious builddir RPATH entry
        r.Replace(('^runpath_var=.*', 'runpath_var=""'),
                  ('^hardcode_libdir_flag_spec=.*',
                   'hardcode_libdir_flag_spec=""'), 'libtool')

    def make(r):
        r.Replace('\(wget \-O\- \$\(monolite_url\) \|\| curl \$\(monolite_url\)\)', '(cat ../../../monolite-20080122.tar.gz )', 'Makefile')
#        r.Replace('monolite-latest.tar', 'monolite-20080122.tar', 'Makefile')
        r.Make('get-monolite-latest')
        r.Make(preMake='EXTERNAL_MCS=false EXTERNAL_RUNTIME=false')

    def makeinstall(r):
        r.MakeInstall()

        # RPM scripts are not necessary
        r.Remove('%(bindir)s/mono-find-{provides,requires}')

        # libtool wrappers currently get installed instead of the real things
        r.Install('mono/dis/.libs/monodis', '%(bindir)s/')
        r.Install('mono/monograph/.libs/monograph', '%(bindir)s/')

        # This was removed upstream... 
        r.Remove('%(libdir)s/gac/Mono.Security.Win32/[12]*', allowNoMatch=True)
        r.Remove('%(libdir)s/1.0/Mono.Security.Win32.dll', allowNoMatch=True)
        r.Remove('%(libdir)s//2.0/Mono.Security.Win32.dll', allowNoMatch=True)
        r.Remove('%(bindir)s/jay', allowNoMatch=True)
        r.Remove('%(datadir)s/jay', recursive = True, allowNoMatch=True)
        r.Remove('%(datadir)s/libgc-mono', recursive = True, allowNoMatch=True)
        r.Remove('%(mandir)s/man1/{jay,monostyle,oldmono,mint}.1', allowNoMatch=True)
        r.Remove('%(libdir)s/mono/1.0/{CorCompare.exe,browsercaps-updater.exe*,mono-api-diff.exe}', allowNoMatch=True)
        r.Remove('%(libdir)s/mono/*/mono-api-info.exe', recursive = True, allowNoMatch=True)


    def policy(r):
        # The mono libraries that provide CIL: dependencies have an
        # implicit requirement on the mono interpreter
        r.Requires('%(bindir)s/mono', r'.*\.(dll|exe)')

        # FIXME: review this list...
        r.ComponentSpec('devel', '%(bindir)s/monodis',
                                 '%(mandir)s/man1/monodis.1.*',
                                 '%(bindir)s/ilasm.*',
                                 '%(mandir)s/man1/ilasm.1.*',
                                 '%(bindir)s/genxs.*',
                                 '%(mandir)s/man1/genxs.1.*',
                                 '%(bindir)s/al.*',
                                 '%(bindir)s/makecert',
                                 '%(bindir)s/MakeCert.exe',
                                 '%(mandir)s/man1/makecert.1.*',
                                 '%(bindir)s/monop.*',
                                 '%(mandir)s/man1/monop.1.*',
                                 '%(bindir)s/cert2spc.*',
                                 '%(mandir)s/man1/cert2spc.1.*',
                                 '%(bindir)s/signcode.*',
                                 '%(mandir)s/man1/signcode.1.*',
                                 '%(bindir)s/secutil.*',
                                 '%(mandir)s/man1/secutil.1.*',
                                 '%(bindir)s/pedump',
                                 '%(bindir)s/monoresgen.*',
                                 '%(bindir)s/resgen',
                                 '%(libdir)s/libmono-profiler-cov.so.*')

