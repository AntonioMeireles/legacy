#
# Copyright (c) 2006-2008 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage=conary.rpath.com@rpl:devel')
class Squid(RPMPackageRecipe, CPackageRecipe):
    name = 'squid'
    version = '3.0.STABLE13'

    firstver = version.split('.')[0]
    externalArchive = 'http://www.squid-cache.org/Versions/v'+firstver+'/%(major_version)s/'

    rpmUpVer = '3.0.STABLE12'
    rpmRelease = '1.fc11'
    rpmPatches = [ 'squid-3.0.STABLE1-config.patch',
        'squid-3.0.STABLE1-smb-path.patch',
        'squid-3.0.STABLE1-location.patch', 'squid-3.0.STABLE1-perlpath.patch',
        'squid-3.0.STABLE1-build.patch', 'squid-3.0.STABLE7-from_manpg.patch']
    rpmSources = [ 'squid.init', 'squid.logrotate', 'squid.pam', 'squid.spec',
        'squid.sysconfig', ]

    buildRequires = [ 'cyrus-sasl:devel', 'glibc:devel',
        'krb5:devel', 'openldap:devel', 'openssl:devel',
        'pam:devel', 'zlib:devel', 'perl:runtime', 'pkgconfig:devel',
        'bind:devel', 'chkconfig:runtime', 'db:devel', 'libcap:devel',
        'libstdc++:devel', 'perl:devel', 'w3c-libwww:devel', ]

    def setup(r):
        r.macros.cflags += " -fPIE"
        r.macros.cxxflags += " -fPIE"
        r.unpack()

        # Forcing the inclusion of linux/types.h to define __le32 (error
        # compiling tools.cc)
        r.Replace(r"#define _LINUX_TYPES_H", r"#undef _LINUX_TYPES_H",
            "src/tools.cc")
        r.Replace(r"typedef uint32_t __u32;", r"#include <linux/types.h>",
            "src/tools.cc")

        r.Configure('--exec_prefix=%(prefix)s'
                    ' --bindir=%(sbindir)s'
                    ' --libexecdir=%(libdir)s/squid'
                    ' --localstatedir=/var'
                    ' --datadir=%(datadir)s'
                    ' --sysconfdir=%(sysconfdir)s/squid'
                    ' --enable-arp-acl'
                    ' --enable-epoll'
                    ' --enable-snmp'
                    ' --enable-icap-client'
                    ' --enable-wccpv2'
                    ' --enable-removal-policies="heap,lru"'
                    ' --enable-storeio="aufs,diskd,null,ufs"'
                    ' --enable-ssl'
                    ' --with-openssl=%(prefix)s/kerberos'
                    ' --enable-delay-pools'
                    ' --enable-linux-netfilter'
                    ' --with-pthreads'
                    ' --enable-ntlm-auth-helpers="SMB,fakeauth"'
                    ' --enable-negotiate-auth-helpers="squid_kerb_auth"'
                    ' --enable-external-acl-helpers="ip_user,ldap_group,unix_group,wbinfo_group"'
                    ' --enable-auth="basic,digest,ntlm,negotiate"'
                    ' --enable-digest-auth-helpers="password"'
                    ' --enable-useragent-log'
                    ' --enable-referer-log'
                    ' --disable-dependency-tracking'
                    ' --enable-cachemgr-hostname=localhost'
                    ' --enable-basic-auth-helpers="LDAP,MSNT,NCSA,PAM,SMB,YP,getpwnam,multi-domain-NTLM,SASL"'
                    ' --enable-cache-digests'
                    ' --enable-ident-lookups'
                    ' --with-large-files'
                    ' --with-filedescriptors=16384'
                    ' --with-dl')


        r.Make()
        r.MakeInstall()
        r.Install('squid.init','%(initdir)s/squid', mode=0755)
        r.Install('squid.logrotate','%(sysconfdir)s/logrotate.d/squid')
        r.Install('squid.sysconfig','%(sysconfdir)s/sysconfig/squid')
        r.Install('squid.pam','%(sysconfdir)s/pam.d/squid')
        r.MakeDirs('%(localstatedir)s/log/squid',
            '%(localstatedir)s/spool/squid', mode=0750)
        r.Ownership('squid','squid',
            '%(localstatedir)s/log/squid','%(localstatedir)s/spool/squid')
        r.ExcludeDirectories(exceptions=['%(localstatedir)s/log/squid',
            '%(localstatedir)s/spool/squid'])
