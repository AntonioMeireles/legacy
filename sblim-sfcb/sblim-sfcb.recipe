#
# Copyright (c) 2008-2009 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class SblimSfcb(AutoPackageRecipe):
    name = 'sblim-sfcb'
    version = '1.3.4'

    buildRequires = [
        'chkconfig:runtime',
        'curl:devel',
        'flex:runtime',
        'pam:devel',
        'perl:devel',
        'perl:runtime',
        'perl-URI:perl',
        'perl-libwww-perl:perl',
        'zlib:devel',
    ]

    def unpack(r):
        r.addArchive('mirror://sourceforge/sblim/')
        r.addSource('cim-mof.tagdescription',
                    dest='%(tagdescriptiondir)s/cim-mof', macros = True)
        r.addSource('cim-mof.taghandler', dest='%(taghandlerdir)s/cim-mof',
                    mode=0755, macros = True)
        r.addSource('provider-register.sh', dest='%(sbindir)s/', mode=0755)
        # Require a client cert
        r.Replace(
            "sslClientCertificate:.*",
            "sslClientCertificate: require",
            "sfcb.cfg.pre.in")
        # Use a directory for client certs
        r.Replace("sslClientTrustStore:.*",
                  "sslClientTrustStore: @sysconfdir@/sfcb/clients/",
                  "sfcb.cfg.pre.in")
        # Turn off basic authentication
        r.Replace("doBasicAuth:.*",
                  "doBasicAuth:    false",
                  "sfcb.cfg.pre.in")

        # Create certs
        r.Replace(
            "daemon",
            "[ -f @sysconfdir@/sfcb/server.pem ] || @datadir@/sfcb/genSslCert.sh @sysconfdir@/sfcb > /dev/null 2>&1\n\tdaemon",
            "sfcb.init-redhat.in")
        # Start on more runlevels
        r.Replace(
            "chkconfig: 35",
            "chkconfig: 2345",
            "sfcb.init-redhat.in")

        # Fix init script
        r.Replace(r"&& restart", "&& ( stop && start )", "sfcb.init-redhat.in")

    def configure(r):
        r.Configure("--enable-ssl --enable-pam --enable-uds --enable-ipv6 --enable-slp")

    def makeinstall(r):
        r.MakeInstall()
        r.Install('sfcb.init-redhat', "%(initdir)s/sfcb", mode=0755)
        r.Install('%(localstatedir)s/lib/sfcb/stage/default.reg',
                  '%(localstatedir)s/lib/sfcb/registration/providerRegister')

        r.Replace('sfcbmof', '$DESTDIR/usr/bin/sfcbmof', "sfcbrepos")

        # Copy header files, they are not installed automatically
        for f in ['cmpidt.h', 'cmpift.h', 'cmpimacs.h', 'cmpios.h', 'cmpipl.h']:
            r.Install(f, "%(includedir)s/cmpi/")

        # Create the interop dir
        r.MakeDirs("%(localstatedir)s/lib/sfcb/registration/repository/root/interop")

    def policy(r):
        r.ExcludeDirectories(exceptions="%(localstatedir)s/lib/sfcb/registration/repository/root/.*")
        # .so gets put in :devellib, which makes the provider choke if we only
        # require :runtime plus :lib
        r.ComponentSpec("lib", "%(libdir)s/sfcb/.*\.so")
        # Package wbemcat separately, we don't want to carry perl deps
        r.PackageSpec("sblim-wbemcat", "wbemcat.*")
        r.PackageSpec("sblim-wbemcat", "xmltest.*")
