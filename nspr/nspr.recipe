#
# Copyright (c) 2006-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Nspr(CPackageRecipe):
    name = 'nspr'
    version = '4.9'

    buildRequires = [ 'libstdc++:devel',]

    extraConfig = (' --enable-optimize="%(optflags)s" '
                   ' --includedir=%(includedir)s/nspr4 '
                   ' --disable-debug')

    if Arch.x86_64:
        extraConfig += ' --enable-64bit '

    def setup(r):
        r.addArchive('ftp://ftp.mozilla.org/pub/mozilla.org/%(name)s/releases/v%(version)s/src/')

        r.addAction('cp ./config/nspr-config.in ./config/nspr-config-pc.in')
        r.addPatch('nspr-config-pc.patch', dir = '../..')
        r.addSource('nspr-config-vars.in', 'config/')

        r.mainDir('%(name)s-%(version)s/mozilla/nsprpub')

        r.Configure(r.extraConfig)
        r.Make()
        r.MakeInstall()

        r.addSource('%(name)s.pc.in')

        r.MakeDirs('%(libdir)s/pkgconfig/')
       
        r.Run("""
export NSPR_LIBS=`./config/nspr-config --libs`; 
export NSPR_CFLAGS=`./config/nspr-config --cflags`; 
export NSPR_VERSION=`./config/nspr-config --version`;  

cat ./config/nspr-config-vars > nspr.pc

cat %(name)s.pc.in | sed -e "s,%%libdir%%,%(libdir)s,g" \
                     -e "s,%%prefix%%,%(prefix)s,g" \
                     -e "s,%%exec_prefix%%,%(prefix)s,g" \
                     -e "s,%%includedir%%,%(includedir)s/nspr4,g" \
                     -e "s,%%NSPR_VERSION%%,$NSPR_VERSION,g" \
                     -e "s,%%FULL_NSPR_LIBS%%,$NSPR_LIBS,g" \
                     -e "s,%%FULL_NSPR_CFLAGS%%,$NSPR_CFLAGS,g" >> \
                     nspr.pc; 
""")


        r.Install('%(name)s.pc', '%(libdir)s/pkgconfig/', mode = 0644)

        r.Install('config/nspr-config-pc',
                  '%(bindir)s/nspr-config', mode = 0755)

        # Get rid of the things we don't want installed (per upstream)
        for f in [ '%(bindir)s/{compile-et.pl,prerr.properties}',
                   '%(libdir)s/*.a',
                   '%(datadir)s/aclocal/nspr.m4',
                   '%(includedir)s/nspr4/md',]:
            r.Remove(f, recursive = True)

        for i in ['libnspr4.so', 'libplc4.so', 'libplds4.so']:
            r.Move('%(libdir)s/' + i, '/%(lib)s/' +i)
            r.Symlink('/%(lib)s/' +i, '%(libdir)s/' + i)
