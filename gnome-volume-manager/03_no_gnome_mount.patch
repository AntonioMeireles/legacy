diff -ruN gnome-volume-manager-1.5.15-old/src/manager.c gnome-volume-manager-1.5.15/src/manager.c
--- gnome-volume-manager-1.5.15-old/src/manager.c	2006-04-27 16:14:23.000000000 +0200
+++ gnome-volume-manager-1.5.15/src/manager.c	2006-04-27 16:16:10.000000000 +0200
@@ -1717,10 +1717,7 @@
 	
 	dbg ("mounting %s...\n", udi);
 	
-	if (!gnome_mount || access (gnome_mount, F_OK | R_OK | X_OK) != 0) {
-		g_free (gnome_mount);
-		gnome_mount = g_find_program_in_path ("gnome-mount");
-	}
+	gnome_mount = g_find_program_in_path ("pmount-hal");
 	
 	if (gnome_mount != NULL) {
 		gboolean retval;
@@ -1732,16 +1729,14 @@
 		
 		g_hash_table_insert (mount_table, policy->udi, policy);
 		
-		if (!interactive) {
-			command = g_strdup_printf ("%s --no-ui --hal-udi=%%h", gnome_mount);
-		} else {
-			command = g_strdup_printf ("%s --hal-udi=%%h", gnome_mount);
-		}
-		
-		retval = gvm_run_command (command, udi, NULL, NULL);
-		g_free (command);
-		
-		if (!retval) {
+                char* argv[] = { gnome_mount, udi, NULL };
+                gint exit_status;
+
+                if (!g_spawn_sync (NULL, argv, NULL, 0, NULL, NULL, NULL, NULL,
+                            &exit_status, NULL) || 
+                        !WIFEXITED(exit_status) || WEXITSTATUS (exit_status)) {
+                        dbg ("executing %s %s failed with status %i\n",
+                                gnome_mount, udi, exit_status); 
 			g_hash_table_remove (mount_table, policy->udi);
 			g_free (policy->udi);
 			g_free (policy);
@@ -1878,14 +1873,21 @@
 	
 	dbg ("unmounting %s...\n", udi);
 	
-	if (!gnome_mount || access (gnome_mount, F_OK | R_OK | X_OK) != 0) {
-		g_free (gnome_mount);
-		gnome_mount = g_find_program_in_path ("gnome-mount");
-	}
+	gnome_mount = g_find_program_in_path ("pumount");
 	
 	if (gnome_mount != NULL) {
-		command = g_strdup_printf ("%s --unmount --hal-udi=%%h", gnome_mount);
-		retval = gvm_run_command (command, udi, NULL, NULL);
+		command = g_strdup_printf ("%s %%d", gnome_mount);
+
+                const char* device = NULL;
+                dbus_error_init (&error);
+                if (!(device = libhal_device_get_property_string (hal_ctx, udi, "block.device", &error))) {
+                        warn ("cannot get block.device: %s\n", error.message);
+                        if (dbus_error_is_set (&error))
+                                dbus_error_free (&error);
+                        return FALSE;
+                }
+
+		retval = gvm_run_command (command, udi, device, NULL);
 		g_free (command);
 		
 		return retval;
@@ -2597,14 +2599,21 @@
 	
 	dbg ("ejecting %s...\n", volume);
 	
-	if (!gnome_mount || access (gnome_mount, F_OK | R_OK | X_OK) != 0) {
-		g_free (gnome_mount);
-		gnome_mount = g_find_program_in_path ("gnome-mount");
-	}
+	gnome_mount = g_find_program_in_path ("eject");
 	
 	if (gnome_mount != NULL) {
-		command = g_strdup_printf ("%s --eject --hal-udi=%%h", gnome_mount);
-		gvm_run_command (command, volume, NULL, NULL);
+		command = g_strdup_printf ("%s %%d", gnome_mount);
+
+                const char* device = NULL;
+                dbus_error_init (&error);
+                if (!(device = libhal_device_get_property_string (hal_ctx, udi, "block.device", &error))) {
+                        warn ("cannot get block.device: %s\n", error.message);
+                        if (dbus_error_is_set (&error))
+                                dbus_error_free (&error);
+                        return FALSE;
+                }
+
+		gvm_run_command (command, volume, device, NULL);
 		g_free (command);
 	} else {
 		if (!(dmesg = dbus_message_new_method_call ("org.freedesktop.Hal", volume,
