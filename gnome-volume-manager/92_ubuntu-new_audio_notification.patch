diff -ruN gnome-volume-manager-1.5.10-old/src/manager.c gnome-volume-manager-1.5.10/src/manager.c
--- gnome-volume-manager-1.5.10-old/src/manager.c	2006-01-23 17:04:37.000000000 +0100
+++ gnome-volume-manager-1.5.10/src/manager.c	2006-01-23 17:05:56.000000000 +0100
@@ -2020,6 +2021,68 @@
 	return strcmp (*((const char **) strptr0), *((const char **) strptr1));
 }
 
+/**
+ * Called if the user clicks on "Open audio preferences" notification action.
+ */
+static void
+gvm_new_alsa_playback_notify_callback(NotifyNotification *n, const char *action){
+   g_return_if_fail( strcmp (action, "open") == 0 );
+
+   char* argv[] = {"gnome-sound-properties", NULL};
+   g_spawn_async (NULL, argv, NULL, G_SPAWN_SEARCH_PATH,
+		  NULL, NULL, NULL, NULL);
+}
+
+/* Called if a new ALSA playback device is added.
+ *
+ *  @param  udi                 Universal Device Id
+ */
+static void
+gvm_new_alsa_playback (const char *udi)
+{
+        const char* id;
+        char notification[1024];
+
+        id = libhal_device_get_property_string (hal_ctx, udi, "alsa.card_id",
+                NULL);
+        dbg ("New ALSA playback device: %s\n", id);
+
+        /* Check whether we have gnome-sound-properties */
+        if (!g_file_test ("/usr/bin/gnome-sound-properties", G_FILE_TEST_IS_EXECUTABLE))
+                return;
+
+        /* Check whether we can change the sound card at all */
+        char* argv[] = {"/usr/bin/asoundconf", "is-active", NULL};
+        gint exit_status;
+        if (!g_spawn_sync (NULL, argv, NULL, 0, NULL, NULL, NULL, NULL,
+                    &exit_status, NULL) || !WIFEXITED(exit_status)) {
+                warn ("Error executing asoundconf\n");
+                return;
+        }
+        if (WEXITSTATUS (exit_status)) {
+                dbg ("~/.asoundrc was customized, cannot change default sound card\n");
+                return;
+        }
+
+        /* Invoke notification */
+        if (!notify_is_initted())
+                if (!notify_init ("gnome-volume-manager"))
+                        return;
+
+        snprintf (notification, sizeof (notification), 
+                    N_("To configure your new audio playback device %s and "
+                    "possibly set it as default device, open "
+                    "System -> Preferences -> Sound."), id);
+
+	NotifyNotification *n = notify_notification_new (N_("New audio playback device detected"), notification, GTK_STOCK_DIALOG_INFO, NULL);
+	notify_notification_set_category (n, "device");
+	notify_notification_add_action (n, "open",
+					N_("Open audio preferences"),
+					gvm_new_alsa_playback_notify_callback, NULL, NULL);
+	notify_notification_set_timeout (n, 10000);
+	notify_notification_show(n, NULL);
+}
+
 
 typedef gboolean (* DeviceAddedHandler) (const char *udi, const char *capability);
 
@@ -2235,6 +2298,9 @@
         c->udi = g_strdup(udi);
         c->card = libhal_device_get_property_int (hal_ctx, udi, "alsa.card", NULL);
         audio_devices = g_slist_append (audio_devices, c);
+
+        /* Do appropriate actions */
+        gvm_new_alsa_playback (udi);
     }
 
     return TRUE;
