diff -ruN gnome-volume-manager-1.2.0-old/configure gnome-volume-manager-1.2.0/configure
--- gnome-volume-manager-1.2.0-old/configure	2005-03-08 00:03:17.000000000 +0100
+++ gnome-volume-manager-1.2.0/configure	2005-03-08 11:59:41.628431289 +0100
@@ -309,7 +309,7 @@
 # include <unistd.h>
 #endif"
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE mount_path umount_path nautilus_path ALL_LINGUAS GETTEXT_PACKAGE INTLTOOL_DESKTOP_RULE INTLTOOL_DIRECTORY_RULE INTLTOOL_KEYS_RULE INTLTOOL_PROP_RULE INTLTOOL_OAF_RULE INTLTOOL_PONG_RULE INTLTOOL_SERVER_RULE INTLTOOL_SHEET_RULE INTLTOOL_SOUNDLIST_RULE INTLTOOL_UI_RULE INTLTOOL_XAM_RULE INTLTOOL_KBD_RULE INTLTOOL_XML_RULE INTLTOOL_XML_NOMERGE_RULE INTLTOOL_CAVES_RULE INTLTOOL_SCHEMAS_RULE INTLTOOL_THEME_RULE INTLTOOL_EXTRACT INTLTOOL_MERGE INTLTOOL_UPDATE INTLTOOL_PERL INTLTOOL_ICONV INTLTOOL_MSGFMT INTLTOOL_MSGMERGE INTLTOOL_XGETTEXT mkdir_p CPP EGREP USE_NLS MSGFMT GMSGFMT XGETTEXT CATALOGS CATOBJEXT DATADIRNAME GMOFILES INSTOBJEXT INTLLIBS PO_IN_DATADIR_TRUE PO_IN_DATADIR_FALSE POFILES POSUB MKINSTALLDIRS PKG_CONFIG GVM_CFLAGS GVM_LIBS CAPPLET_CFLAGS CAPPLET_LIBS GCONFTOOL GCONF_SCHEMA_CONFIG_SOURCE GCONF_SCHEMA_FILE_DIR GCONF_SCHEMAS_INSTALL_TRUE GCONF_SCHEMAS_INSTALL_FALSE LIBOBJS LTLIBOBJS'
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM AWK SET_MAKE am__leading_dot CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE mount_program umount_program nautilus_path ALL_LINGUAS GETTEXT_PACKAGE INTLTOOL_DESKTOP_RULE INTLTOOL_DIRECTORY_RULE INTLTOOL_KEYS_RULE INTLTOOL_PROP_RULE INTLTOOL_OAF_RULE INTLTOOL_PONG_RULE INTLTOOL_SERVER_RULE INTLTOOL_SHEET_RULE INTLTOOL_SOUNDLIST_RULE INTLTOOL_UI_RULE INTLTOOL_XAM_RULE INTLTOOL_KBD_RULE INTLTOOL_XML_RULE INTLTOOL_XML_NOMERGE_RULE INTLTOOL_CAVES_RULE INTLTOOL_SCHEMAS_RULE INTLTOOL_THEME_RULE INTLTOOL_EXTRACT INTLTOOL_MERGE INTLTOOL_UPDATE INTLTOOL_PERL INTLTOOL_ICONV INTLTOOL_MSGFMT INTLTOOL_MSGMERGE INTLTOOL_XGETTEXT mkdir_p CPP EGREP USE_NLS MSGFMT GMSGFMT XGETTEXT CATALOGS CATOBJEXT DATADIRNAME GMOFILES INSTOBJEXT INTLLIBS PO_IN_DATADIR_TRUE PO_IN_DATADIR_FALSE POFILES POSUB MKINSTALLDIRS PKG_CONFIG GVM_CFLAGS GVM_LIBS CAPPLET_CFLAGS CAPPLET_LIBS GCONFTOOL GCONF_SCHEMA_CONFIG_SOURCE GCONF_SCHEMA_FILE_DIR GCONF_SCHEMAS_INSTALL_TRUE GCONF_SCHEMAS_INSTALL_FALSE LIBOBJS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -854,6 +854,9 @@
 Optional Packages:
   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-mount-program=program Program to run to mount a device
+  --with-umount-program=program Program to run to umount a device
+  --with-nautilus=path Path to nautilus
   --with-gconf-source=sourceaddress      Config database for installing schema files.
   --with-gconf-schema-file-dir=dir        Directory for installing schema files.
 
@@ -2816,12 +2819,12 @@
 set dummy mount; ac_word=$2
 echo "$as_me:$LINENO: checking for $ac_word" >&5
 echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_path_mount_path+set}" = set; then
+if test "${ac_cv_path_mount_program+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  case $mount_path in
+  case $mount_program in
   [\\/]* | ?:[\\/]*)
-  ac_cv_path_mount_path="$mount_path" # Let the user override the test with a path.
+  ac_cv_path_mount_program="$mount_program" # Let the user override the test with a path.
   ;;
   *)
   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
@@ -2831,37 +2834,38 @@
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
   if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_path_mount_path="$as_dir/$ac_word$ac_exec_ext"
+    ac_cv_path_mount_program="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
 
-  test -z "$ac_cv_path_mount_path" && ac_cv_path_mount_path="no"
+  test -z "$ac_cv_path_mount_program" && ac_cv_path_mount_program="no"
   ;;
 esac
 fi
-mount_path=$ac_cv_path_mount_path
+mount_program=$ac_cv_path_mount_program
 
-if test -n "$mount_path"; then
-  echo "$as_me:$LINENO: result: $mount_path" >&5
-echo "${ECHO_T}$mount_path" >&6
+if test -n "$mount_program"; then
+  echo "$as_me:$LINENO: result: $mount_program" >&5
+echo "${ECHO_T}$mount_program" >&6
 else
   echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6
 fi
 
+mount_program="${mount_program} %d"
 # Extract the first word of "umount", so it can be a program name with args.
 set dummy umount; ac_word=$2
 echo "$as_me:$LINENO: checking for $ac_word" >&5
 echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_path_umount_path+set}" = set; then
+if test "${ac_cv_path_umount_program+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  case $umount_path in
+  case $umount_program in
   [\\/]* | ?:[\\/]*)
-  ac_cv_path_umount_path="$umount_path" # Let the user override the test with a path.
+  ac_cv_path_umount_program="$umount_program" # Let the user override the test with a path.
   ;;
   *)
   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
@@ -2871,27 +2875,28 @@
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
   if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_path_umount_path="$as_dir/$ac_word$ac_exec_ext"
+    ac_cv_path_umount_program="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
 
-  test -z "$ac_cv_path_umount_path" && ac_cv_path_umount_path="no"
+  test -z "$ac_cv_path_umount_program" && ac_cv_path_umount_program="no"
   ;;
 esac
 fi
-umount_path=$ac_cv_path_umount_path
+umount_program=$ac_cv_path_umount_program
 
-if test -n "$umount_path"; then
-  echo "$as_me:$LINENO: result: $umount_path" >&5
-echo "${ECHO_T}$umount_path" >&6
+if test -n "$umount_program"; then
+  echo "$as_me:$LINENO: result: $umount_program" >&5
+echo "${ECHO_T}$umount_program" >&6
 else
   echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6
 fi
 
+umount_program="${umount_program} %d"
 # Extract the first word of "nautilus", so it can be a program name with args.
 set dummy nautilus; ac_word=$2
 echo "$as_me:$LINENO: checking for $ac_word" >&5
@@ -2934,13 +2939,33 @@
 
 
 
+# Check whether --with-mount-program or --without-mount-program was given.
+if test "${with_mount_program+set}" = set; then
+  withval="$with_mount_program"
+  mount_program="$withval"
+fi;
+
+# Check whether --with-umount-program or --without-umount-program was given.
+if test "${with_umount_program+set}" = set; then
+  withval="$with_umount_program"
+  umount_program="$withval"
+fi;
+
+# Check whether --with-nautilus or --without-nautilus was given.
+if test "${with_nautilus+set}" = set; then
+  withval="$with_nautilus"
+  nautilus_path="$withval"
+fi;
+
+
+
 cat >>confdefs.h <<_ACEOF
-#define BIN_MOUNT "${mount_path}"
+#define BIN_MOUNT "${mount_program}"
 _ACEOF
 
 
 cat >>confdefs.h <<_ACEOF
-#define BIN_UMOUNT "${umount_path}"
+#define BIN_UMOUNT "${umount_program}"
 _ACEOF
 
 
@@ -6382,8 +6407,8 @@
 s,@CCDEPMODE@,$CCDEPMODE,;t t
 s,@am__fastdepCC_TRUE@,$am__fastdepCC_TRUE,;t t
 s,@am__fastdepCC_FALSE@,$am__fastdepCC_FALSE,;t t
-s,@mount_path@,$mount_path,;t t
-s,@umount_path@,$umount_path,;t t
+s,@mount_program@,$mount_program,;t t
+s,@umount_program@,$umount_program,;t t
 s,@nautilus_path@,$nautilus_path,;t t
 s,@ALL_LINGUAS@,$ALL_LINGUAS,;t t
 s,@GETTEXT_PACKAGE@,$GETTEXT_PACKAGE,;t t
diff -ruN gnome-volume-manager-1.2.0-old/configure.in gnome-volume-manager-1.2.0/configure.in
--- gnome-volume-manager-1.2.0-old/configure.in	2005-03-07 21:41:45.000000000 +0100
+++ gnome-volume-manager-1.2.0/configure.in	2005-03-08 11:59:09.231718559 +0100
@@ -8,12 +8,25 @@
 AC_PROG_CC
 
 
-AC_PATH_PROG(mount_path, mount, no)
-AC_PATH_PROG(umount_path, umount, no)
+AC_PATH_PROG(mount_program, mount, no)
+mount_program="${mount_program} %d"
+AC_PATH_PROG(umount_program, umount, no)
+umount_program="${umount_program} %d"
 AC_PATH_PROG(nautilus_path, nautilus, no)
 
-AC_DEFINE_UNQUOTED([BIN_MOUNT], ["${mount_path}"], [path to mount])
-AC_DEFINE_UNQUOTED([BIN_UMOUNT], ["${umount_path}"], [path to umount])
+AC_ARG_WITH(mount-program, 
+            [  --with-mount-program=program Program to run to mount a device],
+            mount_program="$withval",)
+AC_ARG_WITH(umount-program, 
+            [  --with-umount-program=program Program to run to umount a device],
+            umount_program="$withval",)
+AC_ARG_WITH(nautilus, 
+            [  --with-nautilus=path Path to nautilus],
+            nautilus_path="$withval",)
+
+
+AC_DEFINE_UNQUOTED([BIN_MOUNT], ["${mount_program}"], [mount program])
+AC_DEFINE_UNQUOTED([BIN_UMOUNT], ["${umount_program}"], [umount program])
 AC_DEFINE_UNQUOTED([BIN_NAUTILUS], ["${nautilus_path}"], [nautilus command])
 
 
diff -ruN gnome-volume-manager-1.2.0-old/src/manager.c gnome-volume-manager-1.2.0/src/manager.c
--- gnome-volume-manager-1.2.0-old/src/manager.c	2005-03-08 11:57:55.675534000 +0100
+++ gnome-volume-manager-1.2.0/src/manager.c	2005-03-08 11:59:09.264710120 +0100
@@ -145,20 +145,20 @@
 				 gvm_config_changed, NULL, NULL, NULL);
 }
 
-/*
- * gvm_run_command - run the given command, replacing %d with the device node,
- * %h with the HAL UDI and %m with the given path. Bails out if the command
- * requires a given %d,%h or %m and this is NULL.
+/* parses the given command into a command string. It replaces %d with the 
+ * device node, * %h with the HAL UDI and %m with the given path. 
+ *
+ * Returns NULL f the command * requires a given %d,%h or %m and this is NULL.
  */
-static void
-gvm_run_command (const char *device, const char *command, 
-		 const char *path, const char *udi)
-{
-	char *argv[4];
+
+static gchar *
+gvm_parse_command(const char *device, const char *command, 
+                  const char *path, const char *udi) {
 	gchar *new_command;
 	GError *error = NULL;
 	GString *exec = g_string_new (NULL);
 	char *p, *q;
+  gchar *result, *tmp;
 
 	/* perform s/%d/device/, s/%m/path/ and s/%h/udi/ */
 	new_command = g_strdup (command);
@@ -170,7 +170,9 @@
 				goto error;
 			*p = '\0';
 			g_string_append (exec, q);
-			g_string_append (exec, device);
+      tmp = g_shell_quote(device);
+			g_string_append (exec, tmp);
+      g_free(tmp);
 			q = p + 2;
 			p = p + 2;
 		} else if (*(p + 1) == 'm') {
@@ -178,7 +180,9 @@
 				goto error;
 			*p = '\0';
 			g_string_append (exec, q);
-			g_string_append (exec, path);
+      tmp = g_shell_quote(path);
+			g_string_append (exec, tmp);
+      g_free(tmp);
 			q = p + 2;
 			p = p + 2;
 		} else if (*(p + 1) == 'h') {
@@ -186,34 +190,77 @@
 				goto error;
 			*p = '\0';
 			g_string_append (exec, q);
-			g_string_append (exec, "\"");
-			g_string_append (exec, udi);
-			g_string_append (exec, "\"");
+      tmp = g_shell_quote(udi);
+			g_string_append (exec, tmp);
+      g_free(tmp);
 			q = p + 2;
 			p = p + 2;
 		}
 	}
 	g_string_append (exec, q);
+  result = exec->str;
 
-	argv[0] = "/bin/sh";
-	argv[1] = "-c";
-	argv[2] = exec->str;
-	argv[3] = NULL;
-
-	g_spawn_async (g_get_home_dir (), argv, NULL, 0, NULL, NULL,
-		       NULL, &error);
-	if (error)
-		warn ("failed to exec %s: %s\n", exec->str, error->message);
-
-	g_string_free (exec, TRUE);
+	g_string_free (exec, FALSE);
 	g_free (new_command);
-	return;
+	return result;
 
 error:
 	warn ("command '%s' required unavailable parameter; " 
 	      "%%d='%s' %%m='%s' %%h='%s'\n", command, device, path, udi);
 	g_string_free (exec, TRUE);
 	g_free (new_command);	
+  return NULL;
+}
+
+/*
+ * gvm_run_command - run the given command, replacing %d with the device node,
+ * %h with the HAL UDI and %m with the given path. Bails out if the command
+ * requires a given %d,%h or %m and this is NULL.
+ */
+static void
+gvm_run_command (const char *device, const char *command, 
+		 const char *path, const char *udi)
+{
+  char *cmd;
+  GError *error = NULL;
+
+  cmd = gvm_parse_command(device, command, path, udi);
+  if (cmd == NULL) {
+    return;
+  }
+	if (!g_spawn_command_line_async (cmd, &error)) 
+		warn ("failed to exec %s: %s\n", cmd, error->message);
+
+	g_free (cmd);
+	return;
+}
+
+/*
+ * gvm_run_command_sync - run the given command, replacing %d with the device
+ * node, %h with the HAL UDI and %m with the given path. Bails out if the
+ * command requires a given %d,%h or %m and this is NULL.
+ *
+ * Returns the exitcode of the command if run and -1 if failed
+ */
+static gint 
+gvm_run_command_sync (const char *device, const char *command, 
+		 const char *path, const char *udi)
+{
+  char *cmd;
+  gint exit_status;
+  GError *error = NULL;
+
+  cmd = gvm_parse_command(device, command, path, udi);
+  if (cmd == NULL) {
+    return -1;
+  }
+	if (!g_spawn_command_line_sync (cmd, NULL, NULL, &exit_status, &error)) {
+		warn ("failed to exec %s: %s\n", cmd, error->message);
+	  g_free (cmd);
+    return -1;
+  }
+	g_free (cmd);
+  return exit_status;
 }
 
 /*
@@ -472,23 +519,9 @@
  * @return TRUE iff the mount was succesful
  */
 static gboolean
-gvm_device_mount (char *device)
+gvm_device_mount (const char *udi, const char *device)
 {
-	char *argv[3];
-	GError *error = NULL;
-	gint exit_status;
-
-	argv[0] = BIN_MOUNT;
-	argv[1] = device;
-	argv[2] = NULL;
-
-	if (!g_spawn_sync (g_get_home_dir (), argv, NULL, 0, NULL,
-			   NULL, NULL, NULL, &exit_status, &error)) {
-		warn ("failed to exec " BIN_MOUNT ": %s\n", error->message);
-		return FALSE;
-	}
-
-	return (exit_status == 0);
+  return (gvm_run_command_sync(device , BIN_MOUNT, NULL, udi) == 0);
 }
 
 /*
@@ -500,23 +533,8 @@
  * @return TRUE iff the mount was succesful
  */
 static gboolean
-gvm_device_unmount (char *device)
-{
-	char *argv[3];
-	GError *error = NULL;
-	gint exit_status;
-
-	argv[0] = BIN_UMOUNT;
-	argv[1] = device;
-	argv[2] = NULL;
-
-	if (!g_spawn_sync (g_get_home_dir (), argv, NULL, 0, NULL,
-			   NULL, NULL, NULL, &exit_status, &error)) {
-		warn ("failed to exec " BIN_MOUNT ": %s\n", error->message);
-		return FALSE;
-	}
-
-	return (exit_status == 0);
+gvm_device_unmount (const char *udi, const char *device) {
+  return (gvm_run_command_sync(device, BIN_UMOUNT, NULL, udi) == 0);
 }
 
 /*
@@ -577,7 +595,7 @@
 
 	switch (action) {
 	case MOUNT:
-		gvm_device_mount (device);
+		gvm_device_mount (udi, device);
 		mounted_volumes_policy_queue = g_slist_append (mounted_volumes_policy_queue, g_strdup (udi));
 		break;
 	case PLAY:
@@ -654,7 +672,7 @@
 		gvm_ask_mixed (udi);
 	} else if (has_data) {
 		if (config.automount_media) {
-			gvm_device_mount (device);
+			gvm_device_mount (udi, device);
 			mounted_volumes_policy_queue = g_slist_append (mounted_volumes_policy_queue, g_strdup (udi));
 		}
 	} else if (is_blank) {
@@ -712,7 +730,7 @@
 		dbg ("Added: %s\n", device);
 		
 		if (config.automount_drives) {
-			gvm_device_mount (device);
+			gvm_device_mount (udi, device);
 			mounted_volumes_policy_queue = g_slist_append (mounted_volumes_policy_queue, g_strdup (udi));
 		}
 	}
@@ -776,7 +794,7 @@
 	dbg ("Added: %s\n", device);
 	
 	if (config.automount_drives) {
-		gvm_device_mount (device);
+		gvm_device_mount (udi, device);
 		mounted_volumes_policy_queue = g_slist_append (mounted_volumes_policy_queue, g_strdup (udi));
 	}
 	
@@ -856,7 +874,7 @@
 
 		policy_udi = g_slist_find_custom (mounted_volumes_policy_queue, 
 						  udi, 
-						  g_ascii_strcasecmp);
+						  (GCompareFunc)g_ascii_strcasecmp);
 		if (policy_udi != NULL) {
 			g_free (policy_udi->data);
 			mounted_volumes_policy_queue = g_slist_delete_link (mounted_volumes_policy_queue, 
@@ -1064,7 +1082,7 @@
 
 			dbg ("mount_all: mounting %s\n", device_file);
 
-			gvm_device_mount (device_file);
+			gvm_device_mount (udi, device_file);
 
 			hal_free_string (device_file);
 		} else
@@ -1103,7 +1121,7 @@
 
 			dbg ("unmount_all: unmounting %s\n", device_file);
 
-			gvm_device_unmount (device_file);
+			gvm_device_unmount (udi, device_file);
 			hal_free_string (device_file);
 		} else {
 			warn ("no device_file for udi=%s\n", udi);
