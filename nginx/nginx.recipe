#
# Copyright (c) 2010 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Nginx(CPackageRecipe):

    name = 'nginx'
    version = '0.9.2'

    buildRequires = [
        'chkconfig:runtime',
        'openssl:devel',
        'pcre:devel',
        'pkgconfig:devel',
        'zlib:devel',
      ]

    def setup(r):
        r.addArchive('http://nginx.org/download/')
        modules = 'rtsig poll'.split()
        http_modules = 'ssl flv gzip_static'.split()
        r.ManualConfigure(
            '--prefix=%(prefix)s '
            '--sbin-path=%(sbindir)s/%(name)s '
            '--conf-path=%(sysconfdir)s/%(name)s/%(name)s.conf '
            '--pid-path=%(localstatedir)s/run/%(name)s/%(name)s.pid '
            '--lock-path=%(localstatedir)s/lock/subsys/%(name)s '
            '--http-log-path=%(localstatedir)s/log/%(name)s/access.log '
            '--error-log-path=%(localstatedir)s/log/%(name)s/error.log '
            '--http-client-body-temp-path=%(localstatedir)s/cache/%(name)s/client/ '
            '--http-proxy-temp-path=%(localstatedir)s/cache/%(name)s/proxy/ '
            '--http-fastcgi-temp-path=%(localstatedir)s/cache/%(name)s/fastcgi/ '

            '--with-cc-opt="%(cflags)s `pkg-config --cflags openssl`" '
            '--with-ld-opt="%(ldflags)s" '
            '--user=nobody --group=nobody '

            '--with-file-aio '
            '--with-ipv6 '
            + ' '.join('--with-%s_module' % x for x in modules) + ' '
            + ' '.join('--with-http_%s_module' % x for x in http_modules) + ' '
            )

        r.Make()
        r.MakeInstall()


        r.MakeDirs('%(localstatedir)s/cache/%(name)s',
                   '%(localstatedir)s/log/%(name)s',
                   '%(localstatedir)s/run/%(name)s',
                   '%(servicedir)s/%(name)s/html/')
        r.ExcludeDirectories(exceptions=[
            '%(localstatedir)s/cache/%(name)s.*',
            '%(localstatedir)s/log/%(name)s',
            '%(localstatedir)s/run/%(name)s',
            '%(servicedir)s/%(name)s/html',
          ])
        r.Move('%(prefix)s/html/*', '%(servicedir)s/%(name)s/html/')

        # Replace the default script with something more sane
        r.addSource('nginx.conf.in', macros=True,
            dest='%(sysconfdir)s/%(name)s/%(name)s.conf')

        # Add default virtual host for serving static content
        r.addSource('nginx.conf.default.vhost.in', macros=True,
            dest='%(sysconfdir)s/%(name)s/conf.d/00-default.conf')

        # Add default vhost custom stub file
        r.Create('%(sysconfdir)s/%(name)s/conf.d/00-default.custom',
            contents='# Extra configuration for default virtual host\n')

        # Add an initscript
        r.addSource('nginx.initscript.in', macros=True,
            dest='%(initdir)s/%(name)s', mode=0755)

        # Add a script for logrotate
        r.addSource('nginx.logrotate.in', macros=True,
            dest='%(sysconfdir)s/logrotate.d/%(name)s')
        r.Requires('%(sbindir)s/logrotate', '%(sysconfdir)s/logrotate.d/')

        # Add a simple favicon.ico (as initialcontents, so it can be
        # replaced manually).
        r.addSource('favicon.ico', dir='%(servicedir)s/%(name)s/html/')
        r.InitialContents('%(servicedir)s/%(name)s/html/favicon.ico')

    def policy(r):
        r.UtilizeGroup('nobody', '%(sbindir)s/')
        r.UtilizeUser('nobody', '%(sbindir)s/')
