#
# Copyright (c) 2008      rPath, Inc.
#               2011-2013 The Foresight Linux Project
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class ConaryProxy(PackageRecipe):
    name = 'conary-proxy'
    version = '0.9'

    def setup(r):
        r.macros.proxydir = '%(servicedir)s/%(name)s'

        for f, l, p in [('cron',
                         '%(sysconfdir)s/cron.daily/%(name)s',
                         0755),
                        ('apache', 
                         '%(sysconfdir)s/httpd/conf.d/%(name)s.conf',
                         0644),
                        # ('wsgi',  '%(proxydir)s/config/%(name)s.wsgi', 0644),
                        ('config', '%(proxydir)s/config/%(name)s.cnr', 0644),
                        ('conary',
                         '%(sysconfdir)s/conary/config.d/%(name)s',
                         0644)]:
            
            r.addSource('%(name)s.' + f, dest = l, mode = p, macros = True)

        for dir in ('cscache', 'contents', 'tmp'):
            r.MakeDirs('%%(proxydir)s/%s' % dir)
            r.ExcludeDirectories(exceptions='%%(proxydir)s/%s' % dir)
            r.Ownership('apache', 'apache', '%%(proxydir)s/%s' % dir)

        r.Requires('memcached:runtime', '%(proxydir)s/')
        r.Requires('python-memcached:python', '%(proxydir)s/')
        r.Requires('mod_ssl:runtime', '%(proxydir)s/')
        # r.Requires('mod_wsgi:lib', '%(proxydir)s/')

        # * memcached can speed up repository access, but will not
        #   be run by default (running it is left to the user)
        # 
        # * gracefully restart httpd if it is already running
        #   (if httpd is not running, the proxyMap falls back to DIRECT)
        #   - The rationale is that we can't just restart httpd
        #     unconditionally if, say, the user relies on httpd
        #     not being started (for whatever reason).
        #
        # NOTE: If using memcached, it should be started prior
        #       to restarting httpd gracefully (order matters)
        #
        postScript = ('#!/bin/bash\n'
                      '/sbin/service httpd condgraceful\n')
        r.ScriptPostInstall(contents=postScript)
        r.ScriptPostUpdate(contents=postScript)
