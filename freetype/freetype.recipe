#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Freetype(RPMPackageRecipe,AutoPackageRecipe,CPackageRecipe):
    name = 'freetype'
    version = '2.4.4'
    rpmRelease = '3.fc15'
    rpmArchives = ['freetype-doc-%(version)s.tar.bz2']

    buildRequires = [ 'libX11:devel', 'zlib:devel',
                      'automake:runtime', 'autoconf:runtime',
                      'libtool:runtime']

    rpmPatches = [ # 'freetype-2.1.10-enable-ft2-bci.patch',
                   'freetype-2.3.0-enable-spr.patch',
                   # Enable otvalid and gxvalid modules
                   'freetype-2.2.1-enable-valid.patch',
                   # Fix multilib conflicts
                   'freetype-multilib.patch',
                   'freetype-2.4.2-CVE-2010-3311.patch' ]

    def configure(r):
        r.Configure('--disable-static ')
        # Get rid of undesirable hardcoded runpaths
        r.Replace(('^hardcode_libdir_flag_spec=.*', 'hardcode_libdir_flag_spec=""'),
                  ('runpath_var=LD_RUN_PATH', 'runpath_var=DIE_RPATH_DIE'), 'builds/unix/libtool')
    def make(r):
        r.Make('')

        # FIXME: demos are out. have they real use ? 

    def makeinstall(r):
        r.MakeInstall()

        # Fix multilib issues
        r.addSource('ftconfig-multilib.h')
        r.macros.wordsize = '32'
        if Arch.x86_64:
            r.macros.wordsize = '64'

        r.Move('%(includedir)s/freetype2/freetype/config/ftconfig.h',
               '%(includedir)s/freetype2/freetype/config/ftconfig-%(wordsize)s.h')
        r.Install('ftconfig-multilib.h',
                  '%(includedir)s/freetype2/freetype/config/ftconfig.h',
                  component='devel')

