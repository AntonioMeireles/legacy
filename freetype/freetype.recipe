#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Freetype(RPMPackageRecipe,AutoPackageRecipe,CPackageRecipe):
    name = 'freetype'
    version = '2.3.4'
    rpmName = 'freetype2'
    rpmRelease = '22'
    isOPENsuse = True

    buildRequires = [ 'libX11:devel', 'zlib:devel',
                      'automake:runtime', 'autoconf:runtime',
                      'libtool:runtime']

    rpmPatches = [
        'freetype2-bitmap-foundry.patch',
        'ft2-stream-compat.diff',
        'bugzilla-273714-savannah-19859.patch',
        'bugzilla-275072-check-for-negative-points-in-contours.patch',
        'freetype2-bc.patch',
        'freetype2-subpixel.patch',
    ]

    def unpack(r):
        r.addArchive('freetype-%(version)s.tar.bz2', rpm=r.srpm)
        r.addArchive('freetype-doc-%(version)s.tar.bz2', rpm=r.srpm)

        for patch in r.rpmPatches:
            r.addPatch(patch, rpm=r.srpm)

    def configure(r):
        r.Run('chmod -R 755 autogen.sh configure')
        r.Configure(configureName='autogen.sh')
        r.Configure('--disable-static --prefix=%(prefix)s  --with-zlib')

    def make(r):
        r.Make('')

        # FIXME: demos are out. have they real use ? 

    def makeinstall(r):
        r.MakeInstall()

        # Fix multilib issues
        r.addSource('ftconfig-multilib.h')
        r.macros.wordsize = '32'
        if Arch.x86_64:
            r.macros.wordsize = '64'

        r.Move('%(includedir)s/freetype2/freetype/config/ftconfig.h',
               '%(includedir)s/freetype2/freetype/config/ftconfig-%(wordsize)s.h')
        r.Install('ftconfig-multilib.h',
                  '%(includedir)s/freetype2/freetype/config/ftconfig.h',
                  component='devellib')

