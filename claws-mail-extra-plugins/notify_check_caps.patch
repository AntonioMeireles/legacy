Index: notification_plugin-0.20/src/notification_popup.c
===================================================================
RCS file: /srv/cvs/claws-mail/plugins/notification/src/Attic/notification_popup.c,v
retrieving revision 1.1.2.27
diff -u -p -u -r1.1.2.27 notification_popup.c
--- notification_plugin-0.20/src/notification_popup.c	15 Mar 2008 10:07:04 -0000	1.1.2.27
+++ notification_plugin-0.20/src/notification_popup.c	24 Feb 2009 10:11:49 -0000
@@ -270,6 +270,8 @@ static gboolean notification_libnotify_c
   gchar *subj = NULL;
   gchar *from = NULL;
   gchar *foldname = NULL;
+  GList *caps = NULL;
+  gboolean support_actions = FALSE;
 
   g_return_val_if_fail(msginfo, FALSE);
 
@@ -332,12 +334,27 @@ static gboolean notification_libnotify_c
     return FALSE;
   }
 
+  caps = notify_get_server_caps();
+    if(caps != NULL) {
+      GList *c;
+      for(c = caps; c != NULL; c = c->next) {
+	if(strcmp((char*)c->data, "actions") == 0 ) {
+	  support_actions = TRUE;
+	  break;
+        }
+      }
+
+    g_list_foreach(caps, (GFunc)g_free, NULL);
+    g_list_free(caps);
+  }
+
   /* Default action */
-  notify_notification_add_action(ppopup->notification,
-				 "default", "Present main window",
-				 (NotifyActionCallback)default_action_cb,
-				 GINT_TO_POINTER(nftype),
-				 notification_libnotify_free_func);
+  if (support_actions)
+    notify_notification_add_action(ppopup->notification,
+				   "default", "Present main window",
+				   (NotifyActionCallback)default_action_cb,
+				   GINT_TO_POINTER(nftype),
+				   notification_libnotify_free_func);
 
   /* Icon */
   pixbuf = NULL;
@@ -376,7 +393,7 @@ static gboolean notification_libnotify_c
     debug_print("Notification plugin: Icon could not be loaded.\n");
 
   /* Never time out, close is handled manually. */
-  notify_notification_set_timeout(ppopup->notification, NOTIFY_EXPIRES_NEVER);
+  notify_notification_set_timeout(ppopup->notification, notify_config.popup_timeout+1000);
 
   /* Category */
   notify_notification_set_category(ppopup->notification, "email.arrived");
Index: notification_plugin-0.20/src/notification_trayicon.c
===================================================================
RCS file: /srv/cvs/claws-mail/plugins/notification/src/Attic/notification_trayicon.c,v
retrieving revision 1.1.2.19
diff -u -p -u -r1.1.2.19 notification_trayicon.c
--- notification_plugin-0.20/src/notification_trayicon.c	18 Nov 2008 15:56:59 -0000	1.1.2.19
+++ notification_plugin-0.20/src/notification_trayicon.c	24 Feb 2009 10:11:49 -0000
@@ -579,6 +579,8 @@ static gboolean notification_trayicon_po
   gchar *summary = NULL;
   gchar *utf8_str = NULL;
   GdkPixbuf *pixbuf;
+  GList *caps = NULL;
+  gboolean support_actions = FALSE;
 
   /* init libnotify if necessary */
   if(!notify_is_initted()) {
@@ -601,13 +603,28 @@ static gboolean notification_trayicon_po
   g_free(summary);
   g_free(utf8_str);
 
+  caps = notify_get_server_caps();
+    if(caps != NULL) {
+      GList *c;
+      for(c = caps; c != NULL; c = c->next) {
+	if(strcmp((char*)c->data, "actions") == 0 ) {
+	  support_actions = TRUE;
+	  break;
+        }
+      }
+
+    g_list_foreach(caps, (GFunc)g_free, NULL);
+    g_list_free(caps);
+  }
+
   /* Default action */
-  notify_notification_add_action(popup.notification,
-				 "default", "Present main window",
-				 (NotifyActionCallback)
-				 notification_trayicon_popup_default_action_cb,
-				 GINT_TO_POINTER(nftype),
-				 notification_trayicon_popup_free_func);
+  if (support_actions)
+    notify_notification_add_action(popup.notification,
+				   "default", "Present main window",
+				   (NotifyActionCallback)
+				   notification_trayicon_popup_default_action_cb,
+				   GINT_TO_POINTER(nftype),
+				   notification_trayicon_popup_free_func);
 
   if(popup.notification == NULL) {
     debug_print("Notification Plugin: Failed to create a new notification.\n");
@@ -651,7 +668,7 @@ static gboolean notification_trayicon_po
     debug_print("Notification plugin: Icon could not be loaded.\n");
 
   /* Never time out, close is handled manually. */
-  notify_notification_set_timeout(popup.notification, NOTIFY_EXPIRES_NEVER);
+  notify_notification_set_timeout(popup.notification, notify_config.trayicon_popup_timeout+1000);
 
   /* Category */
   notify_notification_set_category(popup.notification, "email.arrived");
