#
# Copyright (c) 2004-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class OpenOffice(CPackageRecipe):

    name = 'openoffice.org'
    version = '2.0.3'

    buildRequires = [ 'Sablot:devel', 'agg:devel', 'autoconf:runtime',
        'bison:runtime', 'boost:devel', 'cups:devel', 'curl:devel', 'db:devel',
        'expat:devel', 'flex:runtime', 'freetype:devel', 'icu:devel',
        'icu:runtime', 'libart_lgpl:devel', 'libjpeg:devel',
        'libsndfile:devel', 'libstdc++:devel', 'libwpd:devel',
        'libxml2:devel', 'libxslt:runtime', 'man:runtime', 'mozilla:devel',
        'mozilla-nss:devel', 'mozilla-nspr:devel', 'nas:devel', 'neon:devel',
        'openldap:devel', 'pam:devel', 'perl:runtime', 'perl-Archive-Zip:perl',
        'perl-Compress-Zlib:perl', 'pkgconfig:devel', 'portaudio:devel',
        'python:devel', 'startup-notification:devel',
        'sane-backends:devel', 'tcsh:runtime', 'unixODBC:devel',
        'unzip:runtime', 'zip:runtime', 'zlib:devel',
        'desktop-file-utils:runtime', 'perl:lib', 'shared-mime-info:runtime',
        'automake:runtime', 'autoconf:runtime', 'gcc-c++:runtime',
        'patch:runtime', 'atk:devel', 'cairo:devel', 'pango:devel',
        'fontconfig:devel', 'glib:devel', 'gtk:devel', 'libpng:devel',
        'GConf:devel', 'ORBit2:devel', 'gnome-vfs:devel', 'libbonobo:devel' ]


    def setup(r):
        r.macros.fullName = 'OpenOffice.org'

        r.macros.ooMajor = r.macros.version[:3]
        r.macros.branch = 'OOO_' + r.macros.version.replace('.', '_')
        r.macros.ximianVersion = 'src680'
        r.macros.buildroot = 'build/%(branch)s'

        # Saving only looks in /usr/lib/OpenOffice.org for some BASIC files
        # and does not respect --with-installed-ooo-dirname --
        # https://issues.rpath.com/browse/RPL-247
        r.macros.basedir = '%(libdir)s/%(fullName)s'

        r.macros.site = 'http://go-oo.org/packages'
        r.macros.cflags += ' -fno-strict-aliasing'

        # -------------------
        #
        # unpack the source
        #
        # -------------------

        r.addArchive('http://go-oo.org/packages/OOC680/ooo-build-2.0.3.0.tar.gz')
        r.addSource('deliver.pl.nojava.patch', dir='build') # have to apply after make unpack

        # we call all these addSources so that the files are in our repository,
        # instead of running ./download like their build system wants
        for tarball in ( 'core', 'binfilter', 'lang', 'sdk_oo', 'system', ):
            r.addSource('%s/OOC680/OOO_2_0_3-%s.tar.bz2'
                % ( r.macros.site, tarball), dir='src')
        othertarballs = ( 'http://go-ooo.org/packages/SRC680/extras-2.tar.bz2',
            'http://go-ooo.org/packages/xt/xt-20051206-src-only.zip',
            'http://go-ooo.org/packages/SRC680/biblio.tar.bz2',
            'http://go-ooo.org/packages/SRC680/lp_solve_5.5.tar.gz', )
        for tarball in othertarballs:
            r.addSource(tarball, dir='src')

        # fixes from ximian bugzilla
        r.Replace('eval ./configure',
                  'sed -i "s/altlinuxyph/altlinuxhyph/g" configure; eval ./configure',
                  'bin/build-ooo')

        r.macros.patchSet = 'LinuxCommon, NotDebian'
        if Use.gnome:
            r.macros.patchSet += ', Lockdown'

        # we're getting into upstream, so this will go away soon
        r.Replace('^SUSE *:.+', 'rPath : %(patchSet)s' ,
                  'patches/%(ximianVersion)s/apply')

        # --------------------------
        #
        # configuration and install
        #
        # --------------------------

        extraConf = (  ' --with-distro=Foresight'
                       ' --disable-epm'                   # Don't include self-packaging code
                       ' --disable-fontooo'               # We use fonconfig for OO
                       ' --disable-mono'                  # Don't want mono bindings
                       ' --disable-odk'                   # office development kit
                       ' --disable-post-install-scripts'  # Not user installation
                       ' --disable-strip'                 # we use eu-strip
                       ' --disable-qadevooo'              # qa testsuites
                       ' --without-fonts'                 # We already has fonts
                       ' --with-build-version="Built for rPath linux"'
                       ' --with-installed-ooo-dirname="%(fullName)s"'
                       ' --with-lang=ALL --with-dict=ALL'
                       ' --with-num-cpus=2'
                       ' --with-package-format=portable'
                       ' --disable-access'                # Disable the Access import pieces.
                       ' --disable-cairo'                 # Experimental
                       ' --enable-libart'                 # Enables the use of libart, instead of GPC for
                                                          # polygon clipping.
                       ' --enable-libsn'                  # Enables the use of libstartup-notification
                       ' --enable-openldap'               # Enables the use of the OpenLDAP LDAP SDK instead
                                                           # of the Netscape/Mozilla one
                       ' --with-java'                 
                       ' --without-system-xmlsec'         # Don't have it packaged and doesn't sure we need it
                       ' --without-system-altlinuxhyph'   #
                       ' --with-system-libs'              # Try to use system versions instead of internal ones
                       ' --with-system-python'
                       ' --with-system-mozilla'
                       ' --with-system-boost'
                       ' --with-system-odbc-headers'
                       ' --with-system-sane-header'
                       ' --with-system-xrender-headers'
                       ' --without-system-portaudio'      # portaudio interface is unstable and OOo keeps changing which it requires
                       ' --without-system-db'             # uses db 4.2, we use a higher version
                       ' --without-system-hsqldb'         # we don't do java, but configure looks anyway
                       ' --without-system-beanshell'      # ditto
                       ' --without-system-xml-apis --without-system-xerces --without-system-xalan' # ditto
                       # FIXME: remove this when oo-build-2-0-3 is out and use that build tarball instead
                       ' --with-tag=OOO_2_0_3'
                       ' --enable-lockdown'            # Enables the gconf integration work in OOo
                       ' --enable-gnome-vfs'
                       ' --enable-evolution2'
                       ' --disable-kde'
                       ' --enable-gtk' )

        r.Automake(autoMakeArgs='--gnu --add-missing --copy')
        r.Configure(extraConf, preConfigure='PATH=$PATH:%(sbindir)s')

        # Unpack OO upstream sources, must be done after configure so that the
        # makefile is there; apply any patches we need directly to the unpacked
        # upstream tarball
        r.Make('unpack')
        r.Replace('for v in 1 2', 'for v in 1 2 3 4', 'build/OOO_*/config_office/configure*')
        r.Run('cd %(builddir)s/build && patch -p0 < deliver.pl.nojava.patch')

        # compile the program
        r.Make(preMake='PATH=$PATH:/%(sbindir)s')

        # -------------------------------
        #
        # install and policyesque things
        #
        # -------------------------------

        r.MakeInstall()

        # make sure basedir exists... we ran into this problem before. can't
        # use an assert since that would be run before everything else
        r.Run('test -d "%(destdir)s/%(basedir)s"')

        r.AutoDoc(exceptions='/.+/')

        # Make LangPacks
        langs = [ 'af', 'ar', 'be-BY', 'bg', 'bn', 'ca', 'cs', 'cy', 'da', 'de', 'el',
                  'en-GB', 'eo', 'es', 'et', 'eu', 'fi', 'fr', 'ga', 'gl', 'gu-IN', 'he',
                  'hi-IN', 'hr', 'hu', 'it', 'ja', 'km', 'kn-IN', 'ko', 'lo', 'lt', 'ms',
                  'nb', 'ne', 'nl', 'nn', 'nr', 'ns', 'pa-IN', 'pl', 'pt', 'pt-BR', 'ru',
                  'rw', 'sh-YU', 'sk', 'sl', 'sr-CS', 'ss', 'st', 'sv', 'sw-TZ', 'ta-IN',
                  'th', 'tn', 'tr', 'ts', 've', 'vi', 'xh', 'zh-CN', 'zh-TW', 'zu' ]


        for lang in langs:
            for file in (
                '%%(basedir)s/program/resource/.+%s\.res' % lang,
                '%%(basedir)s/(licenses|share/readme|readmes)/.+_%s(\.html)?' % lang,
                '%%(basedir)s/share/registry/res/%s.*' % lang,
                '%%(basedir)s/share/(autotext|template|wordbook)/%s.*' % lang,
                '%%(basedir)s/presets/config/.+_%s\.+' % lang ):

                       r.ComponentSpec('locale' , file)

        # That is ugly, but might be useful later in time
        langsCustom = {
               'ja': ('81.+',),
               'ko': ('82.+',),
            'zh-CN': ('86.+',),
            'zh-TW': ('88.+',),
               'da': ('klassisk.sog', 'pilespds.soe', 'skraver.soh', 'streger.sod'),
               'de': ('aktuell.sog', 'enden.soe', 'farben.soc', 'klassik.sog',
                      'linien.sod', 'schraffu.soh'),
            'en-GB': ('arrowhead.soe', 'colours.soc', 'drawstyles.sod', 'hatch.soh'),
               'es': ('clasico.sog', 'finlinea.soe', 'nuevo.sog', 'stilos.sod',
                      'tramas.soh'),
               'fr': ('chic.sod', 'classique.sog', 'couleur.soc', 'extrem.soe',
                      'hachures.soh', 'moderne.sog'),
               'it': ('classico.sog', 'colore.soc', 'estrem.soe', 'moderno.sog',
                      'stili.sod', 'tratto.soh'),
               'nl': ('arcer.soh', 'einden.soe', 'klassiek.sog', 'modieus.sog',
                      'palet.soc', 'stijlen.sod'),
               'pt': ('actual.sog', 'cor.soc', 'estilos.sod', 'fimlinha.soe',
                      'singelo.sog', 'sombread.soh'),
            'pt-BR': ('Classico.sog', 'Linhas.sod', 'Palheta.soc',
                      'PreenchimentoDePadrao.soh', 'Ptseta.soe', 'Vigente.sog'),
               'sl': ('klasika.sog', 'palete.soc', 'puscice.soe', 'slogi.sod',
                      'srafure.soh'),
               'sv': ('elegant.sog', 'faerg.soc', 'formellt.sog', 'moenster.soh',
                      'slut.soe', 'stil.sod') }

        for lang, files in langsCustom.items():
            for file in files:
                r.ComponentSpec('locale',
                              '%%(basedir)s/presets/config/%s' % file)

        for prog in ('base', 'calc', 'draw', 'ffice', 'fromtemplate',
                     'impress', 'math', 'web', 'writer'):
            r.Symlink('oo%s2.0' %prog, '/usr/bin/oo%s' %prog)


        vclPlugins = {
            'gtk': ( 'libvclplug_gtk680li.so', ),
          'gnome': ( 'gconfbe1.uno.so', 'gnome-set-default-application',
                     'libevoab2.so' ) }

        for plugin in vclPlugins.keys():
            for file in vclPlugins[plugin]:
                r.ComponentSpec(plugin, '%(basedir)s/program/'+file)

        # Many of the libraries that openoffice links to do not actually
        # have sonames compiled into them.  We just synthesize all the
        # sonames for lib*.so files in the program directory that do not
        # have a soname built in.
        libs = ( 'abp645li', 'adabas2', 'analysis645li', 'avmedia680li',
            'basctl645li', 'basegfx680li', 'bf_ofa680li',
            'bf_svx680li', 'bf_xo680li', 'bib645li', 'cached1',
            'calc645li', 'canvastools680li', 'cfgmgr2', 'cmdmail',
            'cnt645li', 'communi680li', 'comphelp3gcc3',
            'comphelp4gcc3', 'cppcanvas680li', 'ctl645li',
            'date645li', 'dba645li', 'dbase645li', 'dbi645li',
            'dbp645li', 'dbpool2', 'dbtools2', 'dbtools680li',
            'dbu645li', 'dict_ja', 'dict_zh', 'dtransX11645li',
            'eggtray680li', 'evoab1', 'evtatt', 'file645li',
            'file680li', 'fileacc', 'flash645li', 'flat645li',
            'frm645li', 'fwe645li', 'fwe680li', 'fwi645li', 'fwi680li',
            'fwk645li', 'fwl645li', 'gcc3_uno', 'go645li', 'go680li',
            'hyphen645li', 'i18n645li', 'i18npool645li', 'i18npool.uno'
            'i18nregexpgcc3', 'i18nregexpgcc3', 'i18npool.uno', 'i18nsearch',
            'i18nutilgcc3', 'j645li_g', 'j680li_g', 'lng645li', 'lng680li',
            'localedata_en', 'localedata_es', 'localedata_euro',
            'localedata_others', 'lth645li', 'mcnttype', 'myspell', 'mysql2',
            'odbc2', 'odbcbase2', 'ofa645li', 'offacc645li', 'package2',
            'pcr645li', 'pdffilter645li', 'pk645li', 'pkgchk645li', 'pl645li',
            'placewareli', 'preload645li', 'proxyset', 'psp645li', 'pyuno',
            'regmimetypes645li', 'res645li', 'sb645li', 'sb680li', 'sc645li',
            'sc680li', 'sch645li', 'scn645li', 'sd645li', 'sd680li', 'sdbc2',
            'set645li', 'sfx645li', 'sfx680li', 'simplecm680li', 'sm645li',
            'so645li', 'so680li', 'sot645li', 'sot680li', 'spa645li',
            'spa680li', 'spell645li', 'spl645li', 'srtrs1', 'stlport_gcc',
            'sts645li', 'svg645li', 'svl645li', 'svl680li', 'svt645li',
            'svt680li', 'svx645li', 'svx680li', 'sw645li', 'sw680li', 'syssh',
            'tk645li', 'tk680li', 'tl645li', 'tl680li', 'tplx645li', 'tvhlp1',
            'ucb1', 'ucbhelper2gcc3', 'ucbhelper3gcc3', 'ucpchelp1', 'ucpdav1',
            'ucpfile1', 'ucpftp1', 'ucphier1', 'ucppkg1', 'ulingu645li',
            'urp_uno', 'usp645li', 'utl645li', 'utl680li', 'uui645li',
            'vcl645li', 'vcl680li', 'vclplug_gen680li', 'vos3gcc3', 'wrp645li',
            'xcr645li', 'xcr680li', 'xmx645li', 'xo645li', 'xo680li',
            'xod645li', 'xsltdlg645li', 'xsltfilter645li', 'zip645li',
            'embobj', 'hunspell', 'i18nisolang1gcc3',)

        for libname in libs:
            r.Provides('soname: lib%s.so' % libname,
                       '%%(basedir)s/program/lib%s.so' % libname)

        #for libname, soname in [ ('', '3'), ]

        # for some reason, conary can't find libldap50.so, even though
        # mozilla:lib provides it at /usr/lib/mozilla-1.7.13/libldap50.so. so,
        # we white out the dep and manually require mozilla:lib. we cannot
        # manually require the RPATH because mozilla:lib does not explicitly
        # provide it
        r.Requires(exceptDeps='soname: .*libldap50.so.*')
        r.Requires('mozilla:lib', '%(basedir)s/program/ooqstart')

        # flavor policy takes over 3.5 hours(!!) to run without this line. the
        # things in these directories are all data files which don't affect the
        # flavor anyway, and now we don't have to scan 23,000 of the 24,000
        # files in openoffice.org. Since all the libs and the executable is not
        # contained in these exceptions, the flavor is still set correctly.
        # If/when Flavor policy is sped up, this should be removed
        r.Flavor(exceptions='%(basedir)s/(share|program/resource)/.*')
