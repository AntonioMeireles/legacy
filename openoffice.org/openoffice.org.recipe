#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('javapackage=conary.rpath.com@rpl:devel')
class OpenOffice(JavaPackageRecipe, CPackageRecipe):
    name = 'openoffice.org'
    version = '2.2.0_m18'

    buildRequires = [
        'agg:devel', 'ant:java', 'ant:runtime', 'atk:devel', 'autoconf:runtime',
        'automake:runtime', 'bison:runtime', 'boost:devel', 'cairo:devel',
        'cups:devel', 'curl:devel', 'db:devel', 'db:java', 'dbus-glib:devel',
        'dbus:devel', 'desktop-file-utils:runtime', 'eclipse:java',
        'expat:devel', 'flex:runtime', 'fontconfig:devel', 'freetype:devel',
        'gcc-c++:runtime', 'gjdoc:runtime', 'glib:devel',
        'gst-plugins-base:devel', 'gstreamer:devel', 'gtk:devel', 'icu:devel',
        'icu:runtime', 'imake:runtime', 'libart_lgpl:devel', 'libICE:devel',
        'libjpeg:devel', 'libpng:devel', 'libSM:devel', 'libsndfile:devel',
        'libstdc++:devel', 'libwpd:devel', 'libX11:devel', 'libXau:devel',
        'libXaw:devel', 'libXext:devel', 'libXinerama:devellib',
        'libxml2:devel', 'libXrender:devel', 'libxslt:runtime', 'libXt:devel',
        'man:runtime', 'mono:devel', 'mono:runtime', 'nas:devel', 'neon:devel',
        'nspr:devel', 'nss:devel', 'openldap:devel', 'pam:devel', 'pango:devel',
        'patch:runtime', 'perl-Archive-Zip:perl', 'perl-Compress-Zlib:perl',
        'perl:runtime', 'pkgconfig:devel', 'portaudio:devel', 'python:devel',
        'qt:devel', 'Sablot:devel', 'sane-backends:devel',
        'shared-mime-info:runtime', 'startup-notification:devel',
        'tcsh:runtime', 'unixODBC:devel', 'unzip:runtime',
        'userspace-kernel-headers:devel', 'util-linux:runtime', 'which:runtime',
        'xmlsec:devel', 'xulrunner:devel', 'zip:runtime', 'zlib:devel'
 ]

    use_kde = True
    use_gnome = True

    def setup(r):
        r.macros.fullName = 'OpenOffice.org-%(major_version)s'

        r.macros.patchLevel = 'OOF680'
        r.macros.milestone = r.version.split('_')[1]
        r.macros.lowerlevel = r.macros.patchLevel.lower()
        r.macros.snapshot = '%(lowerlevel)s-%(milestone)s'

        # used in loadManifest
        r.last_manifest_id = 0

        # From debian package
        r.help_langs = [
            'cs', 'da', 'de', 'dz', 'en-GB', 'es', 'et', 'fr', 'gl', 'hi-IN', 'hu',
            'it', 'ja', 'ko', 'nl', 'pl', 'pt-BR', 'ru', 'sl', 'sv', 'zh-CN', 'zh-TW'
        ]
        r.langs = [
            'af', 'as-IN', 'be-BY', 'bg', 'bn', 'br', 'bs', 'ca', 'cy', 'el',
            'en-ZA', 'eo', 'fa', 'fi', 'ga', 'gu-IN', 'he', 'hr', 'ku', 'lo', 'lt',
            'lv', 'mk', 'ml-IN', 'nb', 'ne', 'nn', 'nr', 'ns', 'or-IN', 'pa-IN',
            'pt', 'rw', 'sk', 'sr-CS', 'ss', 'st', 'ta-IN', 'te-IN', 'tg', 'th',
            'tn', 'tr', 'ts', 'uk', 've', 'vi', 'xh', 'zu'
        ]
        r.langs.extend(r.help_langs)

        # Saving only looks in /usr/lib/OpenOffice.org for some BASIC files
        # and does not respect --with-installed-ooo-dirname -- RPL-247
        r.macros.basedir = '%(libdir)s/%(fullName)s'

        r.macros.site = 'http://go-oo.org/packages'
        r.macros.cflags += ' -fno-strict-aliasing'

        # -------------------
        #
        # unpack the source
        #
        # -------------------

        r.addSvnSnapshot('http://svn.gnome.org/svn/ooo-build/trunk')

        # we call all these addSources so that the files are in our repository,
        # instead of running ./download like their build system wants
        #for x in ('core', 'system', 'lang', 'binfilter', 'sdk_oo'):
        for x in ('core', 'system', 'lang', 'binfilter'):
            r.addSource('%(site)s/%(patchLevel)s/%(snapshot)s-'+x+'.tar.bz2', dir='src')

        r.addSource('%(site)s/SRC680/ooo_crystal_images-6.tar.bz2', dir='src')
        r.addSource('%(site)s/SRC680/extras-2.tar.bz2', dir='src')
        r.addSource('%(site)s/xt/xt-20051206-src-only.zip', dir='src')
        r.addSource('%(site)s/SRC680/biblio.tar.bz2', dir='src')
        r.addSource('%(site)s/SRC680/lp_solve_5.5.tar.gz', dir='src')
        r.addSource('%(site)s/SRC680/mdbtools-0.6pre1.tar.gz', dir='src')
        r.addSource('%(site)s/OOF680/cli_types.dll', dir='src')
        r.addSource('%(site)s/OOF680/cli_types_bridgetest.dll', dir='src')
        r.addSource('%(site)s/SRC680/glitz-0.4.3.tar.gz', dir='src')
        r.addSource('%(site)s/SRC680/libwps-0.1.0.tar.gz', dir='src')
        r.addSource('http://tools.openoffice.org/unowinreg_prebuild/680//unowinreg.dll', dir='src')

        # Will use after patch.apply
        r.addSource('solenv-enable-soname.patch')

        # Fix typo in configure
        r.Replace('eval ./configure',
                  'sed -i "s/altlinuxyph/altlinuxhyph/g" configure; eval ./configure',
                  'bin/build-ooo')

        # --------------------------
        #
        # configuration and install
        #
        # --------------------------

        if r.use_kde:
            r.Environment('QTINC', '%(includedir)s/qt3')

        r.Environment('MONO_SHARED_DIR', '/tmp')

        # Packaging stuff
        extraConf = (
                       ' --with-tag=%(lowerlevel)s-%(milestone)s'
                       ' --with-lang=ALL --with-dict=ALL'
                       ' --with-binsuffix=%(major_version)s'
                       ' --with-installed-ooo-dirname="%(fullName)s"'
                       ' --with-docdir=%(thisdocdir)s'
                       ' --enable-binfilter'
                       ' --with-java=gij'
                       ' --with-use-shell=bash'
                       ' --enable-gcjaot'
                       ' --enable-gtk'
                       ' --with-agg'
                       ' --with-system-agg'
                       ' --with-system-db'
                       ' --with-system-nas'
                       ' --with-system-cairo'
                       ' --with-system-libwpd'
                       ' --with-system-xmlsec'
                       ' --with-system-portaudio'
                       # Probably we should add this
                       ' --without-system-libwps'
                       # I'm not sure if we need these in distro, but we should
                       # consider it
                       ' --without-system-xt'
                       ' --without-system-mdbtools'
                       ' --without-system-xml-apis'
                       ' --without-system-xerces'
                       ' --without-system-xalan'
                    )

        if Arch.x86_64:
            extraConf += ' --with-distro=rpl2-64'
        else:
            extraConf += ' --with-distro=rpl2'

        if r.use_kde:
            r.buildRequires.extend( [ 'kdelibs:devel', 'qt:devel' ] )
            extraConf += ' --enable-kde'
        else:
            extraConf += ' --disable-kde'

        if r.use_gnome:
            r.buildRequires.extend([
                'GConf:devel', 'gnome-vfs:devel', 'libbonobo:devel',
                'ORBit2:devel'
            ])
            extraConf += ( ' --enable-lockdown'
                           ' --enable-gnome-vfs'
                           ' --enable-evolution2')
        else:
            extraConf += ( ' --disable-lockdown'
                           ' --disable-gnome-vfs'
                           ' --disable-evolution2')

        r.Run('NOCONFIGURE=1 ./autogen.sh')
        r.Configure(extraConf, preConfigure='PATH=$PATH:%(sbindir)s')

        # Unpack OO upstream sources, must be done after configure so that the
        # makefile is there
        r.Make('unpack')

        # apply upstream sources
        r.Make('patch.apply')

        r.Run('cat solenv-enable-soname.patch | patch -d build/%(snapshot)s -p0')

        # compile the program
        r.Make(preMake='PATH=$PATH:/%(sbindir)s')

        # -------------------------------
        #
        # install and policyesque things
        #
        # -------------------------------

        r.MakeInstall()

        # This is not a help document
        r.ComponentSpec('runtime', '%(basedir)s/help/main_transform.xsl')

        for lang in r.help_langs + [ 'en-US', ]:
            r.ComponentSpec('doc-%s' % lang, '%%(basedir)s/help/%s/' % lang)

        r.ComponentSpec('doc-other', '%(basedir)s/help/')

        r.Run('cat build/lang_*_list.txt > build/lang_other_list.txt')
        for lang in r.langs + ['other']:
            r.loadManifest('lang_%s' % lang, ':locale-'+lang)

        for p in ('kde', 'gnome', 'mono'):
            r.loadManifest(p, ':'+p)

        # make sure basedir exists... we ran into this problem before. can't
        # use an assert since that would be run before everything else
        r.Run('test -d "%(destdir)s/%(basedir)s"')

        r.AutoDoc(exceptions='/.+/')

        r.ExcludeDirectories(exceptions='%(libdir)s/')

        r.TagSpec('desktop-file', '%(datadir)s/applications/')

        # flavor policy takes over 3.5 hours(!!) to run without this line. the
        # things in these directories are all data files which don't affect the
        # flavor anyway, and now we don't have to scan 23,000 of the 24,000
        # files in openoffice.org. Since all the libs and the executable is not
        # contained in these exceptions, the flavor is still set correctly.
        # If/when Flavor policy is sped up, this should be removed
        r.Flavor(exceptions='%(basedir)s/(share|program/resource)/.*')

        # These deps provided with OOO
        r.Requires(exceptDeps=r'java: org\.hsqldb\..*')
        r.Requires(exceptDeps=r'java: javax\.servlet\..*')
        r.Requires(exceptDeps=r'java: org\.apache\.xml\.resolver\..*')

    def loadManifest(r, file, package):

        # Hack, need better support from conary CNY-1502
        r.Run('/bin/true', package=package)
        r.Run('cat build/%s_list.txt | grep "^/" > ../_MANIFESTS_/.%d.manifest' \
                % (file, r.last_manifest_id))

        r.last_manifest_id += 1
