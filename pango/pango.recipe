#
# Copyright (c) 2004-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#


class Pango(CPackageRecipe):

    buildRequires = [ 'pkgconfig:devel', 'zlib:devel', 'libX11:devel', 'libXau:devel', 'libXdmcp:devel', 'libXext:devel', 'libXi:devel', 'libXinerama:devellib', 'libXrender:devel', 'libdmx:devel' , 'libICE:devel', 'libSM:devel', 'dbus:devel', 'dbus-glib:devellib', 'dbus-glib:devel', 'intltool:runtime', 'gnome-doc-utils:devel', 'gnome-doc-utils:runtime', 'glib:runtime', 'libXt:devel', 'libxslt:runtime', 'file:runtime', 'expat:devel', 'gettext:runtime', 'which:runtime', 'libtool:runtime', 'glib:devel', 'freetype:devel', 'fontconfig:devel', 'cairo:devel', 'expat:devel', 'libXft:devel', 'libpng:devel', 'perl:runtime' ]

    name = 'pango'
    version = '1.17.5'

    def setup(r):
        r.addArchive('http://ftp.acc.umu.se/pub/GNOME/sources/pango/1.17/')
        r.addSource('pangomodule.tagdescription', macros=True,
                    dest='%(tagdescriptiondir)s/pangomodule')
        r.addSource('pangomodule.taghandler', macros=True,
                    dest='%(taghandlerdir)s/pangomodule', mode=0755)
        r.macros.optflags = '-g -Os'
        r.Configure()
        r.Make()
        r.MakeInstall()
        
        # set up HOST definition for pango.modules location
        r.macros.host = r.macros.target
        if r.macros.target.endswith("linux"):
            # autotools appends -gnu to -linux
            r.macros.host += '-gnu'
        r.macros.qm = '%(bindir)s/pango-querymodules-%(host)s'
        r.macros.pm = '%(sysconfdir)s/pango/%(host)s/pango.modules'

        # separate querymodules for multilib installation
        r.Move('%(bindir)s/pango-querymodules', '%(qm)s')
        r.Remove('%(sysconfdir)s/pango/pango.modules')
        # zero-length config file
        r.Create('%(pm)s')

        # Files with %(host)s are really part of the library
        r.ComponentSpec('lib', '%(qm)s', '%(pm)s')
        r.ComponentSpec(catchall='data')
