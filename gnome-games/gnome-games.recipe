#
# Copyright (c) 2004-2006 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#
 
loadRecipe('gnomepackage.recipe')
class GnomeGames(GnomePackageRecipe):

    # disable gnometris in deference to trademark claim, see
    # http://en.wikipedia.org/wiki/Tetris and
    # http://lists.debian.org/debian-devel/1997/09/msg00417.html
    disable_gnometris = False
    disable_attax = True
    disable_blackjack = True
    disable_gnect = True
    disable_iagno = False
    disable_glines = True
    disable_gnotski = True
    disable_gnibbles = False
    disable_gnobots2 = True
    disable_samegnome = False
    #disable_gnomestones = True
    disable_gtali = True
    
    buildRequires =  [ 'libglade:devel', 'libgnome:devel',
        'libgnomeui:devel', 'GConf:devel', 'gnome-vfs:devel',
        'gtk:devel', 'librsvg:devel', 'guile:devel',
        'scrollkeeper:devellib', 'ORBit2:devel', 'atk:devel',
        'cairo:devel', 'fontconfig:devel', 'freetype:devel',
        'glib:devel', 'gnome-keyring:devel', 'gstreamer:devel',
        'libart_lgpl:devel', 'libbonobo:devel', 'libbonoboui:devel',
        'libgnomecanvas:devel', 'libICE:devel', 'libpng:devel',
        'libSM:devel',
        'libX11:devel', 'libXau:devel', 'libXdmcp:devel',
        'libXrender:devel', 'libxml2:devel',
        'pango:devel', 'popt:devel', 'audiofile:devel', 'esound:devel',
        'libstdc++:devel', 'GConf:runtime', 'desktop-file-utils:runtime',
        'gcc-c++:runtime', 'gettext:runtime', 'perl:runtime',
        'scrollkeeper:runtime', 'avahi:devel', 'gtk:runtime',
        'avahi-glib:devel', 'expat:devel', 'perl-XML-Parser:perl', ]

    name = 'gnome-games'
    version = '2.16.2'

    extraConfig = GnomePackageRecipe.extraConfig
    extraConfig += ' --disable-scrollkeeper --enable-omitgames=gataxx,blackjack,gnect,glines,gnotski,iagno,gnobots2,gtali,gnometris'

    def setup(r):
        GnomePackageRecipe.setup(r)

    def unpack(r):
        GnomePackageRecipe.unpack(r)
        r.macros.optflags = '-g -Os'

    def install(r):
	r.Run('echo >> libgames-support/libgnomegames.schemas')
        GnomePackageRecipe.install(r)
        r.ComponentSpec('runtime', '%(libdir)s/gnome-stones/objects/.*')

        if r.disable_gnometris:
            r.Remove('%(bindir)s/gnometris',
                     '%(datadir)s/applications/gnometris.desktop',
                     '%(datadir)s/pixmaps/gnometris',
                     '%(sysconfdir)s/gconf/schemas/gnometris.schemas',
                     recursive=True)

        if r.disable_attax:
            r.Remove('%(bindir)s/gataxx',
                     '%(datadir)s/applications/gataxx.desktop',
                     '%(datadir)s/pixmaps/gataxx.png',
                     '%(sysconfdir)s/gconf/schemas/gataxx.schemas',
                     recursive=True)

        if r.disable_blackjack:
            r.Remove('%(bindir)s/blackjack',
                     '%(datadir)s/applications/blackjack.desktop',
                     '%(datadir)s/pixmaps/blackjack',
                     '%(sysconfdir)s/gconf/schemas/blackjack.schemas',
                     recursive=True)

        if r.disable_gnect:
            r.Remove('%(bindir)s/gnect',
                     '%(datadir)s/applications/gnect.desktop',
                     '%(datadir)s/pixmaps/gnect',
                     '%(sysconfdir)s/gconf/schemas/gnect.schemas',
                     recursive=True)

        if r.disable_iagno:
            r.Remove('%(bindir)s/iagno',
                     '%(datadir)s/applications/iagno.desktop',
                     '%(datadir)s/pixmaps/iagno',
                     '%(sysconfdir)s/gconf/schemas/iagno.schemas',
                     recursive=True)

        if r.disable_glines:
            r.Remove('%(bindir)s/glines',
                     '%(datadir)s/applications/glines.desktop',
                     '%(datadir)s/pixmaps/glines',
                     '%(sysconfdir)s/gconf/schemas/glines.schemas',
                     recursive=True)

        if r.disable_gnotski:
            r.Remove('%(bindir)s/gnotski',
                     '%(datadir)s/applications/gnotski.desktop',
                     '%(datadir)s/pixmaps/gnotski',
                     '%(sysconfdir)s/gconf/schemas/gnotski.schemas',
                     recursive=True)

        if r.disable_gnibbles:
            r.Remove('%(bindir)s/gnibbles',
                     '%(datadir)s/applications/gnibbles.desktop',
                     '%(datadir)s/pixmaps/gnibbles',
                     '%(sysconfdir)s/gconf/schemas/gnibbles.schemas',
                     recursive=True)

        if r.disable_gnobots2:
            r.Remove('%(bindir)s/gnobots2',
                     '%(datadir)s/applications/gnobots2.desktop',
                     '%(datadir)s/pixmaps/gnobots2',
                     '%(sysconfdir)s/gconf/schemas/gnobots2.schemas',
                     recursive=True)

        if r.disable_samegnome:
            r.Remove('%(bindir)s/same-gnome',
                     '%(datadir)s/applications/same-gnome.desktop',
                     '%(datadir)s/pixmaps/same-gnome',
                     '%(sysconfdir)s/gconf/schemas/same-gnome.schemas',
                     recursive=True)

        #if r.disable_gnomestones:
            #r.Remove('%(bindir)s/gnome-stones',
                     #'%(datadir)s/applications/gnome-stones.desktop',
                     #'%(datadir)s/pixmaps/gnome-stones',
                     #'%(sysconfdir)s/gconf/schemas/gnome-stones.schemas',
                     #recursive=True)

        if r.disable_gtali:
            r.Remove('%(bindir)s/gtali',
                     '%(datadir)s/applications/gtali.desktop',
                     '%(datadir)s/pixmaps/gtali',
                     '%(sysconfdir)s/gconf/schemas/gtali.schemas',
                     recursive=True)
