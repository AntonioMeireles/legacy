#
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Xinelib(RPMPackageRecipe,AutoPackageRecipe):

    name = 'xine-lib'
    version = '1.1.19'
    rpmRelease = '7.fc16'

    buildRequires = [
        'alsa-lib:devel', 'audiofile:devel', 'autoconf:runtime',
        'automake:runtime', 'bzip2:devel', 'djvulibre:devel', 'expat:devel',
        'flac:devel', 'freetype:devel', 'gcc-c++:runtime', 'GConf:devel',
        'ghostscript:devel', 'glib:devel',
        'gnome-vfs:devel', 'gtk:devel', 'ImageMagick:devel', 'jack:devel',
        'jasper:devel',
        'libbonobo:devel', 'libICE:devel', 'libjpeg:devel', 'libmng:devel',
	'libmodplug:devel', 'libogg:devel', 'libpng:devel', 'libSM:devel',
	'libtheora:devel', 'libtiff:devel', 'libvorbis:devel', 'libX11:devel',
	'libxcb:devel', 'libXext:devel', 'libXinerama:devel', 'libxml2:devel',
	'libXv:devel', 'libXvMC:devel', 'Mesa:devel', 'libgomp:devellib',
	 'module-init-tools:runtime', 'ORBit2:devel', 'pkgconfig:devel',
	'pulseaudio:devel', 'samba:devel', 'SDL:devel', 'speex:devel',
	'zlib:devel', 'aalib:devel', 'esound:devel', 'faad2:devel',
	'ffmpeg:devel', 'gettext:runtime', 'gpm:devel', 'intltool:runtime',
	'libcaca:devel', 'slang:devel', 'lcms:devel', 'libtool:devel', 'libv4l:devel',
	 ]

    rpmPatches = [
        'xine-lib-1.1.4-optflags.patch',
        'xine-lib-1.1.16.2-multilib.patch',
	'xine-lib-1.1.1-deepbind-939.patch',
	'xine-lib-1.1.17-avsync_hack.patch',
    'xine-lib-1.1.19-xvmclib_header.patch',
        ]

    # we don't want to use RPMs tarball...
    def unpack(r):
        r.addArchive('http://prdownloads.sourceforge.net/xine/') 

        r.addPatch('%(name)s-%(version)s-autotools.patch.bz2', rpm=r.srpm)
        r.addAction(""" touch -r configure.ac aclocal.m4; touch -r m4/optimizations.m4 m4/optimizations.m4.stamp""")

        for p in r.rpmPatches:
            r.addPatch(p, rpm=r.srpm)

        r.addAction("touch -r m4/optimizations.m4.stamp m4/optimizations.m4")

    def configure(r):
	# Not needed in 1.1.18
        # Avoid standard rpaths on lib64 archs:
        # r.Run("""sed -i -e 's|"/lib /usr/lib\b|"/%(lib)s %(libdir)s|' configure""")
        r.Run(""" touch -r configure.ac aclocal.m4 m4/optimizations.m4 m4/optimizations.m4.stamp m4/optimizations.m4.stamp m4/optimizations.m4""")
        r.Configure('--with-freetype --with-fontconfig --enable-antialiasing --with-external-ffmpeg --with-caca --disable-dxr3 --with-real-codecs-path=%(libdir)s/mplayer-codecs --with-w32-path=%(libdir)s/mplayer-codecs')

    def policy(r):
        r.PackageSpec('xine-lib-gnome', '%(libdir)s/xine/plugins/%(version)s/xineplug_inp_gnome_vfs.so')

