#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

loadSuperClass('rpmpackage')
class Parted(RPMPackageRecipe,CPackageRecipe):
    name = 'parted'
    version = '1.8.8'
    rpmRelease = '17.fc11'
    rpmPatches = [ '%(name)s-1.8.8-xvd.patch',
                   '%(name)s-1.8.8-devmapper-header.patch',
                   '%(name)s-1.8.8-noinst-headers.patch',
                   '%(name)s-1.8.8-manpage.patch',
                   '%(name)s-1.8.8-gcc-4.3.patch',
                   '%(name)s-1.8.8-nofixgpt.patch',
                   '%(name)s-1.8.8-alpha.patch',
                   '%(name)s-1.8.8-dospartrec.patch',
                   '%(name)s-1.8.8-appletv.patch',
                   '%(name)s-1.8.8-s390-compile.patch',
                   '%(name)s-1.8.8-sparc-enableraid.patch',
                   '%(name)s-1.8.8-avoid-none-stat.patch',
                   '%(name)s-1.8.8-newgcc4.4.patch',
                   '%(name)s-1.8.8-return-error-update-mode.patch',
                   '%(name)s-1.8.8-virtio.patch',
                   '%(name)s-1.8.8-dos-label-swap.patch',
                   '%(name)s-1.8.8-msdos-metadata.patch'] 

    buildRequires = [ 'e2fsprogs:devel', 'libtool:runtime',
                      'install-info:runtime', 'autoconf:runtime', 'automake:runtime',
                      'xdelta:devel', 'gettext:devel', 'libtool:runtime',
                      'readline:devel', 'libtermcap:devel', 'ncurses:devel',
                      'pkgconfig:devel', 'check:devel', 'device-mapper:devel',
                      'gettext:runtime', 'intltool:runtime', 'util-linux:devel']

    def setup(r):
        RPMPackageRecipe.unpack(r)

        if 'LINGUAS' in os.environ:
            del os.environ['LINGUAS']

        r.Configure(' --enable-device-mapper  --enable-shared --enable-part-static --enable-pc98=no'
                    ' --enable-Werror=no --disable-dynamic-loading --with-readline')
        r.Make('LIBTOOL=/usr/bin/libtool', preMake='tagname=CC')
        r.MakeInstall('LIBTOOL=/usr/bin/libtool MKINSTALLDIRS=`pwd`/mkinstalldirs', preMake='tagname=CC')
        r.Doc('doc/API', 'doc/FAT')
