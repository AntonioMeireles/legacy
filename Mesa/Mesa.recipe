#
# Copyright (c) 2005-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Mesa(CPackageRecipe):
    name = 'Mesa'
    version = '6.5.3'

    # file is needed for the mklib script, which seems to be an alternative to
    # the ever-so-loved libtool
    buildRequires = [ 'file:runtime', 'libX11:devel', 'libXau:devel',
        'libXdamage:devel', 'libXdmcp:devel', 'libXext:devel', 'libxcb:devel',
        'libXfixes:devel', 'libXt:devel', 'libstdc++:devel', 'pkgconfig:devel' ]

    # DRI
    buildRequires.extend([ 'expat:devel', 'glproto:devel', 'libXxf86vm:devel',
        'libdrm:devel' ])

    buildRequires.extend(['distro-release:runtime'])

    def setup(r):
        if r.macros.version.find('rc') >= 0:
            r.macros.site = 'http://www.mesa3d.org/beta'
            r.macros.suffix = 'gz'
        else:
            r.macros.site = 'mirror://sourceforge/mesa3d'
            r.macros.suffix = 'gz'
        r.addArchive('%(site)s/MesaLib-%(version)s.tar.%(suffix)s')

        # XXX: Until Mesa build architecture is fixed the demos require MesaLib
        # sources to build
        r.addArchive('%(site)s/MesaDemos-%(version)s.tar.%(suffix)s')

        srpm='http://download.fedora.redhat.com/pub/fedora/linux/core/development/source/SRPMS/mesa-6.5.2-10.fc7.src.rpm'
        rpmPatches = [
            'mesa-6.5-dont-libglut-me-harder-ok-thx-bye.patch',
            #'mesa-6.5.2-xserver-1.1-source-compat.patch',
            # 'mesa-6.5.2-r300-parallel-build.patch',
#            'mesa-6.5.2-libgl-visibility.patch',
#            'mesa-6.5.2-picify-dri-drivers.patch',
            'mesa-6.5.2-hush-synthetic-visual-warning.patch',
            'mesa-6.5.2-bindcontext-paranoia.patch',
            # 'mesa-6.5.2-radeon-backports-231787.patch', 
	]

        for p in rpmPatches:
            r.addPatch(p, rpm=srpm)





        # based on mesa-6.5-build-config.patch from Fedora CVS
        r.Replace(('MKDEP = makedepend', 'MKDEP = gcc -M -MG'),
                  ('MKDEP_OPTIONS = -fdepend', 'MKDEP_OPTIONS = -MF depend'),
                  ('INSTALL_DIR = /usr/local', 'INSTALL_DIR = %(destdir)s/%(prefix)s'),
                  ('DRI_DRIVER_INSTALL_DIR = /usr/X11R6/lib/modules/dri', 'DRI_DRIVER_INSTALL_DIR = %(destdir)s/%(libdir)s/dri'),
                  ('DRI_DRIVER_SEARCH_DIR = \$\(DRI_DRIVER_INSTALL_DIR\)', 'DRI_DRIVER_SEARCH_DIR = %(libdir)s/dri'),
                  'configs/default')

        for config in ('linux', 'linux-dri'):
            r.Replace(('ARCH_FLAGS \?=', 'ARCH_FLAGS ?= -DGLX_USE_TLS'),
                      ('X11_INCLUDES = -I/usr/X11R6/include', 'X11_INCLUDES ='),
                      ('EXTRA_LIB_PATH=-L/usr/X11R6/lib', 'EXTRA_LIB_PATH ='),
                      'configs/' + config)

        for config in ('x86', 'x86-64'):
            r.Replace(('ARCH_FLAGS =', 'ARCH_FLAGS +='),
                      'configs/linux-dri-' + config)

        r.Replace(('EXTRA_LIB_PATH=-L/usr/X11R6/lib64', 'EXTRA_LIB_PATH ='),
                  'configs/linux-dri-x86-64')

        # copied from Fedora spec file; this file is not F/OSS
        r.Remove('include/GL/uglglutshapes.h')

        # see fd.o BZ # 4095
        r.Replace('#define DEFAULT_DRIVER_DIR "/usr/X11R6/lib/modules/dri"',
                  '#define DEFAULT_DRIVER_DIR "%(libdir)s/dri"',
                  'src/glx/x11/dri_glx.c')


        # XXX: we don't supply any version of GLUT
        r.Replace('APP_LIB_DEPS = -L\$\(TOP\)\/\$\(LIB_DIR\) -l\$\(GLUT_LIB\) -l\$\(GLU_LIB\) -l\$\(GL_LIB\) -lm',
                  'APP_LIB_DEPS = -L$(TOP)/$(LIB_DIR) -l$(GLU_LIB) -l$(GL_LIB) -lm',
                  'configs/default')

        # patchlet to make rMake happy
        r.Replace('\$\(CC\) \$\(CFLAGS\) glxgears.c -lGL -o \$@',
                  '$(CC) $(CFLAGS) glxgears.c  -I$(INCDIR) -L$(TOP)/lib -L$(TOP)/lib64 -lGL -lGLU -o $@',
                  'progs/xdemos/Makefile')

        # nouveau is breaking even with patched libdrm
        r.Replace('nouveau', ' ', 'configs/linux-dri')

        # XCB
        for config in ('linux', 'linux-dri'):
            r.Run(""" echo "DEFINES += -DUSE_XCB" >> configs/%s """ % config)
            r.Run(""" echo "X11_INCLUDES += `pkg-config --cflags-only-I xcb` `pkg-config --cflags-only-I x11-xcb` `pkg-config --cflags-only-I xcb-glx`" >> configs/%s """ % config)
            r.Run(""" echo "GL_LIB_DEPS += `pkg-config --libs xcb` `pkg-config --libs x11-xcb` `pkg-config --libs xcb-glx`" >> configs/%s """ % config)
            
        r.macros.mesaDri= '-dri'

        r.macros.mesaArch = ''
        if Arch.x86:
            r.macros.mesaArch = '-x86'
        elif Arch.x86_64:
            r.macros.mesaArch = '-x86-64'
        elif Arch.ppc:
            r.macros.mesaArch = '-ppc'

        r.Make('linux%(mesaDri)s%(mesaArch)s')

        r.Make('-C progs/xdemos glxgears glxinfo')

        r.MakeInstall()

        # XXX: until MesaDemos can build separately
        r.Install('progs/xdemos/glx{info,gears}', '%(bindir)s/')
        r.PackageSpec('glx-utils', '%(bindir)s/glx.*')

        # XXX: until conary has overrides
        # we remove the files that conflict with proprietary drivers
        # by having flavoured Mesa's

        if Use.nvidia:
            r.Remove('%(libdir)s/libGL.s*')
        if Use.ati:
            r.Remove('%(libdir)s/libGL.s*')
