#
# Copyright (c) 2005-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Mesa(CPackageRecipe):
    name = 'Mesa'
    version = '7.0.1'

    # file is needed for the mklib script, which seems to be an alternative to
    # the ever-so-loved libtool
    buildRequires = [ 'file:runtime', 'libX11:devel', 'libXau:devel',
        'libXdmcp:devel', 'libXext:devel', 'libXt:devel', 'libstdc++:devel',
        'pkgconfig:devel', 'makedepend:runtime', 'expat:devel', 'glproto:devel',
        'libXxf86vm:devel', 'libdrm:devel', 'libXdamage:devel',
        'libXfixes:devel', ]

    def setup(r):
        # Parallel builds appear to have problems in some cases.
        r.disableParallelMake()
        r.macros.site = 'mirror://sourceforge/mesa3d'
        r.addArchive('%(site)s/MesaLib-%(version)s.tar.bz2')

        # XXX: Until Mesa build architecture is fixed the demos require MesaLib
        # sources to build
        r.addArchive('%(site)s/MesaDemos-%(version)s.tar.bz2')

        # based on mesa-6.5-build-config.patch from Fedora CVS
        r.Replace(('MKDEP = makedepend', 'MKDEP = gcc -M -MG'),
                  ('MKDEP_OPTIONS = -fdepend', 'MKDEP_OPTIONS = -MF depend'),
                  ('INSTALL_DIR = /usr/local', 'INSTALL_DIR = %(destdir)s/%(prefix)s'),
                  ('DRI_DRIVER_INSTALL_DIR = /usr/X11R6/lib/modules/dri', 'DRI_DRIVER_INSTALL_DIR = %(destdir)s/%(libdir)s/dri'),
                  ('DRI_DRIVER_SEARCH_DIR = \$\(DRI_DRIVER_INSTALL_DIR\)', 'DRI_DRIVER_SEARCH_DIR = %(libdir)s/dri'),
                  'configs/default')

        for config in ('linux', 'linux-dri'):
            r.Replace(('ARCH_FLAGS \?=', 'ARCH_FLAGS ?= -DGLX_USE_TLS'),
                      ('X11_INCLUDES = -I/usr/X11R6/include', 'X11_INCLUDES ='),
                      ('EXTRA_LIB_PATH=-L/usr/X11R6/lib', 'EXTRA_LIB_PATH ='),
                      'configs/' + config)

        for config in ('x86', 'x86-64'):
            r.Replace(('ARCH_FLAGS =', 'ARCH_FLAGS +='),
                      'configs/linux-dri-' + config)

        r.Replace(('EXTRA_LIB_PATH=-L/usr/X11R6/lib64', 'EXTRA_LIB_PATH ='),
                  'configs/linux-dri-x86-64')

        # copied from Fedora spec file; this file is not F/OSS
        r.Remove('include/GL/uglglutshapes.h')

        # see fd.o BZ # 4095
        r.Replace('#define DEFAULT_DRIVER_DIR "/usr/X11R6/lib/modules/dri"',
                  '#define DEFAULT_DRIVER_DIR "%(libdir)s/dri"',
                  'src/glx/x11/dri_glx.c')

        # based on Fedora modifications & suggestions from Pavel Volkovitskiy
        # r.Replace(('INCLUDE_DIR=\$1/include', 'INCLUDE_DIR="$1/%(includedir)s"'),
        #           ('LIB_DIR=\$1/lib', 'LIB_DIR="$1/%(libdir)s"'),
        #           'bin/installmesa')

        # based on Fedora patch to enable Motif support in libGLw
        # XXX: disabled b/c it requires openmotif which is only in contrib
        #r.Replace('GLW_LIB_DEPS = -L\$\(LIB_DIR\) -l\$\(GL_LIB\) \$\(EXTRA_LIB_PATH\) -lXt -lX11',
        #    'GLW_LIB_DEPS = -L$(LIB_DIR) -l$(GL_LIB) -lXm $(EXTRA_LIB_PATH) -lXt -lX11',
        #    'configs/default')

        # XXX: we don't supply any version of GLUT
        r.Replace('APP_LIB_DEPS = -L\$\(TOP\)\/\$\(LIB_DIR\) -l\$\(GLUT_LIB\) -l\$\(GLU_LIB\) -l\$\(GL_LIB\) -lm',
                  'APP_LIB_DEPS = -L$(TOP)/$(LIB_DIR) -l$(GLU_LIB) -l$(GL_LIB) -lm',
                  'configs/default')

        r.macros.mesaDri= '-dri'

        r.macros.mesaArch = ''
        if Arch.x86:
            r.macros.mesaArch = '-x86'
        elif Arch.x86_64:
            r.macros.mesaArch = '-x86-64'
        elif Arch.ppc:
            r.macros.mesaArch = '-ppc'

        r.Make('linux%(mesaDri)s%(mesaArch)s')

        r.Make('-C progs/xdemos glxgears glxinfo')

        r.MakeInstall()

        # Mesa's build system doesn't install the DRI drivers even when you
        # choose a DRI config
        r.Install('%(lib)s/*_dri.so', '%(libdir)s/dri/') 

        # XXX: until MesaDemos can build separately
        r.Install('progs/xdemos/glx{info,gears}', '%(bindir)s/')
        r.PackageSpec('glx-utils', '%(bindir)s/glx.*')
