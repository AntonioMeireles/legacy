#
# Copyright (c) 2004-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Coreutils(CPackageRecipe):
    name = 'coreutils'
    version = '6.9'

    buildRequires = [ 'automake:runtime', 'bison:runtime',
                      'autoconf:runtime', 'texinfo:runtime',
                      'gettext:runtime', 'libtool:runtime',
                      'libtermcap:devel', 'perl:lib',
                      'bash:runtime', 'perl:runtime',  ]
    if not Use.bootstrap:
        buildRequires += ['bash:runtime', 'acl:devel', 'pam:devel' ]

    def setup(r):
        r.addArchive('mirror://gnu/%(name)s/', keyid='D333CBA1')

        # glibc-2.6 started defining futimens, and this new defination differs
        # from that of gnulib, which is shipped as part of many pieces of gnu
        # software. presumably this will be fixed in the next release of this
        # package, but for now we hack around the problem
        r.Replace('futimens', 'gl_futimens',
            'lib/utimens.c', 'lib/utimens.h', # in gnulib
            'src/copy.c', 'src/touch.c') # in coreutils

        # This patch is likely to require indefinite maintenance,
        # because adding PAM support to coreutils does not accord
        # with RMS's policy for the su utility.
        r.addPatch('coreutils-pam.patch', use=not Use.bootstrap)
        r.addSource('DIR_COLORS', dest='%(sysconfdir)s/', mode=0644)
        r.addSource('DIR_COLORS.xterm', dest='%(sysconfdir)s/', mode=0644)
        r.addSource('colorls.sh', dest='%(sysconfdir)s/profile.d/', mode=0755)
        r.addSource('colorls.csh', dest='%(sysconfdir)s/profile.d/', mode=0755)
        r.addSource('su.pamd', dest='%(sysconfdir)s/pam.d/su', mode=0644,
                    use=not Use.bootstrap)

        # programs which should be in /bin, not /usr/bin
        r.macros.binprogs = (
            'basename,cat,chgrp,chmod,chown,cp,cut,date,dd,echo,env,'
            'false,link,ln,ls,mkdir,mknod,mv,nice,pwd,rm,rmdir,sleep,sort,'
            'stty,sync,touch,true,uname,unlink')
        if not Use.bootstrap:
            # coreutils doesn't build df when cross-compiling
            r.macros.binprogs += ',df'

        extraConfig = '--enable-largefiles'
        extraMake = ''
        if not Use.bootstrap:
            extraConfig += ' --enable-pam'
            extraMake += ' su_LDFLAGS="-lpam -lpam_misc"'
            r.macros.cppflags += ' -DUSE_PAM'
        else:
            extraMake += ' AR=%(target)s-ar'

        if Use.bootstrap:
            # help2man (used to create the docs) requires that you be
            # able to execute the created binaries, not possible when
            # cross-compiling
            r.Replace('SUBDIRS = (.*) man (.*)',
                      r'SUBDIRS = \1 \2', 'Makefile{.in,.am}')

        r.Configure(extraConfig)
        r.Make(extraMake)
        r.MakeInstall()

        r.Install('src/su', '%(essentialbindir)s/', mode=04755)
        # if/when runuser makes it into upstream coreutils, change this symlink
        r.Symlink('%(essentialbindir)s/su', '%(essentialsbindir)s/runuser')
        r.Move('%(bindir)s/{%(binprogs)s}', '%(essentialbindir)s/')
        r.Move('%(bindir)s/chroot', '%(sbindir)s/chroot')
        r.Symlink('%(essentialbindir)s/cut', '%(bindir)s/cut')
        r.Symlink('%(essentialbindir)s/env', '%(bindir)s/env')
        r.Remove('%(bindir)s/uptime', '%(mandir)s/man1/uptime.1*')
        r.Remove('%(bindir)s/kill', '%(mandir)s/man1/kill.1*')
        r.Remove('%(bindir)s/hostname', '%(mandir)s/man1/hostname.1*')
        r.Symlink('test', '%(bindir)s/[')
        r.TagSpec('info-file', '%(infodir)s/coreutils.info.gz')

        r.TestSuite('tests', 'make check-TESTS', recursive=True, ignore=None)
