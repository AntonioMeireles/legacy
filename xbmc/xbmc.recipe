# vim:set ts=4 sw=4 et:
#
# Copyright (c) 2009 Foresight Linux
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class Xbmc(AutoPackageRecipe):
    name = 'xbmc'
    version = '10.1'
 
    buildRequires = ['Mesa:devel', 'PIL:python',
                    'PyQt:python', 'SDL:devel',
                    'SDL_image:devel', 'SDL_mixer:devel',
                    'alsa-lib:devel', 'autoconf:data',
                    'autoconf:runtime', 'automake:runtime',
                    'avahi:devel', 'bison:runtime',
                    'bluez:devel', 'boost:devel',
                    'bzip2:devel', 'cmake:runtime',
                    'curl:runtime', 'cvs:runtime',
                    'curl:devel', 'dbus:devel',
                    'desktop-file-utils:runtime', 'enca:devel',
                    'expat:devel', 'faac:devel',
                    'faad2:devel', 'ffmpeg:devel',
                    'flac:devel', 'flex:runtime',
                    'fontconfig:devel', 'freetype:devel',
                    'fribidi:devel', 'gcc-c++:runtime',
                    'gettext:runtime', 'git:runtime',
                    'glew:devel', 'glib:devel',
                    'gperf:runtime', 'hal:devel',
                    'intltool:runtime', 'jasper:devel',
                    'libICE:devel', 'libSM:devel',
                    'libX11:devel', 'libXScrnSaver:devel',
                    'libXau:devel', 'libXcomposite:devel',
                    'libXcursor:devel', 'libXdamage:devel',
                    'libXdmcp:devel', 'libXext:devel',
                    'libXfixes:devel', 'libXft:devel',
                    'libXi:devel', 'libXinerama:devel',
                    'libXmu:devel', 'libXpm:devel',
                    'libXrandr:devel', 'libXrender:devel',
                    'libXt:devel', 'libXtst:devel',
                    'libXv:devel', 'libXxf86misc:devel',
                    'libbluray:devel', 'libcdio:devel',
                    'libdvdread:devel', 'libjpeg:devel',
                    'libmad:devel', 'libmicrohttpd:devel',
                    'libmms:devel', 'libmodplug:devel',
                    'libogg:devel', 'libpng:devel',
                    'libsamplerate:devel', 'libstdc++:devel',
                    'libtermcap:devel', 'libtiff:devel',
                    'libtool:runtime', 'libva:devel',
                    'libvdpau:devel', 'libvorbis:devel',
                    'lzo:devel', 'mpeg2dec:devel',
                    'mysql:devel', 'nasm:runtime',
                    'ncurses:devel', 'openssl:devel',
                    'pcre-c++:devel', 'pcre:devel',
                    'pkgconfig:devel', 'pulseaudio:devel',
                    'pygobject:python', 'pygtk:python',
                    'python:devel', 'python-sqlite:python',
                    'readline:devel', 'rtmpdump:devel',
                    'samba:devel', 'samba-client:lib',
                    'sqlite:devel', 'subversion:runtime',
                    'tcl:devel', 'tk:devel',
                    'unzip:runtime', 'wavpack:devel',
                    'zip:runtime', 'zlib:devel', ]
  
    def unpack(r):
        r.addArchive('http://mirrors.xbmc.org/releases/source/')
        r.addPatch('xbmc-10-bootstrap.patch')
        r.addPatch('xbmc-10-dvdread.patch')
        r.addPatch('xbmc-10-disable-zlib-in-cximage.patch')
        r.addPatch('xbmc-10-Makefile.patch')
        r.macros.ldflags += ' -L%(libdir)s/xorg.mesa.3d/ -L%(libdir)s/mysql/'

    def configure(r):
        r.Run("""touch -r xbmc/screensavers/rsxs-0.9/aclocal.m4 \ $(find xbmc/screensavers/rsxs-0.9 \( -name 'configure.*' -o 'Makefile.*' \))""")
        r.Configure(configureName='bootstrap')
        r.Configure('--with-lirc-device=%(localstatedir)s/run/lirc/lircd --enable-goom --enable-external-ffmpeg --enable-external-python --disable-libdts --enable-liba52 --enable-dvdcss --enable-avahi --enable-libbluray --enable-faac --enable-rtmp --enable-mid --enable-vdpau --enable-vaapi --disable-optimizations --disable-debug')

    def make(r):
        r.Make()
        r.Make('-C lib/addons/script.module.pil')
        r.Make('-C lib/addons/script.module.pysqlite')

    def makeinstall(r):
        r.MakeInstall('DESTDIR=%(destdir)s')

    def policy(r):
        r.Requires('libbluray:lib', '%(name)s:runtime')
        r.Requires('rtmpdump:runtime', '%(name)s:runtime')
