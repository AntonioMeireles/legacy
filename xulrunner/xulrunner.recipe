#
# Copyright (c) 2006-2007 rPath, Inc.
# This file is distributed under the terms of the MIT License.
# A copy is available at http://www.rpath.com/permanent/mit-license.html
#

class XULRunner(AutoPackageRecipe):
    name = 'xulrunner'
    version = '1.8.1.2pre_2007013013'

    buildRequires = [
        'atk:devel', 'autoconf:runtime', 'cairo:devel',
        'desktop-file-utils:runtime',
        'doxygen:runtime', 'file:runtime', 'fontconfig:devel', 'freetype:devel',
        'gcc:devel', 'glib:devel', 'gtk:devel', 'krb5:devel', 'libgcc:devellib',
        'libICE:devel', 'libIDL:devel', 'libjpeg:devel', 'libpng:devel',
        'libSM:devel', 'libstdc++:devel', 'libX11:devel', 'libXau:devel',
        'libXdmcp:devel', 'libXext:devel', 'libXft:devel',
        'libXinerama:devellib', 'libXrender:devel', 'libXt:devel',
        'makedepend:runtime', 'nspr:devel', 'nss:devel', 'pango:devel',
        'perl:runtime', 'pkgconfig:devel', 'unzip:runtime', 'zip:runtime',
        'zlib:devel',
        # gnome-related buildreqs
        'GConf:devel', 'ORBit2:devel', 'gnome-vfs:devel',
        'libbonobo:devel', 'libgnome:devel', 'popt:devel',
        'gnome-keyring:devel', 'libart_lgpl:devel', 'libbonoboui:devel',
        'libgnomecanvas:devel', 'libgnomeui:devel', 'libxml2:devel',
        ]

    def unpack(r):
        r.disableParallelMake()
        r.addArchive('ftp://download.rpath.com/autosource/')

        patches = (
            'firefox-1.1-uriloader.patch',
            'firefox-1.5-pango-cursor-position.patch',
            'firefox-2.0-buildversion.patch',
            'firefox-unversioned-paths.patch',
            'moz310924.patch',
            'moz325644.patch',
            'nsIPermission.patch')

        for patch in patches:
            r.addPatch(patch)

        r.addSource('mozconfig', dest='.mozconfig', macros=True)

    def configure(r):
        # http://benjamin.smedbergs.us/blog/2005-10-27/gcc-40-workaround/
        r.Configure('--enable-gnomevfs --enable-gnomeui',
                    preConfigure='ac_cv_visibility_pragma=no')

    def policy(r):
        # We use separate nspr & nss
        r.Remove('%(libdir)s/pkgconfig/xulrunner-nspr.pc')
        r.Remove('%(libdir)s/pkgconfig/xulrunner-nss.pc')
